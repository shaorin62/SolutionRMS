'****************************************************************************************
'Generated By  : Kim Tae Ho 
'시스템구분    : RMS/PD/Server Control Class
'실행   환경   : COM+ Service Server Package
'프로그램명    : ccPDCOESTTYPE.vb
'기         능 : - 견적 TYPE유형 관리
'특이  사항    : - 복잡함....각오해야됨
'                -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2010.02.05 Kim Tae Ho
'            2) 
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports ePDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트
Public Class ccPDCOESTTYPE
    Inherits ccControl
#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccPDCOESTTYPE"                       '자신의 클래스명
    Private mobjcePD_ESTTYPE_HDR As ePDCO.cePD_ESTTYPE_HDR     'TYPE 헤더내역
    Private mobjcePD_ESTTYPE_DTL As ePDCO.cePD_ESTTYPE_DTL     'TYPE 상세내역
    Private mobjcePD_ESTSUBTYPE As ePDCO.cePD_ESTSUBTYPE       'TYPE - SUB
    Private mobjcePD_ESTSUBTYPE_INPUT As ePDCO.cePD_ESTSUBTYPE_INPUT       'TYPE - SUB
#End Region

#Region "GROUP BLOCK : Function Section"

    '=============== 견적 TYPE 유형 선택 팝업
    Public Function SelectRtn_HDRPOP(ByVal strInfoXML As String, _
                                     ByRef intRowCnt As Integer, _
                                     ByRef intColCnt As Integer, _
                                     ByVal strTYPENAME As String, _
                                     ByVal strCLIENTNAME As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim Con1, Con2

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                Con1 = "" : Con2 = ""

                If strTYPENAME <> "" Then Con1 = String.Format(" AND (TYPENAME like '%{0}%')", strTYPENAME)
                If strCLIENTNAME <> "" Then Con2 = String.Format(" AND (DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) like '%{0}%')", strCLIENTNAME)

                strWhere = BuildFields(" ", Con1, Con2)

                strFormat = " SELECT SEQ, "
                strFormat = strFormat & " TYPENAME, "
                strFormat = strFormat & " CLIENTCODE, "
                strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
                strFormat = strFormat & " SUSURATE, "
                strFormat = strFormat & " SUSUAMT, "
                strFormat = strFormat & " AMT, "
                strFormat = strFormat & " COMMISSION, "
                strFormat = strFormat & " NONECOMMISSION, SUMAMT "
                strFormat = strFormat & " FROM PD_ESTTYPE_HDR "
                strFormat = strFormat & " WHERE 1=1  {0} "
                strFormat = strFormat & " ORDER BY SEQ DESC "

                strSQL = String.Format(strFormat, strWhere)

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDRPOP")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '=============== 견적 TYPE 상단그리드 조회
    Public Function SelectRtn(ByVal strInfoXML As String, _
                              ByRef intRowCnt As Integer, _
                              ByRef intColCnt As Integer, _
                              ByVal strCLIENTCODE As String, _
                              ByVal strCLIENTNAME As String, _
                              ByVal strTYPENAME As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim Con1, Con2, Con3

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                Con1 = "" : Con2 = "" : Con3 = ""

                If strTYPENAME <> "" Then Con1 = String.Format(" AND (TYPENAME like '%{0}%')", strTYPENAME)
                If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (CLIENTCODE = '{0}')", strCLIENTCODE)
                If strCLIENTNAME <> "" Then Con3 = String.Format(" AND (DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) like '%{0}%')", strCLIENTNAME)

                strWhere = BuildFields(" ", Con1, Con2, Con3)

                strFormat = "SELECT "
                strFormat = strFormat & " 0 CHK, "
                strFormat = strFormat & " SEQ, "
                strFormat = strFormat & " TYPENAME, "
                strFormat = strFormat & " CLIENTCODE, "
                strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
                strFormat = strFormat & " SUSURATE, "
                strFormat = strFormat & " SUSUAMT, "
                strFormat = strFormat & " AMT, "
                strFormat = strFormat & " COMMISSION, "
                strFormat = strFormat & " NONECOMMISSION, SUMAMT "
                strFormat = strFormat & " FROM PD_ESTTYPE_HDR "
                strFormat = strFormat & " WHERE 1=1 "
                strFormat = strFormat & " {0} "
                strFormat = strFormat & " ORDER BY SEQ DESC "

                strSQL = String.Format(strFormat, strWhere)

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '=============== 견적 TYPE 상단그리드 조회
    '헤더 조회 삭제나 저장후에 원래 작업하던 데이터를 그대로 보여준다.
    Public Function SelectRtn_Return(ByVal strInfoXML As String, _
                                     ByRef intRowCnt As Integer, _
                                     ByRef intColCnt As Integer, _
                                     ByVal strHDRSEQ As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim Con1

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                Con1 = ""

                If strHDRSEQ <> "" Then Con1 = String.Format(" AND (SEQ = {0})", strHDRSEQ)

                strWhere = BuildFields(" ", Con1)

                strFormat = "SELECT "
                strFormat = strFormat & " SEQ, "
                strFormat = strFormat & " TYPENAME, "
                strFormat = strFormat & " CLIENTCODE, "
                strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
                strFormat = strFormat & " SUSURATE, "
                strFormat = strFormat & " SUSUAMT, "
                strFormat = strFormat & " AMT, "
                strFormat = strFormat & " COMMISSION, "
                strFormat = strFormat & " NONECOMMISSION, SUMAMT "
                strFormat = strFormat & " FROM PD_ESTTYPE_HDR "
                strFormat = strFormat & " WHERE 1=1 {0} "
                strFormat = strFormat & " ORDER BY SEQ DESC "

                strSQL = String.Format(strFormat, strWhere)

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Return")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '=============== 견적 TYPE 하단 XML 조회
    Public Function SelectRtn_HDR(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strSEQ As String) As String

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1
        Dim intRtn
        Dim strUSER

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strUSER = .WRKUSR

                Con1 = ""

                If strSEQ <> "" Then Con1 = String.Format(" AND (SEQ = {0})", strSEQ)

                strWhere = BuildFields(" ", Con1)

                strFormat = "SELECT "
                strFormat = strFormat & " SEQ, "
                strFormat = strFormat & " TYPENAME, "
                strFormat = strFormat & " CLIENTCODE, "
                strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
                strFormat = strFormat & " SUSURATE, "
                strFormat = strFormat & " SUSUAMT, "
                strFormat = strFormat & " AMT, "
                strFormat = strFormat & " COMMISSION, "
                strFormat = strFormat & " NONECOMMISSION, SUMAMT "
                strFormat = strFormat & " FROM PD_ESTTYPE_HDR "
                strFormat = strFormat & " WHERE 1=1 "
                strFormat = strFormat & " {0} "

                strSQL = String.Format(strFormat, strWhere)

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)

                ' ------ XML 데이터 조회
                strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)

                .mobjSCGLSql.SQLBeginTrans()
                mobjcePD_ESTTYPE_HDR = New cePD_ESTTYPE_HDR(mobjSCGLConfig)

                '여기에서 템프테이블 한번 삭제 
                intRtn = mobjcePD_ESTTYPE_HDR.TempDeleteDo(strUSER)
                .mobjSCGLSql.SQLCommitTrans()

                Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDR")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '=============== 견적 TYPE 하단 Sheet 조회
    Public Function SelectRtn_DTL(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strCODE As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim Con1

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                Con1 = ""

                If strCODE <> "" Then Con1 = String.Format(" AND (HDRSEQ = {0})", strCODE)

                strWhere = BuildFields(" ", Con1)

                strFormat = "SELECT  "
                strFormat = strFormat & " ROW_NUMBER() OVER (ORDER BY PRINT_SEQ) PRINT_SEQ, "
                strFormat = strFormat & " HDRSEQ, "
                strFormat = strFormat & " PREESTNO, "
                strFormat = strFormat & " ITEMCODESEQ, "
                strFormat = strFormat & " DBO.PD_ITEMDIVNAME_FUN(ITEMCODE) DIVNAME, "
                strFormat = strFormat & " DBO.PD_ITEMCLASSNAME_FUN(ITEMCODE) CLASSNAME, "
                strFormat = strFormat & " ITEMCODE, "
                strFormat = strFormat & " DBO.PD_ITEMCODENAME_FUN(ITEMCODE) ITEMCODENAME, "
                strFormat = strFormat & " STD, "
                strFormat = strFormat & " COMMIFLAG, "
                strFormat = strFormat & " QTY, "
                strFormat = strFormat & " PRICE, "
                strFormat = strFormat & " AMT, "
                strFormat = strFormat & " 'F' AS GBN, "
                strFormat = strFormat & " FAKENAME, "
                strFormat = strFormat & " SUSUAMT, "
                strFormat = strFormat & " SUBDETAIL, "
                strFormat = strFormat & " 'N' SAVEFLAG, "
                strFormat = strFormat & " DBO.PD_ITEMCODEDETAILYN_FUN(ITEMCODE) DETAILYNFLAG, "
                strFormat = strFormat & " IMESEQ, "
                strFormat = strFormat & "'F' PRODUCTIONCOMMISSION "
                strFormat = strFormat & " FROM PD_ESTTYPE_DTL "
                strFormat = strFormat & " WHERE 1=1 {0} "
                strFormat = strFormat & " ORDER BY PRINT_SEQ "

                strSQL = String.Format(strFormat, strWhere)

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_DTL")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' =============== 견적타입의 세부항목 기존 저장된 내역의 합을 가져온다
    Public Function SelectRtn_DtlSum(ByVal strInfoXML As String, _
                                     ByRef intTempRowCnt As Integer, _
                                     ByRef intTempColCnt As Integer, _
                                     ByVal strPREESTNO As String, _
                                     ByVal strITEMCODE As String, _
                                     ByVal dblITEMCODESEQ As Double, _
                                     ByVal dblHDRSEQ As Double) As Object

        Dim strSQL As String
        Dim vntData As Object

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = "SELECT "
                strSQL = strSQL & " CASE ISNULL(SUM(EXEAMT),0) WHEN 0 THEN ISNULL(SUM(AMT),0)  "
                strSQL = strSQL & " ELSE ISNULL(SUM(EXEAMT),0) END  "
                strSQL = strSQL & " FROM PD_ESTSUBTYPE  "
                strSQL = strSQL & " WHERE PREESTNO = '" & strPREESTNO & "'"
                strSQL = strSQL & " AND ITEMCODE ='" & strITEMCODE & "'"
                strSQL = strSQL & " And ITEMCODESEQ = " & dblITEMCODESEQ
                strSQL = strSQL & " And HDRSEQ =" & dblHDRSEQ

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intTempRowCnt, intTempColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_DtlSum")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    ' =============== 견적타입의 세부항목 임시저장시 임시저장된 내역의 합을 가져온다.
    Public Function SelectRtn_TempSum(ByVal strInfoXML As String, _
                                      ByRef intTempRowCnt As Integer, _
                                      ByRef intTempColCnt As Integer, _
                                      ByVal strITEMCODE As String, _
                                      ByVal dblITEMCODESEQ As Double) As Object

        Dim strSQL As String
        Dim vntData As Object

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = "SELECT     "
                strSQL = strSQL & " CASE ISNULL(SUM(EXEAMT),0) WHEN 0 THEN ISNULL(SUM(AMT),0) "
                strSQL = strSQL & " ELSE ISNULL(SUM(EXEAMT),0) END "
                strSQL = strSQL & " FROM PD_ESTSUBTYPE_INPUT "
                strSQL = strSQL & " WHERE ITEMCODE ='" & strITEMCODE & "' "
                strSQL = strSQL & " And IMESEQ = " & dblITEMCODESEQ

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intTempRowCnt, intTempColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TempSum")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_Full(ByVal strInfoXML As String, _
                                   ByRef intRowCnt As Integer, _
                                   ByRef intColCnt As Integer, _
                                   ByVal strPREESTNO As String, _
                                   ByVal strITEMCODE As String, _
                                   ByVal strSEQString As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = " SELECT "
                strSQL = strSQL & " 0 HDRSEQ, "
                strSQL = strSQL & " Null SEQ, "
                strSQL = strSQL & " SEQ SUBITEMCODESEQ, "
                strSQL = strSQL & " '" & strPREESTNO & "' PREESTNO, "
                strSQL = strSQL & " SUBITEMNAME, "
                strSQL = strSQL & " PRICE, "
                strSQL = strSQL & " 0 QTY, "
                strSQL = strSQL & " 1 TERM, "
                strSQL = strSQL & " 0 AMT, "
                strSQL = strSQL & " '' MEMO,  "
                strSQL = strSQL & " PRICE EXEPRICE, "
                strSQL = strSQL & " 0 EXEQTY, "
                strSQL = strSQL & " 1 EXETERM, "
                strSQL = strSQL & " 0 EXEAMT, "
                strSQL = strSQL & " '' EXEMEMO, "
                strSQL = strSQL & " 'N' SAVEFLAG  "
                strSQL = strSQL & " FROM PD_SUBITEM "
                strSQL = strSQL & " WHERE ITEMCODE = '" & strITEMCODE & "'"
                strSQL = strSQL & "  AND SEQ NOT IN (" & strSEQString & ") "
                strSQL = strSQL & " ORDER BY SEQ "

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Full")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    ' =============== 현재TEMP 에 값이 저장되고 있는지 알아봄 (사용)
    Public Function SelectRtn_TempCount(ByVal strInfoXML As String, _
                                        ByRef intTempRowCnt As Integer, _
                                        ByRef intTempColCnt As Integer, _
                                        ByVal dblHDRSEQ As String, _
                                        ByVal strITEMCODE As String, _
                                        ByVal strITEMCODESEQ As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = "SELECT SEQ "
                strSQL = strSQL & " FROM PD_ESTSUBTYPE_INPUT "
                strSQL = strSQL & " WHERE HDRSEQ = " & dblHDRSEQ
                strSQL = strSQL & " AND ITEMCODE ='" & strITEMCODE & "' "
                strSQL = strSQL & " AND ITEMCODESEQ ='" & strITEMCODESEQ & "' "


                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intTempRowCnt, intTempColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TempCount")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' =============== 현재PD_ESTSUBTYPE 에 값이 저장되고 있는지 알아봄 (사용) mstrHDRSEQ,mstrITEMCODE,mstrITEMCODESEQ
    Public Function SelectRtn_DtlCount(ByVal strInfoXML As String, _
                                       ByRef intTempRowCnt As Integer, _
                                       ByRef intTempColCnt As Integer, _
                                       ByVal dblHDRSEQ As String, _
                                       ByVal strITEMCODE As String, _
                                       ByVal dblITEMCODESEQ As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = "SELECT "
                strSQL = strSQL & " SEQ "
                strSQL = strSQL & " FROM PD_ESTSUBTYPE "
                strSQL = strSQL & " WHERE ITEMCODE ='" & strITEMCODE & "'"
                strSQL = strSQL & " And ITEMCODESEQ = " & dblITEMCODESEQ & ""
                strSQL = strSQL & " And HDRSEQ = " & dblHDRSEQ & ""

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intTempRowCnt, intTempColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_DtlCount")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '실제 투입되어진 부문 항목을 가져온되, 해당 견적과 본견적을 동시에 조회한다. 단, 해당견적에 내역이 없고 본견적에만 있을 경우 포함하여 조회한다.
    Public Function SelectRtn_SubDtl(ByVal strInfoXML As String, _
                                     ByRef mlngRowCnt As Integer, _
                                     ByRef mlngColCnt As Integer, _
                                     ByVal strPREESTNO As String, _
                                     ByVal strITEMCODE As String, _
                                     ByVal strITEMCODESEQ As String, _
                                     ByVal dblHDRSEQ As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        With mobjSCGLConfig '기본정보 Config 개체

            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = " SELECT  "
                strSQL = strSQL & "'1' CHK, "
                strSQL = strSQL & "HDRSEQ, "
                strSQL = strSQL & "SEQ, "
                strSQL = strSQL & "SUBITEMCODESEQ, "
                strSQL = strSQL & "PRINT_SEQ, "
                strSQL = strSQL & "PREESTNO, "
                strSQL = strSQL & "SUBITEMNAME, "
                strSQL = strSQL & "PRICE, "
                strSQL = strSQL & "QTY, "
                strSQL = strSQL & "TERM, "
                strSQL = strSQL & "AMT, "
                strSQL = strSQL & "MEMO, "
                strSQL = strSQL & "EXEPRICE, "
                strSQL = strSQL & "EXEQTY, "
                strSQL = strSQL & "EXETERM, "
                strSQL = strSQL & "EXEAMT, "
                strSQL = strSQL & "EXEMEMO, "
                strSQL = strSQL & "DBO.PD_IMESEQ_ESTSUBTYPE_FUN('" & strPREESTNO & "','" & strITEMCODE & "','" & strITEMCODESEQ & "') IMESEQ, "
                strSQL = strSQL & "'Y' SAVEFLAG,'N' NEWFLAG "
                strSQL = strSQL & "FROM "
                strSQL = strSQL & "( "
                strSQL = strSQL & "    SELECT "
                strSQL = strSQL & "    HDRSEQ, "
                strSQL = strSQL & "    SEQ, "
                strSQL = strSQL & "    SUBITEMCODESEQ, "
                strSQL = strSQL & "    ROW_NUMBER() OVER (ORDER BY PRINT_SEQ) PRINT_SEQ,"
                strSQL = strSQL & "    PREESTNO, "
                strSQL = strSQL & "    SUBITEMNAME,  "
                strSQL = strSQL & "    PRICE,  "
                strSQL = strSQL & "    QTY,  "
                strSQL = strSQL & "    TERM,  "
                strSQL = strSQL & "    AMT,  "
                strSQL = strSQL & "    MEMO, "
                strSQL = strSQL & "    EXEPRICE, "
                strSQL = strSQL & "    EXEQTY, "
                strSQL = strSQL & "    EXETERM, "
                strSQL = strSQL & "    EXEAMT, "
                strSQL = strSQL & "    EXEMEMO "
                strSQL = strSQL & "    FROM PD_ESTSUBTYPE "
                strSQL = strSQL & "    WHERE PREESTNO = '" & strPREESTNO & "' "
                strSQL = strSQL & "    AND ITEMCODE = '" & strITEMCODE & "' "
                strSQL = strSQL & "    AND ITEMCODESEQ = '" & strITEMCODESEQ & "' "
                strSQL = strSQL & "    AND HDRSEQ =" & dblHDRSEQ
                strSQL = strSQL & ") ENDDATA "
                strSQL = strSQL & "ORDER BY PRINT_SEQ "

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, mlngRowCnt, mlngColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SubDtl")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    'PD_SUBITEM 테이블에서 항목을 가져온다.
    Public Function SelectRtn_Empty(ByVal strInfoXML As String, _
                                    ByRef intRowCnt As Integer, _
                                    ByRef intColCnt As Integer, _
                                    ByVal strPREESTNO As String, _
                                    ByVal strITEMCODE As String, _
                                    ByVal mstrHDRSEQ As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = " SELECT "
                strSQL = strSQL & " 0 HDRSEQ,Null SEQ,SEQ SUBITEMCODESEQ, '" & strPREESTNO & "' PREESTNO, "
                strSQL = strSQL & " SUBITEMNAME,  "
                strSQL = strSQL & " PRICE,  "
                strSQL = strSQL & " 0 QTY,  "
                strSQL = strSQL & " 1 TERM,  "
                strSQL = strSQL & " 0 AMT,  "
                strSQL = strSQL & " '' MEMO,  "
                strSQL = strSQL & " PRICE EXEPRICE,  "
                strSQL = strSQL & " 0 EXEQTY,  "
                strSQL = strSQL & " 1 EXETERM,  "
                strSQL = strSQL & " 0 EXEAMT,  "
                strSQL = strSQL & " '' EXEMEMO,'" & mstrHDRSEQ & "' IMESEQ,'N' SAVEFLAG,'' NEWFLAG "
                strSQL = strSQL & " FROM PD_SUBITEM "
                strSQL = strSQL & " WHERE ITEMCODE = '" & strITEMCODE & "' "
                strSQL = strSQL & " ORDER BY SUBITEMCODESEQ "

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Empty")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    'PD_SUBITEM_INPUT 테이블에서 가져온다. (실제투입전 데이터를 임시저장 한다.)
    Public Function SelectRtn_Temp(ByVal strInfoXML As String, _
                                   ByRef intRowCnt As Integer, _
                                   ByRef intColCnt As Integer, _
                                   ByVal strHDRSEQ As String, _
                                   ByVal strITEMCODE As String, _
                                   ByVal strITEMCODESEQ As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1


        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = " SELECT "
                strSQL = strSQL & " '1' CHK,HDRSEQ,SEQ,SUBITEMCODESEQ,PRINT_SEQ,PREESTNO, "
                strSQL = strSQL & " SUBITEMNAME,PRICE,QTY,TERM,AMT,MEMO, "
                strSQL = strSQL & " EXEPRICE, "
                strSQL = strSQL & " EXEQTY, "
                strSQL = strSQL & " EXETERM, "
                strSQL = strSQL & " EXEAMT, "
                strSQL = strSQL & " EXEMEMO, "
                strSQL = strSQL & " '0' IMESEQ,'N' SAVEFLAG,'' NEWFLAG "
                strSQL = strSQL & " FROM "
                strSQL = strSQL & " ( "
                strSQL = strSQL & "     SELECT "
                strSQL = strSQL & "     HDRSEQ,SEQ,SUBITEMCODESEQ,ROW_NUMBER() OVER (ORDER BY PRINT_SEQ) PRINT_SEQ,PREESTNO, "
                strSQL = strSQL & "     SUBITEMNAME,  "
                strSQL = strSQL & "     PRICE,  "
                strSQL = strSQL & "     QTY,  "
                strSQL = strSQL & "     TERM,  "
                strSQL = strSQL & "     AMT,  "
                strSQL = strSQL & "     MEMO,  "
                strSQL = strSQL & "     EXEPRICE,  "
                strSQL = strSQL & "     EXEQTY,  "
                strSQL = strSQL & "     EXETERM,  "
                strSQL = strSQL & "     EXEAMT,  "
                strSQL = strSQL & "     EXEMEMO "
                strSQL = strSQL & "     FROM PD_ESTSUBTYPE_INPUT "
                strSQL = strSQL & "     WHERE ITEMCODE = '" & strITEMCODE & "' "
                strSQL = strSQL & "     AND ITEMCODESEQ = '" & strITEMCODESEQ & "' "
                strSQL = strSQL & " ) DATA  "
                strSQL = strSQL & " ORDER BY PRINT_SEQ "

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Temp")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
    '============== ESTSUBTYPE_INPUT 에 금액을 조회해 온다.[실행견적이 있으면 실행견적을 아니면 상세견적을 가져온다.]
    Public Function SelectRtn_INPUTAMT(ByVal strInfoXML As String, _
                                       ByRef intRowCnt As Integer, _
                                       ByRef intColCnt As Integer, _
                                       ByVal dblHDRSEQ As Double, _
                                       ByVal strITEMCODE As String, _
                                       ByVal dblITEMCODESEQ As String) As Object
        '여기부터 단순조회
        Dim strSQL As String
        Dim vntData As Object

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = " SELECT  "
                strSQL = strSQL & " CASE SUM(ISNULL(EXEAMT,0)) WHEN 0 THEN SUM(ISNULL(AMT,0)) ELSE SUM(ISNULL(EXEAMT,0)) END AS AMT "
                strSQL = strSQL & " FROM PD_ESTSUBTYPE_INPUT "
                strSQL = strSQL & " WHERE HDRSEQ = '" & dblHDRSEQ & "'"
                strSQL = strSQL & " AND ITEMCODE = '" & strITEMCODE & "'"
                strSQL = strSQL & " AND ITEMCODESEQ = " & dblITEMCODESEQ

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_INPUTAMT")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
        '여기까지 단순조회
    End Function
    '============== ESTTYPE_DTL  SEQ 생성
    Public Function SelectRtn_ESTDTLSEQNO(ByVal dblHDRSEQ As Double) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT ISNULL(MAX(ITEMCODESEQ),0) +1 FROM PD_ESTTYPE_DTL WHERE  HDRSEQ =" & dblHDRSEQ
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ESTDTLSEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '============== ESTSUBTYPE  SEQ 생성
    Public Function SelectRtn_SEQNO(ByVal strPREESTNO As String, _
                                    ByVal dblHDRSEQ As Double) As String

        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 FROM PD_ESTSUBTYPE WHERE PREESTNO = '" & strPREESTNO & "' AND HDRSEQ =" & dblHDRSEQ
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '============== PD_SUBITEM SEQ 생성 
    Public Function SelectRtn_SUBSEQNO(ByVal strITEMCODE As String) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 FROM PD_SUBITEM WHERE ITEMCODE = '" & strITEMCODE & "'"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SUBSEQNO")
            Finally
            End Try
        End With
    End Function

    '============== PD_SUBITEM SORTSEQ 가져오기
    Public Function SelectRtn_SORTSEQ(ByVal strITEMCODE As String) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT DBO.PD_SUBITEMSORTSEQ_FUN('" & strITEMCODE & "')"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SORTSEQ")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '============== PD_SUBITEM SORTSEQ 가져오기
    Public Function SelectRtn_ITEMNAME(ByVal strITEMCODE As String) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT ITEMNAME FROM PD_ITEMCODE WHERE ITEMCODE = '" & strITEMCODE & "'"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ITEMNAME")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '============== TEMP INSERT 서브항목의 SEQ 생성
    Public Function SelectRtn_TEMPSEQNO(ByVal strPREESTNO As String, _
                                        ByVal dblHDRSEQ As Double) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 FROM PD_ESTSUBTYPE_INPUT WHERE PREESTNO = '" & strPREESTNO & "' AND HDRSEQ =" & dblHDRSEQ
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TEMPSEQNO")
            Finally
            End Try
        End With
    End Function

    ''============== 견적TYPE번호생성(사용)
    Public Function SelectRtn_ESTSEQNO() As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 FROM PD_ESTTYPE_HDR "
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ESTSEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function
    ''============== 견적 상세내역 을 확인하여 삭제할지 결정한다.strHDRSEQ, strITEMCODE, strITEMCODESEQ
    Public Function SelectRtn_ESTSUBTYPECHECK(ByVal strHDRSEQ As String, _
                                              ByVal strITEMCODE As Double, _
                                              ByVal strITEMCODESEQ As Double) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 FROM PD_ESTTYPE_HDR "

                strSQL = " SELECT COUNT(*) FROM PD_ESTSUBTYPE "
                strSQL = strSQL & " WHERE HDRSEQ = '" & strHDRSEQ & "' "
                strSQL = strSQL & " AND ITEMCODE = '" & strITEMCODE & "' "
                strSQL = strSQL & " AND ITEMCODESEQ= '" & strITEMCODESEQ & "' "

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ESTSEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '============== PD_ESTSUBTYPE 의 삭제처리
    Public Function DeleteRtn(ByVal strInfoXML As String, _
                              ByVal strPREESTNO As String, _
                              ByVal dblSEQ As Double, _
                              ByVal dblSUBITEMCODESEQ As Double, _
                              ByVal dblITEMCODESEQ As Double, _
                              ByVal strITEMCODE As String, _
                              ByVal dblHDRSEQ As Double) As Integer

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                SetConfig(strInfoXML)    '기본정보 Setting

                mobjcePD_ESTSUBTYPE = New cePD_ESTSUBTYPE(mobjSCGLConfig)

                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjcePD_ESTSUBTYPE.DeleteDo(strPREESTNO, dblSEQ, dblSUBITEMCODESEQ, dblITEMCODESEQ, strITEMCODE, dblHDRSEQ)

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_ESTSUBTYPE.Dispose()
            End Try
        End With
    End Function

    '============== PD_SUBITEM_INPUT 의 모두 삭제 후 저장 '
    Public Function DeleteRtn_Temp(ByVal strInfoXML As String, _
                                   ByVal vntData As Object, _
                                   ByVal dblHDRSEQ As Double, _
                                   ByVal strITEMCODE As String, _
                                   ByVal strITEMCODESEQ As String) As Integer

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )
        Dim intRtn2 As Integer      'Return변수( 처리건수 또는 0 )

        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                SetConfig(strInfoXML)    '기본정보 Setting

                mobjcePD_ESTSUBTYPE_INPUT = New cePD_ESTSUBTYPE_INPUT(mobjSCGLConfig)

                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출

                '여기서 템프테이블을 전부 지운다.
                intRtn = mobjcePD_ESTSUBTYPE_INPUT.DeleteDo(dblHDRSEQ, strITEMCODE, strITEMCODESEQ)

                '삭제한후 변경된 데이터를 insert 한다.
                intRtn2 = ProcessRtn_InsertInput(vntData, dblHDRSEQ, strITEMCODE, strITEMCODESEQ)

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn2
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_Temp")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_ESTSUBTYPE_INPUT.Dispose()
            End Try
        End With
    End Function

    ' ============== 팝업에서 삭제하였을 경우 남아있는 모든 데이터를 INSERT 
    Public Function ProcessRtn_InsertInput(ByVal vntData As Object, _
                                           ByVal dblHDRSEQ As String, _
                                           ByVal strITEMCODE As String, _
                                           ByVal strITEMCODESEQ As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strPREESTNO
        Dim dblSUBITEMCODESEQ
        Dim dblSEQ

        With mobjSCGLConfig
            Try
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_ESTSUBTYPE_INPUT = New cePD_ESTSUBTYPE_INPUT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop

                    For i = 1 To intRows
                        strPREESTNO = GetElement(vntData, "PREESTNO", intColCnt, i)

                        '체크가 되어있거나(자료가 변경되어있거나) MOVEFLAG 가 y인 것 (자료를 이동[변경])된것은 저장 되야 한다.[단 모두 input 에]

                        dblSUBITEMCODESEQ = GetElement(vntData, "SUBITEMCODESEQ", intColCnt, i, NULL_NUM, True)

                        If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                            dblSEQ = SelectRtn_TEMPSEQNO(strPREESTNO, dblHDRSEQ)
                            If dblSUBITEMCODESEQ = -999999 Then
                                dblSUBITEMCODESEQ = SelectRtn_SUBSEQNO(strITEMCODE)
                            End If

                            intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, dblHDRSEQ)
                        Else
                            dblSEQ = GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True)

                            intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, dblHDRSEQ)
                        End If
                    Next
                End If

                Return intRows
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_InsertInput")
            Finally
                mobjcePD_ESTSUBTYPE_INPUT.Dispose()
            End Try
        End With
    End Function

#End Region

#Region "GROUP BLOCK : 견적타입유형관리 저장 로직 모음"
    '최초 저장 프로세서 출발 계획은 모든 데이터가 여기서 한방에 저장 되야 하며 상세가 있을경우 PD_ESTSUBTYPE_INPUT  테이블의 임시 저장된 데이터를 
    'PD_ESTTYPE 으로 안전하게 옮긴다. 저장 하지 않으면 INPUT 테이블의 데이터는 사라져야 한다. 

    Public Function ProcessRtn_ESTTYPE(ByVal strInfoXML As String, _
                                       ByVal strMasterXML As String, _
                                       ByVal vntData As Object, _
                                       ByRef strSEQ As String) As Integer

        Dim intRtn As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수

        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                'XML Element 변수 선언 (strMasterXML을 변환)
                Dim xmlRoot As XmlElement
                xmlRoot = XMLGetRoot(strMasterXML) 'XML 데이터

                mobjcePD_ESTTYPE_HDR = New cePD_ESTTYPE_HDR(mobjSCGLConfig)
                mobjcePD_ESTTYPE_DTL = New cePD_ESTTYPE_DTL(mobjSCGLConfig)

                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리

                '먼저 헤더의 키가 있는지 확인하여 생성한다. 
                '헤더가 없을경우 다른 저장이 안되기때문에 HDR 과DTL은 우선 저장한다.
                If strSEQ = "" Then
                    strSEQ = SelectRtn_ESTSEQNO()
                    intRtn = InsertRtn_HDR(xmlRoot, strSEQ)
                Else
                    intRtn = UpdateRtn_HDR(xmlRoot, strSEQ)
                End If
                '여기에서 DTL 을 저장한다. 상단의 HDR 의SEQ 가 생성되었기 때문에 저장 문제없음.
                '여기부터 HDR 의 SEQ 는 무조건 있다!

                If IsArray(vntData) Then
                    intRtn = ProcessRtn_DETAIL_TWO(vntData, strSEQ)
                End If


                'Detail 데이터 처리
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_ESTTYPE")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_ESTTYPE_HDR.Dispose()
                mobjcePD_ESTTYPE_DTL.Dispose()
            End Try
        End With
    End Function

    ' ============== PD_ESTSUBTYPE_DTL 실제 저장
    Public Function ProcessRtn_DETAIL_TWO(ByVal vntData As Object, _
                                          ByVal strHDRSEQ As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strITEMCODE
        Dim strITEMCODESEQ
        Dim strSQL

        With mobjSCGLConfig
            Try
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_ESTTYPE_DTL = New cePD_ESTTYPE_DTL(mobjSCGLConfig)

                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop
                    For i = 1 To intRows
                        strITEMCODE = ""
                        strITEMCODESEQ = ""

                        If GetElement(vntData, "ITEMCODESEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                            strITEMCODE = GetElement(vntData, "ITEMCODE", intColCnt, i)
                            strITEMCODESEQ = SelectRtn_ESTDTLSEQNO(strHDRSEQ)
                            intRtn = InsertRtn_ESTTYPE_DTL(vntData, intColCnt, i, strHDRSEQ, strITEMCODESEQ)

                            '상세견적 사항이 있다면 저장로직
                            If GetElement(vntData, "SAVEFLAG", intColCnt, i) = "Y" Then
                                intRtn = ProcessRtn_INPUT(strHDRSEQ, strITEMCODE, strITEMCODESEQ)
                            End If

                        Else
                            'DTL 이 먼저 저장되어있다 그래서 DTL 은 업데이트 
                            strITEMCODE = GetElement(vntData, "ITEMCODE", intColCnt, i)
                            strITEMCODESEQ = GetElement(vntData, "ITEMCODESEQ", intColCnt, i, NULL_NUM, True)

                            intRtn = UpdateRtn_ESTTYPE_DTL(vntData, intColCnt, i)
                            '상세견적 수정 사항이 있다면 수정 저장 로직
                            If GetElement(vntData, "SAVEFLAG", intColCnt, i) = "Y" Then
                                intRtn = ProcessRtn_INPUT(strHDRSEQ, strITEMCODE, strITEMCODESEQ)
                            End If

                        End If
                    Next
                End If

                Return intRows
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_DETAIL_TWO")
            Finally
                mobjcePD_ESTTYPE_DTL.Dispose()
            End Try
        End With
    End Function

    ' ============== PD_ESTSUBTYPE_DTL 실제 저장
    Public Function ProcessRtn_INPUT(ByVal strHDRSEQ As String, _
                                     ByVal strITEMCODE As String, _
                                     ByVal strITEMCODESEQ As String) As Integer

        Dim intRtn, intDelete As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strSQL
        Dim strUSER

        With mobjSCGLConfig
            Try
                intRtn = 0

                '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_ESTSUBTYPE = New cePD_ESTSUBTYPE(mobjSCGLConfig)
                mobjcePD_ESTSUBTYPE_INPUT = New cePD_ESTSUBTYPE_INPUT(mobjSCGLConfig)

                strUSER = .WRKUSR
                '단순조회로 상세내역에 템프와 데이터가 같아서 수정되야하는건을 찾는다 수정되야하는것은 삭제후에 저장되어야 한다.
                intRtn = SelectRtn_ESTSUBTYPECHECK(strHDRSEQ, strITEMCODE, strITEMCODESEQ)

                If intRtn > 0 Then
                    intDelete = mobjcePD_ESTSUBTYPE.DeleteESTTYPE(strHDRSEQ, strITEMCODE, strITEMCODESEQ)
                End If

                '여기서 INPUT 테이블 데이터 이동 
                strSQL = strSQL & " INSERT INTO PD_ESTSUBTYPE "

                strSQL = strSQL & " SELECT '" & strHDRSEQ & "' HDRSEQ,"
                strSQL = strSQL & " '9999999999' PREESTNO, SEQ, SUBITEMCODESEQ, "
                strSQL = strSQL & " '" & strITEMCODESEQ & "'  ITEMCODESEQ,ITEMCODE,"
                strSQL = strSQL & " IMESEQ,PRINT_SEQ,SORTSEQ,PRICE,QTY,TERM,AMT,MEMO,"
                strSQL = strSQL & " EXEPRICE,EXEQTY,EXETERM,EXEAMT,EXEMEMO,CONFIRMGBN,"
                strSQL = strSQL & " NEWFLAG,SUBITEMNAME,"
                strSQL = strSQL & " ATTR01,ATTR02,ATTR03,ATTR04,ATTR05,ATTR06,ATTR07,ATTR08,ATTR09,ATTR10, "
                strSQL = strSQL & " CUSER,CDATE,UUSER,UDATE "
                strSQL = strSQL & " FROM PD_ESTSUBTYPE_INPUT "
                strSQL = strSQL & " WHERE PREESTNO in ('9999999999') "
                strSQL = strSQL & " AND  ITEMCODE = '" & strITEMCODE & "' "
                strSQL = strSQL & " AND HDRSEQ =  '" & strHDRSEQ & "' "
                strSQL = strSQL & " AND ITEMCODESEQ =  '" & strITEMCODESEQ & "' "
                strSQL = strSQL & " AND CUSER = '" & strUSER & "'; "

                intRtn = mobjcePD_ESTSUBTYPE.SqlExe(strSQL)

                Return intRtn
            Catch err As Exception

                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_INPUT")
            Finally
                mobjcePD_ESTSUBTYPE.Dispose()
                mobjcePD_ESTSUBTYPE_INPUT.Dispose()
            End Try
        End With
    End Function
    '   견적 DTL 삭제후 금액이 변경되기때문에 HDR 다시 저장한다.
    Public Function ProcessRtn_DelProc(ByVal strInfoXML As String, _
                                       ByVal strMasterXML As String, _
                                       ByRef strHDRSEQ As String, _
                                       ByVal strTR As String) As Integer

        Dim intRtn As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                mobjcePD_ESTTYPE_HDR = New cePD_ESTTYPE_HDR(mobjSCGLConfig)

                'XML Element 변수 선언 (strMasterXML을 변환)
                Dim xmlRoot As XmlElement
                xmlRoot = XMLGetRoot(strMasterXML) 'XML 데이터

                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리

                If strTR = "UPDATE" Then
                    intRtn = UpdateRtn_HDR(xmlRoot, strHDRSEQ)
                    '인서트 라면 = INPUT 테이블 내역을 DTL 서브로 넘기고
                ElseIf strTR = "INSERT" Then
                    intRtn = InsertRtn_HDR(xmlRoot, strHDRSEQ)
                End If


                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_DelProc")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_ESTTYPE_HDR.Dispose()
            End Try
        End With
    End Function

    '================견적 세부내역 삭제(사용)
    Public Function DeleteRtn_EST(ByVal strInfoXML As String, _
                                  ByVal strHDRSEQ As String, _
                                  ByVal dblITEMCODESEQ As Double, _
                                  ByVal strITEMCODE As String) As Integer

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )
        Dim strSQL As String
        Dim intDelRtn As Integer
        Dim strUSER As String

        SetConfig(strInfoXML)    '기본정보 Setting

        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_ESTTYPE_DTL = New cePD_ESTTYPE_DTL(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출

                strUSER = .WRKUSR

                intRtn = mobjcePD_ESTTYPE_DTL.DeleteDo(strHDRSEQ, dblITEMCODESEQ)

                '상세 견적도 함께 삭제 
                strSQL = " DELETE FROM PD_ESTSUBTYPE  "
                strSQL = strSQL & " WHERE HDRSEQ = '" & strHDRSEQ & "'"
                strSQL = strSQL & " AND ITEMCODESEQ = '" & dblITEMCODESEQ & "';"

                strSQL = strSQL & " DELETE FROM PD_ESTSUBTYPE_INPUT "
                strSQL = strSQL & " WHERE HDRSEQ = '" & strHDRSEQ & "' "
                strSQL = strSQL & " AND ITEMCODESEQ = '" & dblITEMCODESEQ & "'"
                strSQL = strSQL & " AND CUSER = '" & strUSER & "';"

                intDelRtn = mobjcePD_ESTTYPE_DTL.SqlExe(strSQL)

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_EST")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_ESTTYPE_DTL.Dispose()
            End Try
        End With
    End Function

    '================전체삭제
    Public Function DeleteRtn_ALL(ByVal strInfoXML As String, _
                                  ByVal dblSEQ As String) As Integer

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )
        Dim strSQL As String
        Dim strUSER As String

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_ESTTYPE_DTL = New cePD_ESTTYPE_DTL(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                strUSER = .WRKUSR

                '헤더 삭제
                strSQL = " DELETE FROM PD_ESTTYPE_HDR"
                strSQL = strSQL & " WHERE SEQ = " & dblSEQ

                '디테일 삭제
                strSQL = strSQL & " ;DELETE FROM PD_ESTTYPE_DTL"
                strSQL = strSQL & "     WHERE HDRSEQ = " & dblSEQ

                '상세견적 삭제
                strSQL = strSQL & " ;DELETE FROM PD_ESTSUBTYPE"
                strSQL = strSQL & "     WHERE HDRSEQ = " & dblSEQ

                '상세 임시견적 삭제
                strSQL = strSQL & " ;DELETE FROM PD_ESTSUBTYPE_INPUT"
                strSQL = strSQL & "     WHERE HDRSEQ = " & dblSEQ
                strSQL = strSQL & "     WHERE CUSER = '" & strUSER & "'"


                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjcePD_ESTTYPE_DTL.SqlExe(strSQL)

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_ALL")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_ESTTYPE_DTL.Dispose()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 상세견적 팝업 저장 로직 모음"
    '다음은 저장 프로세스 이다.

    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal vntData As Object, _
                               ByVal strITEMCODE As String, _
                               ByVal strITEMCODESEQ As String, _
                               ByVal dblHDRSEQ As String) As Integer

        Dim intRtn As Integer '결과값 변수
        Dim intRtn2 As Integer '결과값 변수
        Dim strUSER As String

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                strUSER = .WRKUSR
                mobjcePD_ESTSUBTYPE_INPUT = New cePD_ESTSUBTYPE_INPUT(mobjSCGLConfig)
                'XML Element 변수 선언 (strMasterXML을 변환)
                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                '모든 데이터는 저장 되기전에 INPUT 테이블을 지우고 인서트 한다.
                intRtn = mobjcePD_ESTSUBTYPE_INPUT.DeleteDo_input(strITEMCODE, dblHDRSEQ, strITEMCODESEQ, strUSER)

                '다음의 저장 프로세서 모든 데이터는 여기에서 PD_SUBITEM_INPUT 으로 저장된다.
                intRtn2 = ProcessRtn_DETAIL_ONE(vntData, strITEMCODE, strITEMCODESEQ, dblHDRSEQ)

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn2
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' ============== 팝업에서 일어나는 모든 이벤트 PD_ESTSUBTYPE_INPUT 에 저장
    Public Function ProcessRtn_DETAIL_ONE(ByVal vntData As Object, _
                                          ByVal strITEMCODE As String, _
                                          ByVal strITEMCODESEQ As Double, _
                                          ByVal dblHDRSEQ As Double) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strPREESTNO
        Dim dblSUBITEMCODESEQ
        Dim dblSEQ

        With mobjSCGLConfig
            Try
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_ESTSUBTYPE_INPUT = New cePD_ESTSUBTYPE_INPUT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop

                    For i = 1 To intRows
                        strPREESTNO = GetElement(vntData, "PREESTNO", intColCnt, i)

                        '체크가 되어있거나(자료가 변경되어있거나) MOVEFLAG 가 y인 것 (자료를 이동[변경])된것은 저장 되야 한다.[단 모두 input 에]
                        If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 Or GetElement(vntData, "MOVEFLAG", intColCnt, i, OPTIONAL_STR) = "Y" Then

                            dblSUBITEMCODESEQ = GetElement(vntData, "SUBITEMCODESEQ", intColCnt, i, NULL_NUM, True)

                            If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                                dblSEQ = SelectRtn_TEMPSEQNO(strPREESTNO, dblHDRSEQ)
                                If dblSUBITEMCODESEQ = -999999 Then
                                    dblSUBITEMCODESEQ = SelectRtn_SUBSEQNO(strITEMCODE)
                                End If

                                intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, dblHDRSEQ)
                            Else
                                dblSEQ = GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True)

                                intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, dblHDRSEQ)
                            End If

                        End If
                    Next
                End If

                Return intRows

            Catch err As Exception

                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_DETAIL_ONE")
            Finally
                mobjcePD_ESTSUBTYPE_INPUT.Dispose()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : Entity Function Section"
    '견적상세내역을 다룸
    Private Function InsertRtn_Temp(ByVal vntData As Object, _
                                    ByVal intColCnt As Integer, _
                                    ByVal intRow As Integer, _
                                    ByVal dblSEQ As Double, _
                                    ByVal strITEMCODE As String, _
                                    ByVal strITEMCODESEQ As Double, _
                                    ByVal dblSUBITEMCODESEQ As Double, _
                                    ByVal dblHDRSEQ As Double) As Integer
        Dim intRtn As Integer
        '임시 테이블에서 ITEMCODESEQ 와 IMESEQ 를 같이 값이 되는 이유는 ITEMCODESEQ 없이 값이 들어왔을때 대체 값이기 때문이다.
        '결국에 PD_ESTTYPE_DTL 테이블에서 ITEMCODESEQ 와 IMESEQ 의 값은   같다.

        intRtn = mobjcePD_ESTSUBTYPE_INPUT.InsertDo( _
                                    dblHDRSEQ, _
                                    GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                                    dblSEQ, _
                                    dblSUBITEMCODESEQ, _
                                    strITEMCODESEQ, _
                                    strITEMCODE, _
                                    strITEMCODESEQ, _
                                    dblSEQ, _
                                    GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "MEMO", intColCnt, intRow), _
                                    GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                                    "F", _
                                    GetElement(vntData, "NEWFLAG", intColCnt, intRow), _
                                    GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function
    Private Function UpdateRtn_Temp(ByVal vntData As Object, _
                                    ByVal intColCnt As Integer, _
                                    ByVal intRow As Integer, _
                                    ByVal strGBN As String, _
                                    ByVal strITEMCODE As String, _
                                    ByVal strITEMCODESEQ As Double, _
                                    ByVal dblHDRSEQ As Double) As Integer

        Dim intRtn As Integer
        'PREESTNO,SEQ,ITEMCODESEQ,ITEMCODE,SORTSEQ,PRICE,QTY,TERM,AMT,MEMO,CONFIRMGBN
        intRtn = mobjcePD_ESTSUBTYPE_INPUT.UpdateDo( _
                                    dblHDRSEQ, _
                                    GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                                    GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "SUBITEMCODESEQ", intColCnt, intRow, NULL_NUM, True), _
                                    strITEMCODESEQ, _
                                    strITEMCODE, _
                                    0, _
                                    GetElement(vntData, "PRINT_SEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "MEMO", intColCnt, intRow), _
                                    GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                                    strGBN, _
                                    GetElement(vntData, "NEWFLAG", intColCnt, intRow), _
                                    GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    Private Function InsertRtn(ByVal vntData As Object, _
                               ByVal intColCnt As Integer, _
                               ByVal intRow As Integer, _
                               ByVal dblID As Double, _
                               ByVal strGBN As String, _
                               ByVal strITEMCODE As String, _
                               ByVal strITEMCODESEQ As Double, _
                               ByVal dblIMESEQ As Double, _
                               ByVal dblSUBITEMCODESEQ As Double, _
                               ByVal dblHDRSEQ As Double) As Integer
        Dim intRtn As Integer
        'PREESTNO,SEQ,ITEMCODESEQ,ITEMCODE,SORTSEQ,PRICE,QTY,TERM,AMT,MEMO,CONFIRMGBN
        intRtn = mobjcePD_ESTSUBTYPE.InsertDo( _
                               dblHDRSEQ, _
                               GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                               dblID, _
                               dblSUBITEMCODESEQ, _
                               strITEMCODESEQ, _
                               strITEMCODE, _
                               dblIMESEQ, _
                               dblSUBITEMCODESEQ, _
                               GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "MEMO", intColCnt, intRow), _
                               GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                               strGBN, _
                               GetElement(vntData, "NEWFLAG", intColCnt, intRow), _
                               GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                               GetElement(vntData, "ATTR01", intColCnt, intRow), _
                               GetElement(vntData, "ATTR02", intColCnt, intRow), _
                               GetElement(vntData, "ATTR03", intColCnt, intRow), _
                               GetElement(vntData, "ATTR04", intColCnt, intRow), _
                               GetElement(vntData, "ATTR05", intColCnt, intRow), _
                               GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function
    Private Function UpdateRtn(ByVal vntData As Object, _
                               ByVal intColCnt As Integer, _
                               ByVal intRow As Integer, _
                               ByVal strGBN As String, _
                               ByVal strITEMCODE As String, _
                               ByVal strITEMCODESEQ As Double, _
                               ByVal dblIMESEQ As Double, _
                               ByVal dblHDRSEQ As Double) As Integer

        Dim intRtn As Integer
        'dblHDRSEQ,strPREESTNO,dblSEQ,dblSUBITEMCODESEQ,dblITEMCODESEQ,strITEMCODE,
        'dblIMESEQ,dblSORTSEQ,dblPRICE,dblQTY,dblTERM,dblAMT,strMEMO,dblEXEPRICE,dblEXEQTY,dblEXETERM,dblEXEAMT,strEXEMEMO,strCONFIRMGBN,strNEWFLAG,strSUBITEMNAME
        intRtn = mobjcePD_ESTSUBTYPE.UpdateDo( _
                               dblHDRSEQ, _
                               GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                               GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "SUBITEMCODESEQ", intColCnt, intRow, NULL_NUM, True), _
                               strITEMCODESEQ, _
                               strITEMCODE, _
                               dblIMESEQ, _
                               GetElement(vntData, "PRINT_SEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "MEMO", intColCnt, intRow), _
                               GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                               strGBN, _
                               GetElement(vntData, "NEWFLAG", intColCnt, intRow), _
                               GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                               GetElement(vntData, "ATTR01", intColCnt, intRow), _
                               GetElement(vntData, "ATTR02", intColCnt, intRow), _
                               GetElement(vntData, "ATTR03", intColCnt, intRow), _
                               GetElement(vntData, "ATTR04", intColCnt, intRow), _
                               GetElement(vntData, "ATTR05", intColCnt, intRow), _
                               GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    '여기까지 견적상세 내역을 다룸
    Private Function InsertRtn_ESTTYPE_DTL(ByVal vntData As Object, _
                                           ByVal intColCnt As Integer, _
                                           ByVal intRow As Integer, _
                                           ByVal strHDRSEQ As Double, _
                                           ByVal dblITEMCODESEQ As Double) As Integer

        Dim intRtn As Integer

        intRtn = mobjcePD_ESTTYPE_DTL.InsertDo( _
                                       strHDRSEQ, _
                                       GetElement(vntData, "PREESTNO", intColCnt, intRow, NULL_NUM, True), _
                                       dblITEMCODESEQ, _
                                       GetElement(vntData, "ITEMCODE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "STD", intColCnt, intRow), _
                                       GetElement(vntData, "COMMIFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "FAKENAME", intColCnt, intRow), _
                                       GetElement(vntData, "SUSUAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "IMESEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "IMESEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function

    Private Function UpdateRtn_ESTTYPE_DTL(ByVal vntData As Object, _
                                           ByVal intColCnt As Integer, _
                                           ByVal intRow As Integer) As Integer

        Dim intRtn As Integer
        intRtn = mobjcePD_ESTTYPE_DTL.UpdateDo( _
                                       GetElement(vntData, "HDRSEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                                       GetElement(vntData, "ITEMCODESEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ITEMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "STD", intColCnt, intRow), _
                                       GetElement(vntData, "COMMIFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "FAKENAME", intColCnt, intRow), _
                                       GetElement(vntData, "SUSUAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "IMESEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRINT_SEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    ' ======== HDR UPDATE
    Private Function InsertRtn_HDR(ByVal xmlRoot As XmlElement, _
                                   ByVal strSEQ As Double) As Integer
        Dim intRtn As Integer

        intRtn = mobjcePD_ESTTYPE_HDR.InsertDo( _
                                       strSEQ, _
                                       XMLGetElement(xmlRoot, "TYPENAME"), _
                                       XMLGetElement(xmlRoot, "CLIENTCODE"), _
                                       XMLGetElement(xmlRoot, "COMMISSION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "NONECOMMISSION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSURATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSUAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "AMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUMAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR01"), _
                                       XMLGetElement(xmlRoot, "ATTR02"), _
                                       XMLGetElement(xmlRoot, "ATTR03"), _
                                       XMLGetElement(xmlRoot, "ATTR04"), _
                                       XMLGetElement(xmlRoot, "ATTR05"), _
                                       XMLGetElement(xmlRoot, "ATTR06", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR07", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR08", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR09", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR10", NULL_NUM, True))

        Return intRtn
    End Function

    ' ======== HDR UPDATE
    Private Function UpdateRtn_HDR(ByVal xmlRoot As XmlElement, _
                                   ByVal strSEQ As Double) As Integer
        Dim intRtn As Integer

        intRtn = mobjcePD_ESTTYPE_HDR.UpdateDo( _
                                       strSEQ, _
                                       XMLGetElement(xmlRoot, "TYPENAME"), _
                                       XMLGetElement(xmlRoot, "CLIENTCODE"), _
                                       XMLGetElement(xmlRoot, "COMMISSION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "NONECOMMISSION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSURATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSUAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "AMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUMAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR01"), _
                                       XMLGetElement(xmlRoot, "ATTR02"), _
                                       XMLGetElement(xmlRoot, "ATTR03"), _
                                       XMLGetElement(xmlRoot, "ATTR04"), _
                                       XMLGetElement(xmlRoot, "ATTR05"), _
                                       XMLGetElement(xmlRoot, "ATTR06", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR07", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR08", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR09", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR10", NULL_NUM, True))

        Return intRtn
    End Function
#End Region
End Class
