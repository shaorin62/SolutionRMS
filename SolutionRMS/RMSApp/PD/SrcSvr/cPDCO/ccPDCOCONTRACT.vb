'****************************************************************************************
'Generated By  : Kim Tae Ho 
'시스템구분    : RMS/PD/Server Control Class
'실행   환경   : COM+ Service Server Package
'프로그램명    : ccPDCMPONO.vb
'기         능 : - Project Number 생성
'특이  사항    : - 
'                -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2008.11.07 Kim Tae Ho
'            2) 
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports ePDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트
Public Class ccPDCOCONTRACT
    Inherits ccControl
#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccPDCOCONTRACT"                  '자신의 클래스명
    Private mobjcePD_CONTRACT_MST As ePDCO.cePD_CONTRACT_MST          '사용할 Entity 변수 선언
    Private mobjcePD_CONTRACT_NEW As ePDCO.cePD_CONTRACT_NEW
    Private mobjcePD_CONTRACT_TEMP As ePDCO.cePD_CONTRACT_TEMP
    'Private Const .DBConnStr = "Provider=SQLOLEDB;Data Source=10.110.10.86;Initial Catalog=MCDEV;DSN=MCDEV;UID=devadmin;Pwd=password"
#End Region

#Region "GROUP BLOCK : Function Section"

    Public Function DeleteRtn_temp(ByVal strInfoXML As String) As Integer   '데이터 DELETE

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_CONTRACT_TEMP = New cePD_CONTRACT_TEMP(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjcePD_CONTRACT_TEMP.DeleteDo(.WRKUSR)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_CONTRACT_TEMP.Dispose()
            End Try
        End With
    End Function


    ' ============== ProcessRtn_TEMP (Master & Detail) Sample Code 
    Public Function ProcessRtn_TEMP(ByVal strInfoXML As String, _
                                    ByRef strCONTACTNO As String, _
                                    ByRef dblNUM As Double, _
                                    ByRef strUSERID As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim intCnt

        SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리
                mobjcePD_CONTRACT_TEMP = New cePD_CONTRACT_TEMP(mobjSCGLConfig)

                strUSERID = .WRKUSR 'USERID 를 받아야 출력시에 USERID에 따른 구분을 둘수있다.
                intRtn = InsertRtn_CONTRACT_TEMP(strCONTACTNO, dblNUM, strUSERID)


                '트랜잭션Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_TEMP")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_CONTRACT_TEMP.Dispose()
            End Try
        End With
    End Function

    Public Function GetDataType(ByVal strInfoXML As String, _
                               ByRef intRowCnt As Integer, _
                               ByRef intColCnt As Integer, _
                               ByVal strCombo As String) As Object

        Dim strSQL, strFormat As String
        Dim vntData As Object



        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정

        'SQL문 생성

        strFormat = " SELECT CODE +' - '+ CODE_NAME  "
        strFormat = strFormat & " FROM SC_CODE "
        strFormat = strFormat & " WHERE CLASS_CODE = '" & strCombo & "' "
        strFormat = strFormat & " ORDER BY SORT_SEQ "



        With mobjSCGLConfig
            strSQL = String.Format(strFormat)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function GetDataType_JOBGUBUN(ByVal strInfoXML As String, _
                                         ByRef intRowCnt As Integer, _
                                         ByRef intColCnt As Integer, _
                                         ByVal strCode_Name As String) As Object

        Dim strSQL, strFormat As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정


        'SQL문 생성

        strFormat = " SELECT CODE,CODE_NAME "
        strFormat = strFormat & " FROM SC_CODE"
        strFormat = strFormat & " WHERE CLASS_CODE = 'PD_JOBKIND'"
        strFormat = strFormat & " AND USE_YN = 'Y'"
        strFormat = strFormat & " AND CODE = ("
        strFormat = strFormat & " 	SELECT TOP 1 ATTR01 FROM SC_CODE"
        strFormat = strFormat & " 	WHERE ATTR02 = 'K'"
        strFormat = strFormat & " 	AND  ATTR05  = '" & strCode_Name & "'"
        strFormat = strFormat & " )"
        strFormat = strFormat & " UNION ALL"
        strFormat = strFormat & " SELECT TOP 1 CODE ,CODE_NAME FROM SC_CODE"
        strFormat = strFormat & " WHERE ATTR02 = 'K'"
        strFormat = strFormat & " AND  ATTR05  = '" & strCode_Name & "'"


        With mobjSCGLConfig
            strSQL = String.Format(strFormat)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType_JOBGUBUN")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '=============== 계약서 미등록 내역 조회
    Public Function SelectRtn(ByVal strInfoXML As String, _
                              ByRef intRowCnt As Integer, _
                              ByRef intColCnt As Integer, _
                              ByVal strAMTFLAG As String, _
                              ByVal strFROM As String, _
                              ByVal strTO As String, _
                              ByVal strOUTSCODE As String, _
                              ByVal strOUTSNAME As String, _
                              ByVal strJOBNO As String, _
                              ByVal strJOBNAME As String, _
                              ByVal strJOBNOCODE As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1, Con2, Con3, Con4, Con5, Con6, Con7 As String

        Con1 = "" : Con2 = "" : Con3 = "" : Con4 = "" : Con5 = "" : Con6 = "" : Con7 = ""

        If strFROM <> "" And strTO <> "" Then
            Con1 = String.Format(" AND (REGDATE BETWEEN '{0}' AND  '{1}')", Replace(strFROM, "-", ""), Replace(strTO, "-", ""))
        End If
        If strFROM <> "" And strTO = "" Then
            Con1 = String.Format(" AND (REGDATE >= '{0}')", Replace(strFROM, "-", ""))
        End If
        If strFROM = "" And strTO <> "" Then
            Con1 = String.Format(" AND (REGDATE <= '{0}')", Replace(strTO, "-", ""))
        End If


        If strOUTSCODE <> "" Then Con2 = String.Format(" AND OUTSCODE = '{0}'", strOUTSCODE)
        If strOUTSNAME <> "" Then Con3 = String.Format(" AND OUTSNAME like '%{0}%'", strOUTSNAME)
        If strJOBNO <> "" Then Con4 = String.Format(" AND JOBNO = '{0}'", strJOBNO)

        strJOBNAME = Replace(strJOBNAME, "'", "''")

        If strJOBNAME <> "" Then Con5 = String.Format(" AND JOBNAME like '%{0}%'", strJOBNAME)
        If strAMTFLAG <> "" Then Con6 = String.Format(" AND AMTFLAG = '{0}'", strAMTFLAG)
        If strJOBNOCODE <> "" Then Con7 = String.Format(" AND LEFT(JOBNO,1) = '{0}'", strJOBNOCODE)

        strWhere = BuildFields(" ", Con1, Con2, Con3, Con4, Con5, Con6, Con7)

        strFormat = " SELECT "
        strFormat = strFormat & " 0 CHK, SEQ, OUTSCODE, OUTSNAME, JOBNO, JOBNAME, ADJAMT, JOBGUBN, CREPART, CONTRACTGUBUN, AMTFLAG, "
        strFormat = strFormat & " DENSE_RANK() OVER (ORDER BY OUTSCODE) AS RANKTRANS, REGDATE"
        strFormat = strFormat & " FROM ("
        strFormat = strFormat & " 	SELECT "
        strFormat = strFormat & " 	A.SEQ,"
        strFormat = strFormat & " 	A.CONTRACTNO,"
        strFormat = strFormat & " 	A.OUTSCODE, "
        strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(A.OUTSCODE) OUTSNAME, "
        strFormat = strFormat & " 	A.JOBNO, "
        strFormat = strFormat & " 	DBO.PD_JOBNAME_FUN(A.JOBNO) JOBNAME, "
        strFormat = strFormat & " 	A.ADJAMT,"
        strFormat = strFormat & " 	B.JOBGUBN, "
        strFormat = strFormat & " 	B.CREPART CREPART, "
        strFormat = strFormat & " 	DBO.PD_CREPART_CONTRACTCODE_FUN(B.CREPART)+' - '+ DBO.PD_CREPART_CONTRACTGUBUN_FUN(B.CREPART) CONTRACTGUBUN,"
        strFormat = strFormat & "  	A.AMTFLAG , "
        strFormat = strFormat & " 	A.REGDATE"
        strFormat = strFormat & " 	FROM PD_EXE_DTL A "
        strFormat = strFormat & " 	LEFT JOIN PD_JOBNO B ON A.JOBNO = B.JOBNO "
        strFormat = strFormat & " 	WHERE ISNULL(A.CONTRACTNO,'') = ''  "
        strFormat = strFormat & " 	UNION ALL"
        strFormat = strFormat & " 	SELECT"
        strFormat = strFormat & " 	SEQ, "
        strFormat = strFormat & " 	CONTRACTNO,"
        strFormat = strFormat & " 	OUTSCODE, "
        strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(OUTSCODE) OUTSNAME, "
        strFormat = strFormat & " 	JOBNO, "
        strFormat = strFormat & " 	JOBNAME, "
        strFormat = strFormat & " 	ADJAMT,"
        strFormat = strFormat & " 	JOBGUBN, "
        strFormat = strFormat & " 	CREPART, "
        strFormat = strFormat & " 	ATTR01 + ' - ' + ATTR02 CONTRACTGUBUN,"
        strFormat = strFormat & " 	AMTFLAG , "
        strFormat = strFormat & " 	REGDATE"
        strFormat = strFormat & " 	FROM PD_CONTRACT_NEW"
        strFormat = strFormat & " 	WHERE ISNULL(CONTRACTNO,'') = ''  "
        strFormat = strFormat & " ) A"
        strFormat = strFormat & " WHERE 1=1 {0} "
        strFormat = strFormat & " ORDER BY OUTSCODE,JOBNAME "

        strSQL = String.Format(strFormat, strWhere)

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
                ' ------ XML 데이터 조회
                'strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)
                'Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '=============== 계약서 등록 내역 조회
    Public Function SelectRtn_EXIST(ByVal strInfoXML As String, _
                                    ByRef intRowCnt As Integer, _
                                    ByRef intColCnt As Integer, _
                                    ByVal strAMTFLAG As String, _
                                    ByVal strFROM As String, _
                                    ByVal strTO As String, _
                                    ByVal strOUTSCODE As String, _
                                    ByVal strOUTSNAME As String, _
                                    ByVal strCONFIRM As String, _
                                    ByVal strCONTRACTNO As String, _
                                    ByVal strCONTRACTCODE As String, _
                                    ByVal strYEARMONGBN As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strCols As String         '조건 두번째 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim Con1, Con2, Con3, Con4, Con5, Con6, Con7, Con8 As String

        Con1 = "" : Con2 = "" : Con3 = "" : Con4 = "" : Con5 = "" : Con6 = "" : Con7 = "" : Con8 = ""

        If strYEARMONGBN = "CONTRACTDAY" Then
            If strFROM <> "" And strTO <> "" Then
                Con1 = String.Format(" AND (CONTRACTDAY BETWEEN '{0}' AND  '{1}')", Replace(strFROM, "-", ""), Replace(strTO, "-", ""))
            End If
            If strFROM <> "" And strTO = "" Then
                Con1 = String.Format(" AND (CONTRACTDAY >= '{0}')", Replace(strFROM, "-", ""))
            End If
            If strFROM = "" And strTO <> "" Then
                Con1 = String.Format(" AND (CONTRACTDAY <= '{0}')", Replace(strTO, "-", ""))
            End If
        ElseIf strYEARMONGBN = "REGDATE" Then
            If strFROM <> "" And strTO <> "" Then
                Con8 = String.Format(" AND (REGDATE BETWEEN '{0}' AND  '{1}')", Replace(strFROM, "-", ""), Replace(strTO, "-", ""))
            End If
            If strFROM <> "" And strTO = "" Then
                Con8 = String.Format(" AND (REGDATE >= '{0}')", Replace(strFROM, "-", ""))
            End If
            If strFROM = "" And strTO <> "" Then
                Con8 = String.Format(" AND (REGDATE <= '{0}')", Replace(strTO, "-", ""))
            End If
        End If

        If strOUTSCODE <> "" Then Con2 = String.Format(" AND OUTSCODE = '{0}'", strOUTSCODE)
        If strOUTSNAME <> "" Then Con3 = String.Format(" AND DBO.SC_GET_HIGHCUSTNAME_FUN(OUTSCODE) like '%{0}%'", strOUTSNAME)
        If strCONFIRM <> "" Then Con4 = String.Format(" AND CONFIRMFLAG = '{0}'", strCONFIRM)
        If strCONTRACTNO <> "" Then Con5 = String.Format(" AND CONTRACTNO = '{0}'", strCONTRACTNO)
        If strAMTFLAG <> "" Then Con6 = String.Format(" AND ISNULL(AMTFLAG,'0') = '{0}'", strAMTFLAG)
        If strCONTRACTCODE <> "" Then Con7 = String.Format("AND SUBSTRING(CONTRACTNO,1,1) = '{0}'", strCONTRACTCODE)

        strWhere = BuildFields(" ", Con1, Con2, Con3, Con4, Con5, Con6, Con7)
        strCols = BuildFields(" ", Con8)

        strFormat = " SELECT "
        strFormat = strFormat & " 0 CHK,"
        strFormat = strFormat & " DBO.PD_CONTRACTCODE_CODENAME_FUN(CONTRACTNO) CONTRACTGUBUN , "
        strFormat = strFormat & " CONTRACTNO, CONTRACTNAME, DBO.SC_GET_HIGHCUSTNAME_FUN(OUTSCODE) OUTSNAME, "
        strFormat = strFormat & " CONTRACTDAY, LOCALAREA, STDATE, EDDATE, AMT, DELIVERYDAY, TESTDAY, PAYMENTGBN, TESTMENT, COMENT, "
        strFormat = strFormat & " CONFIRMFLAG, CONFLAG, DIVFLAG, OUTSCODE, PRERATE, PREAMT, ENDRATE, ENDAMT, THISRATE, THISAMT, "
        strFormat = strFormat & " BALANCERATE, BALANCEAMT, DELIVERYGUARANTY, FAULTGUARANTY, MANAGER, TESTENDDAY, "
        strFormat = strFormat & " TESTAMT, LOSTDAY, AMTFLAG"
        strFormat = strFormat & " FROM "
        strFormat = strFormat & " ("
        strFormat = strFormat & " 	SELECT "
        strFormat = strFormat & " 	0 CHK ,  "
        strFormat = strFormat & " 	DBO.PD_CONTRACTCODE_CODENAME_FUN(A.CONTRACTNO) CONTRACTGUBUN , "
        strFormat = strFormat & " 	A.CONTRACTNO, A.CONTRACTNAME, DBO.SC_GET_HIGHCUSTNAME_FUN(A.OUTSCODE) OUTSNAME, "
        strFormat = strFormat & " 	A.CONTRACTDAY, A.LOCALAREA, A.STDATE, A.EDDATE, A.AMT, A.DELIVERYDAY, "
        strFormat = strFormat & " 	A.TESTDAY, A.PAYMENTGBN, A.TESTMENT, A.COMENT, A.CONFIRMFLAG, A.CONFLAG, "
        strFormat = strFormat & " 	A.DIVFLAG, A.OUTSCODE, A.PRERATE, A.PREAMT, A.ENDRATE, A.ENDAMT, "
        strFormat = strFormat & " 	A.THISRATE, A.THISAMT, A.BALANCERATE, A.BALANCEAMT, A.DELIVERYGUARANTY, A.FAULTGUARANTY, "
        strFormat = strFormat & " 	A.MANAGER, A.TESTENDDAY, A.TESTAMT, A.LOSTDAY, A.AMTFLAG"
        strFormat = strFormat & " 	FROM PD_CONTRACT_MST A"
        strFormat = strFormat & " 	INNER JOIN ("
        strFormat = strFormat & " 		SELECT "
        strFormat = strFormat & " 		CONTRACTNO"
        strFormat = strFormat & " 		FROM PD_EXE_DTL"
        strFormat = strFormat & " 		WHERE 1=1"
        strFormat = strFormat & " 		AND ISNULL(CONTRACTNO,'') <> ''"
        strFormat = strFormat & " 		{1} "
        strFormat = strFormat & " 		GROUP BY CONTRACTNO"
        strFormat = strFormat & " 	)B ON A.CONTRACTNO = B.CONTRACTNO "
        strFormat = strFormat & " 	UNION ALL"
        strFormat = strFormat & " 	SELECT "
        strFormat = strFormat & " 	0 CHK ,  "
        strFormat = strFormat & " 	DBO.PD_CONTRACTCODE_CODENAME_FUN(A.CONTRACTNO) CONTRACTGUBUN , "
        strFormat = strFormat & " 	A.CONTRACTNO, A.CONTRACTNAME, DBO.SC_GET_HIGHCUSTNAME_FUN(A.OUTSCODE) OUTSNAME, "
        strFormat = strFormat & " 	A.CONTRACTDAY, A.LOCALAREA, A.STDATE, A.EDDATE, A.AMT, A.DELIVERYDAY, "
        strFormat = strFormat & " 	A.TESTDAY, A.PAYMENTGBN, A.TESTMENT, A.COMENT, A.CONFIRMFLAG, A.CONFLAG, "
        strFormat = strFormat & " 	A.DIVFLAG, A.OUTSCODE, A.PRERATE, A.PREAMT, A.ENDRATE, A.ENDAMT, "
        strFormat = strFormat & " 	A.THISRATE, A.THISAMT, A.BALANCERATE, A.BALANCEAMT, A.DELIVERYGUARANTY, A.FAULTGUARANTY, "
        strFormat = strFormat & " 	A.MANAGER, A.TESTENDDAY, A.TESTAMT, A.LOSTDAY, A.AMTFLAG"
        strFormat = strFormat & " 	FROM PD_CONTRACT_MST A"
        strFormat = strFormat & " 	INNER JOIN ("
        strFormat = strFormat & " 		SELECT "
        strFormat = strFormat & " 		CONTRACTNO "
        strFormat = strFormat & " 		FROM PD_CONTRACT_NEW"
        strFormat = strFormat & " 		WHERE 1=1"
        strFormat = strFormat & " 		AND ISNULL(CONTRACTNO,'') <> ''"
        strFormat = strFormat & " 		{1} "
        strFormat = strFormat & " 		GROUP BY CONTRACTNO"
        strFormat = strFormat & " 	)B ON A.CONTRACTNO = B.CONTRACTNO "
        strFormat = strFormat & " ) C"
        strFormat = strFormat & " WHERE 1=1 "
        strFormat = strFormat & " {0} "
        strFormat = strFormat & " ORDER BY CONTRACTNO"

        strSQL = String.Format(strFormat, strWhere, strCols)

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_EXIST")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' ============== 저장
    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal strMasterXML As String, _
                               ByVal vntData As Object, _
                               ByVal strSAVEFLAG As String, _
                               ByVal strCOMENT As String, _
                               ByVal strJOBGUBN As String, _
                               ByVal strCREPART As String) As Integer

        Dim intRtn As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim strCONTRACTNO As String

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'XML Element 변수 선언 (strMasterXML을 변환)
                Dim xmlRoot As XmlElement
                xmlRoot = XMLGetRoot(strMasterXML) 'XML 데이터

                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                intRtn = ProcessRtn_UPDATE(vntData, strSAVEFLAG, strCOMENT, strJOBGUBN, strCREPART)

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' ============== 계약서 저장
    Public Function ProcessRtn_CONTRACT(ByVal strInfoXML As String, _
                                        ByVal strMasterXML As String, _
                                        ByVal vntData As Object, _
                                        ByVal strOUTSCODE As String, _
                                        ByVal strCONTRACTNAME As String, _
                                        ByVal strCONTRACTCODE As String, _
                                        ByVal strCOMENT As String, _
                                        ByVal strAMTFLAG As String) As Integer

        Dim intRtn As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim strCONTRACTNO As String

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'XML Element 변수 선언 (strMasterXML을 변환)
                Dim xmlRoot As XmlElement
                xmlRoot = XMLGetRoot(strMasterXML) 'XML 데이터

                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                strCONTRACTNO = ""
                '계약서 헤더 저장
                intRtn = ProcessRtn_HDR(xmlRoot, strCONTRACTNO, strOUTSCODE, strCONTRACTNAME, strCONTRACTCODE, strCOMENT, strAMTFLAG)
                '계약서번호 업데이트 처리
                intRtn = ProcessRtn_DETAIL_ONE(vntData, strCONTRACTNO)

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
    '

    '============== 견적 헤더 실제저장
    Public Function ProcessRtn_HDR(ByVal xmlRoot As XmlElement, _
                                   ByRef strCONTRACTNO As String, _
                                   ByVal strOUTSCODE As String, _
                                   ByVal strCONTRACTNAME As String, _
                                   ByVal strCONTRACTCODE As String, _
                                   ByVal strCOMENT As String, _
                                   ByVal strAMTFLAG As String) As Integer

        Dim intRtn As Integer
        Dim intCnt As Integer
        Dim strSQL As String
        Dim strYEARMONDAY As String
        Dim CONTRACTNO As String
        Dim strSTDATE As String
        Dim strEDDATE As String
        Dim strDELIVERYDAY As String
        Dim strTESTDAY As String
        Dim strTESTENDDAY As String
        Dim strCONTRACTDAY As String
        Dim strCONFIRMFLAG As String
        Dim strCONFLAG As String
        Dim strDIVFLAG As String

        With mobjSCGLConfig
            Try
                ''' 사용할 Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_CONTRACT_MST = New cePD_CONTRACT_MST(mobjSCGLConfig)

                If XMLGetElement(xmlRoot, "STDATE") <> "" Then strSTDATE = XMLGetElement(xmlRoot, "STDATE").Substring(0, 4) & XMLGetElement(xmlRoot, "STDATE").Substring(5, 2) & XMLGetElement(xmlRoot, "STDATE").Substring(8, 2)
                If XMLGetElement(xmlRoot, "EDDATE") <> "" Then strEDDATE = XMLGetElement(xmlRoot, "EDDATE").Substring(0, 4) & XMLGetElement(xmlRoot, "EDDATE").Substring(5, 2) & XMLGetElement(xmlRoot, "EDDATE").Substring(8, 2)
                If XMLGetElement(xmlRoot, "CONTRACTDAY") <> "" Then strYEARMONDAY = XMLGetElement(xmlRoot, "CONTRACTDAY").Substring(0, 4) & XMLGetElement(xmlRoot, "CONTRACTDAY").Substring(5, 2) & XMLGetElement(xmlRoot, "CONTRACTDAY").Substring(8, 2)
                If XMLGetElement(xmlRoot, "DELIVERYDAY") <> "" Then strDELIVERYDAY = XMLGetElement(xmlRoot, "DELIVERYDAY").Substring(0, 4) & XMLGetElement(xmlRoot, "DELIVERYDAY").Substring(5, 2) & XMLGetElement(xmlRoot, "DELIVERYDAY").Substring(8, 2)
                If XMLGetElement(xmlRoot, "TESTDAY") <> "" Then strTESTDAY = XMLGetElement(xmlRoot, "TESTDAY").Substring(0, 4) & XMLGetElement(xmlRoot, "TESTDAY").Substring(5, 2) & XMLGetElement(xmlRoot, "TESTDAY").Substring(8, 2)
                If XMLGetElement(xmlRoot, "TESTENDDAY") <> "" Then strTESTENDDAY = XMLGetElement(xmlRoot, "TESTENDDAY").Substring(0, 4) & XMLGetElement(xmlRoot, "TESTENDDAY").Substring(5, 2) & XMLGetElement(xmlRoot, "TESTENDDAY").Substring(8, 2)
                If XMLGetElement(xmlRoot, "CONTRACTDAY") <> "" Then strCONTRACTDAY = XMLGetElement(xmlRoot, "CONTRACTDAY").Substring(0, 4) & XMLGetElement(xmlRoot, "CONTRACTDAY").Substring(5, 2) & XMLGetElement(xmlRoot, "CONTRACTDAY").Substring(8, 2)
                If XMLGetElement(xmlRoot, "CONFIRMFLAG") <> "" Then
                    If XMLGetElement(xmlRoot, "CONFIRMFLAG") = "1" Or XMLGetElement(xmlRoot, "CONFIRMFLAG") = "-1" Then
                        strCONFIRMFLAG = "1"
                    Else
                        strCONFIRMFLAG = "0"
                    End If
                End If

                If XMLGetElement(xmlRoot, "CONFLAG") <> "" Then
                    If XMLGetElement(xmlRoot, "CONFLAG") = "1" Or XMLGetElement(xmlRoot, "CONFLAG") = "-1" Then
                        strCONFLAG = "1"
                    Else
                        strCONFLAG = "0"
                    End If
                End If

                If XMLGetElement(xmlRoot, "DIVFLAG") <> "" Then
                    If XMLGetElement(xmlRoot, "DIVFLAG") = "1" Or XMLGetElement(xmlRoot, "DIVFLAG") = "-1" Then
                        strDIVFLAG = "1"
                    Else
                        strDIVFLAG = "0"
                    End If
                End If

                strYEARMONDAY = strCONTRACTCODE & strYEARMONDAY
                'ex ) S20090601-001
                strCONTRACTNO = SelectRtn_CONTRACTSEQNO(strYEARMONDAY)
                intRtn = InsertRtn(xmlRoot, strCONTRACTNO, strOUTSCODE, strCONTRACTNAME, strDELIVERYDAY, strSTDATE, strEDDATE, strTESTDAY, strTESTENDDAY, strCONTRACTDAY, strCONFIRMFLAG, strCONFLAG, strDIVFLAG, strCOMENT, strAMTFLAG)

                Return intRtn
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_HDR")
            Finally
                mobjcePD_CONTRACT_MST.Dispose()
            End Try
        End With
    End Function

    Public Function ProcessRtn_UPDATE(ByVal vntData As Object, _
                                      ByVal strSAVEFLAG As String, _
                                      ByVal strCOMENT As String, _
                                      ByVal strJOBGUBN As String, _
                                      ByVal strCREPART As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblID As Double '자동 ID 를사용할 때만 사용
        Dim strSQL As String
        Dim strJOBNO As String
        Dim dblSEQ As Double
        Dim strSTDATE As String
        Dim strEDDATE As String
        Dim strDELIVERYDAY As String
        Dim strTESTDAY As String
        Dim strTESTENDDAY As String
        Dim strCONTRACTDAY As String
        Dim strCONTRACTNO
        Dim strREGDATE
        Dim strAMTFLAG
        Dim strCONTRACTCODE
        Dim strCONTRACTGUBUN

        With mobjSCGLConfig

            Try
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_CONTRACT_MST = New cePD_CONTRACT_MST(mobjSCGLConfig)
                    mobjcePD_CONTRACT_NEW = New cePD_CONTRACT_NEW(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop

                    For i = 1 To intRows
                        If strSAVEFLAG = "F" Then
                            strREGDATE = ""
                            If GetElement(vntData, "REGDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strREGDATE = Replace(GetElement(vntData, "REGDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                            If GetElement(vntData, "CONTRACTGUBUN", intColCnt, i, OPTIONAL_STR) <> "" Then strCONTRACTGUBUN = GetElement(vntData, "CONTRACTGUBUN", intColCnt, i, OPTIONAL_STR)

                            strCONTRACTCODE = Mid(strCONTRACTGUBUN, 1, 1)
                            strCONTRACTGUBUN = Mid(strCONTRACTGUBUN, 5, Len(strCONTRACTGUBUN))

                            If GetElement(vntData, "JOBNO", intColCnt, i, OPTIONAL_STR) = "" Then
                                If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                                    intRtn = InsertRtn_PD_CONTRACT_NEW(vntData, intColCnt, i, strREGDATE, strJOBGUBN, strCREPART, strCONTRACTGUBUN, strCONTRACTCODE)
                                Else
                                    intRtn = UpdateRtn_PD_CONTRACT_NEW(vntData, intColCnt, i, strREGDATE, strJOBGUBN, strCREPART, strCONTRACTGUBUN, strCONTRACTCODE)
                                End If
                            Else
                                strAMTFLAG = ""
                                If GetElement(vntData, "AMTFLAG", intColCnt, i, OPTIONAL_STR) = 1 Then
                                    strAMTFLAG = "1"
                                Else
                                    strAMTFLAG = "0"
                                End If
                                intRtn = UpdateRtn_PD_EXE_DTL(vntData, intColCnt, i, strAMTFLAG)
                            End If
                        Else
                            strSTDATE = "" : strEDDATE = "" : strDELIVERYDAY = "" : strTESTDAY = "" : strTESTENDDAY = "" : strCONTRACTDAY = ""

                            If GetElement(vntData, "STDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strSTDATE = GetElement(vntData, "STDATE", intColCnt, i, OPTIONAL_STR).SUBSTRING(0, 4) & GetElement(vntData, "STDATE", intColCnt, i, OPTIONAL_STR).SUBSTRING(5, 2) & GetElement(vntData, "STDATE", intColCnt, i, OPTIONAL_STR).SUBSTRING(8, 2)
                            If GetElement(vntData, "EDDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strEDDATE = GetElement(vntData, "EDDATE", intColCnt, i, OPTIONAL_STR).SUBSTRING(0, 4) & GetElement(vntData, "EDDATE", intColCnt, i, OPTIONAL_STR).SUBSTRING(5, 2) & GetElement(vntData, "EDDATE", intColCnt, i, OPTIONAL_STR).SUBSTRING(8, 2)
                            If GetElement(vntData, "DELIVERYDAY", intColCnt, i, OPTIONAL_STR) <> "" Then strDELIVERYDAY = GetElement(vntData, "DELIVERYDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(0, 4) & GetElement(vntData, "DELIVERYDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(5, 2) & GetElement(vntData, "DELIVERYDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(8, 2)
                            If GetElement(vntData, "TESTDAY", intColCnt, i, OPTIONAL_STR) <> "" Then strTESTDAY = GetElement(vntData, "TESTDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(0, 4) & GetElement(vntData, "TESTDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(5, 2) & GetElement(vntData, "TESTDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(8, 2)
                            If GetElement(vntData, "TESTENDDAY", intColCnt, i, OPTIONAL_STR) <> "" Then strTESTENDDAY = GetElement(vntData, "TESTENDDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(0, 4) & GetElement(vntData, "TESTENDDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(5, 2) & GetElement(vntData, "TESTENDDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(8, 2)
                            If GetElement(vntData, "CONTRACTDAY", intColCnt, i, OPTIONAL_STR) <> "" Then strCONTRACTDAY = GetElement(vntData, "CONTRACTDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(0, 4) & GetElement(vntData, "CONTRACTDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(5, 2) & GetElement(vntData, "CONTRACTDAY", intColCnt, i, OPTIONAL_STR).SUBSTRING(8, 2)

                            intRtn = UpdateRtn(vntData, intColCnt, i, strDELIVERYDAY, strSTDATE, strEDDATE, strTESTDAY, strTESTENDDAY, strCONTRACTDAY, strCOMENT)
                        End If
                    Next
                End If

                Return intRows
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_UPDATE")
            Finally
                mobjcePD_CONTRACT_NEW.Dispose()
                mobjcePD_CONTRACT_MST.Dispose()
            End Try
        End With
    End Function

    Public Function ProcessRtn_DETAIL_ONE(ByVal vntData As Object, _
                                          ByVal strCONTRACTNO As String) As Integer
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblID As Double '자동 ID 를사용할 때만 사용
        Dim strSQL As String
        Dim strJOBNO As String
        Dim dblSEQ As Double

        With mobjSCGLConfig
            Try
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_CONTRACT_MST = New cePD_CONTRACT_MST(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop

                    For i = 1 To intRows
                        strSQL = ""
                        dblSEQ = 0
                        strJOBNO = ""

                        If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = "1" Then
                            strJOBNO = GetElement(vntData, "JOBNO", intColCnt, i, OPTIONAL_STR)
                            If strJOBNO = "" Then
                                dblSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_NUM, True)

                                strSQL = " UPDATE PD_CONTRACT_NEW "
                                strSQL = strSQL & " SET CONTRACTNO = '" & strCONTRACTNO & "' "
                                strSQL = strSQL & " WHERE SEQ =" & dblSEQ

                                intRtn = mobjcePD_CONTRACT_MST.Update_CONTRACT(strSQL)
                            Else
                                dblSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_NUM, True)
                                strSQL = "UPDATE PD_EXE_DTL SET CONTRACTNO = '" & strCONTRACTNO & "' WHERE JOBNO = '" & strJOBNO & "' AND SEQ =" & dblSEQ
                                intRtn = mobjcePD_CONTRACT_MST.Update_CONTRACT(strSQL)
                            End If
                        End If
                    Next
                End If

                Return intRows
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_DETAIL_ONE")
            Finally
                mobjcePD_CONTRACT_MST.Dispose()
            End Try
        End With
    End Function

    '============== ProcessRtn 계약서 CODE 생성
    Public Function SelectRtn_CONTRACTSEQNO(ByVal strYEARMON As String) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보 Config 개체

            Try
                strSQL = " SELECT '" & strYEARMON & "'+'-'+dbo.lpad(ISNULL(max(cast(right(CONTRACTNO,3) as numeric)),0)+1,3,0)  "
                strSQL = strSQL & " FROM PD_CONTRACT_MST "
                strSQL = strSQL & " WHERE 1=1 "
                strSQL = strSQL & " AND SUBSTRING(CONTRACTNO,1,9) = '" & strYEARMON & "'"

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CONTRACTSEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '================계약서 삭제
    Public Function DeleteRtn(ByVal strInfoXML As String, _
                              ByVal strSAVEFLAG As String, _
                              ByVal strCONTRACTNO As String) As Integer
        'PREESTNO,ITEMCODESEQ
        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_CONTRACT_MST = New cePD_CONTRACT_MST(mobjSCGLConfig)
                mobjcePD_CONTRACT_NEW = New cePD_CONTRACT_NEW(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                If strSAVEFLAG = "F" Then
                    intRtn = mobjcePD_CONTRACT_NEW.DeleteDo(strCONTRACTNO)
                Else
                    intRtn = mobjcePD_CONTRACT_MST.DeleteDo(strCONTRACTNO)
                End If

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_CONTRACT_NEW.Dispose()
                mobjcePD_CONTRACT_MST.Dispose()
            End Try
        End With
    End Function

    '계약서 상세 팝업 HEADER 조회
    Public Function SelectRtn_HDR(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strCONTRACTNO As String) As String

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1

        SetConfig(strInfoXML)
        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            Con1 = ""

            If strCONTRACTNO <> "" Then Con1 = String.Format(" AND (A.CONTRACTNO = '{0}')", strCONTRACTNO)

            strWhere = BuildFields(" ", Con1)

            strFormat = " SELECT"
            strFormat = strFormat & " A.CONTRACTNO, "
            strFormat = strFormat & " B.CUSTNAME OUTSNAME,"
            strFormat = strFormat & " A.CONTRACTDAY,"
            strFormat = strFormat & " A.AMT,"
            strFormat = strFormat & " A.CONTRACTNAME"
            strFormat = strFormat & " FROM PD_CONTRACT_MST A, SC_CUST_HDR B"
            strFormat = strFormat & " WHERE A.OUTSCODE = B.HIGHCUSTCODE"
            strFormat = strFormat & " {0}"

            strSQL = String.Format(strFormat, strWhere)

            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)
                Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDR")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '계약서 상세 팝업 DETAIL 조회
    Public Function SelectRtn_DTL(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strCONTRACTNO As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim Con1

        SetConfig(strInfoXML)

        Con1 = ""

        If strCONTRACTNO <> "" Then Con1 = String.Format(" AND (ISNULL(A.CONTRACTNO,'') = '{0}')", strCONTRACTNO)

        strFormat = " SELECT OUTSCODE, OUTSNAME, REGDATE, JOBNO, JOBNAME, ADJAMT"
        strFormat = strFormat & " FROM ("
        strFormat = strFormat & " 	SELECT "
        strFormat = strFormat & " 	A.OUTSCODE,"
        strFormat = strFormat & " 	B.CUSTNAME OUTSNAME,"
        strFormat = strFormat & " 	A.REGDATE,"
        strFormat = strFormat & " 	A.JOBNO,"
        strFormat = strFormat & " 	DBO.PD_JOBNAME_FUN(A.JOBNO) JOBNAME,"
        strFormat = strFormat & " 	A.ADJAMT"
        strFormat = strFormat & " 	FROM PD_EXE_DTL A, SC_CUST_HDR B"
        strFormat = strFormat & " 	WHERE A.OUTSCODE = B.HIGHCUSTCODE"
        strFormat = strFormat & " 	{0}"
        strFormat = strFormat & " 	UNION ALL"
        strFormat = strFormat & " 	SELECT "
        strFormat = strFormat & " 	A.OUTSCODE,"
        strFormat = strFormat & " 	B.CUSTNAME OUTSNAME,"
        strFormat = strFormat & " 	A.REGDATE,"
        strFormat = strFormat & " 	A.JOBNO,"
        strFormat = strFormat & " 	A.JOBNAME,"
        strFormat = strFormat & " 	A.ADJAMT"
        strFormat = strFormat & " 	FROM PD_CONTRACT_NEW A, SC_CUST_HDR B"
        strFormat = strFormat & " 	WHERE A.OUTSCODE = B.HIGHCUSTCODE"
        strFormat = strFormat & " 	{0}"
        strFormat = strFormat & " ) MAIN"

        strWhere = BuildFields(" ", Con1)


        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_DTL")
            Finally
                ' DB 접속 종료

                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
#End Region


#Region "GROUP BLOCK : Entity Function Section"

    Private Function InsertRtn(ByVal xmlRoot As XmlElement, _
                               ByVal strCONTRACTNO As String, _
                               ByVal strOUTSCODE As String, _
                               ByVal strCONTRACTNAME As String, _
                               ByVal strDELIVERYDAY As String, _
                               ByVal strSTDATE As String, _
                               ByVal strEDDATE As String, _
                               ByVal strTESTDAY As String, _
                               ByVal strTESTENDDAY As String, _
                               ByVal strCONTRACTDAY As String, _
                               ByVal strCONFIRMFLAG As String, _
                               ByVal strCONFLAG As String, _
                               ByVal strDIVFLAG As String, _
                               ByVal strCOMENT As String, _
                               ByVal strAMTFLAG As String) As Integer

        Dim intRtn As Integer

        intRtn = mobjcePD_CONTRACT_MST.InsertDo( _
                                       strCONTRACTNO, _
                                       strOUTSCODE, _
                                       strCONTRACTNAME, _
                                       XMLGetElement(xmlRoot, "LOCALAREA"), _
                                       strDELIVERYDAY, _
                                       XMLGetElement(xmlRoot, "AMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "PRERATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "PREAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ENDRATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ENDAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "THISRATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "THISAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "BALANCERATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "BALANCEAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "DELIVERYGUARANTY", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "FAULTGUARANTY", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "PAYMENTGBN"), _
                                       strSTDATE, _
                                       strEDDATE, _
                                       strCONTRACTDAY, _
                                       XMLGetElement(xmlRoot, "MANAGER"), _
                                       strTESTDAY, _
                                       strTESTENDDAY, _
                                       XMLGetElement(xmlRoot, "TESTMENT"), _
                                       XMLGetElement(xmlRoot, "TESTAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "LOSTDAY", NULL_NUM, True), _
                                       strCONFIRMFLAG, _
                                       strCONFLAG, _
                                       strDIVFLAG, _
                                       strCOMENT, _
                                       strAMTFLAG, _
                                       XMLGetElement(xmlRoot, "ATTR01"), _
                                       XMLGetElement(xmlRoot, "ATTR02"), _
                                       XMLGetElement(xmlRoot, "ATTR03"), _
                                       XMLGetElement(xmlRoot, "ATTR04"), _
                                       XMLGetElement(xmlRoot, "ATTR05"), _
                                       XMLGetElement(xmlRoot, "ATTR06", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR07", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR08", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR09", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR10", NULL_NUM, True))
        '        Return intRtn
    End Function
    'strCONTRACTCODE
    Private Function InsertRtn_PD_CONTRACT_NEW(ByVal vntData As Object, _
                                               ByVal intColCnt As Integer, _
                                               ByVal intRow As Integer, _
                                               ByVal strREGDATE As String, _
                                               ByVal strJOBGUBN As String, _
                                               ByVal strCREPART As String, _
                                               ByVal strCONTRACTGUBUN As String, _
                                               ByVal strCONTRACTCODE As String) As Integer


        Dim intRtn As Integer
        intRtn = mobjcePD_CONTRACT_NEW.InsertDo( _
                                       GetElement(vntData, "OUTSCODE", intColCnt, intRow), _
                                       GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                       GetElement(vntData, "JOBNAME", intColCnt, intRow), _
                                       GetElement(vntData, "ADJAMT", intColCnt, intRow, NULL_NUM, True), _
                                       strREGDATE, _
                                       strJOBGUBN, _
                                       strCREPART, _
                                       GetElement(vntData, "CONTRACTNO", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_USER", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_DATE", intColCnt, intRow), _
                                       GetElement(vntData, "AMTFLAG", intColCnt, intRow), _
                                       strCONTRACTCODE, _
                                       strCONTRACTGUBUN, _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    Private Function UpdateRtn_PD_CONTRACT_NEW(ByVal vntData As Object, _
                                               ByVal intColCnt As Integer, _
                                               ByVal intRow As Integer, _
                                               ByVal strREGDATE As String, _
                                               ByVal strJOBGUBN As String, _
                                               ByVal strCREPART As String, _
                                               ByVal strCONTRACTGUBUN As String, _
                                               ByVal strCONTRACTCODE As String) As Integer

        Dim intRtn As Integer
        intRtn = mobjcePD_CONTRACT_NEW.UpdateDo( _
                                       GetElement(vntData, "SEQ", intColCnt, intRow), _
                                       GetElement(vntData, "OUTSCODE", intColCnt, intRow), _
                                       GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                       GetElement(vntData, "JOBNAME", intColCnt, intRow), _
                                       GetElement(vntData, "ADJAMT", intColCnt, intRow, NULL_NUM, True), _
                                       strREGDATE, _
                                       strJOBGUBN, _
                                       strCREPART, _
                                       GetElement(vntData, "CONTRACTNO", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_USER", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_DATE", intColCnt, intRow), _
                                       GetElement(vntData, "AMTFLAG", intColCnt, intRow), _
                                       strCONTRACTCODE, _
                                       strCONTRACTGUBUN, _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function


    Private Function UpdateRtn(ByVal vntData As Object, _
                               ByVal intColCnt As Integer, _
                               ByVal intRow As Integer, _
                               ByVal strDELIVERYDAY As String, _
                               ByVal strSTDATE As String, _
                               ByVal strEDDATE As String, _
                               ByVal strTESTDAY As String, _
                               ByVal strTESTENDDAY As String, _
                               ByVal strCONTRACTDAY As String, _
                               ByVal strCOMENT As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjcePD_CONTRACT_MST.UpdateDo( _
                                       GetElement(vntData, "CONTRACTNO", intColCnt, intRow), _
                                       GetElement(vntData, "OUTSCODE", intColCnt, intRow), _
                                       GetElement(vntData, "CONTRACTNAME", intColCnt, intRow), _
                                       GetElement(vntData, "LOCALAREA", intColCnt, intRow), _
                                       strDELIVERYDAY, _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRERATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PREAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ENDRATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ENDAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "THISRATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "THISAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "BALANCERATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "BALANCEAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "DELIVERYGUARANTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "FAULTGUARANTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PAYMENTGBN", intColCnt, intRow), _
                                       strSTDATE, _
                                       strEDDATE, _
                                       strCONTRACTDAY, _
                                       GetElement(vntData, "MANAGER", intColCnt, intRow), _
                                       strTESTDAY, _
                                       strTESTENDDAY, _
                                       GetElement(vntData, "TESTMENT", intColCnt, intRow), _
                                       GetElement(vntData, "TESTAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "LOSTDAY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "CONFIRMFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "CONFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "DIVFLAG", intColCnt, intRow), _
                                       strCOMENT, _
                                       GetElement(vntData, "AMTFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    Private Function InsertRtn_CONTRACT_TEMP(ByVal strCONTRACTNO As String, _
                                             ByRef dblNUM As String, _
                                             ByRef strUSERID As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjcePD_CONTRACT_TEMP.InsertDo( _
                                       strCONTRACTNO, _
                                       dblNUM, _
                                       strUSERID)
        Return intRtn

    End Function

    Private Function UpdateRtn_PD_EXE_DTL(ByVal vntData As Object, _
                                          ByVal intColCnt As Integer, _
                                          ByVal intRow As Integer, _
                                          ByVal strAMTFLAG As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjcePD_CONTRACT_MST.UpdateDo_PD_EXE_DTL( _
                                       GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                       GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                                       strAMTFLAG)
        Return intRtn
    End Function

#End Region
End Class

