'****************************************************************************************
'Generated By  : Kim Tae Ho 
'시스템구분    : RMS/PD/Server Control Class
'실행   환경   : COM+ Service Server Package
'프로그램명    : ccPDCOPREESTSUB.vb
'기         능 : - 상세견적관리
'특이  사항    : - CE 단 Query 복사 기능
'                -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2009.10.19 Kim Tae Ho
'            2) 
'****************************************************************************************
Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports ePDCO
Public Class ccPDCOPREESTSUB
    Inherits ccControl

#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccPDCOPREESTDLT"                  '자신의 클래스명
    Private mobjcePD_SUBITEM_DTL As ePDCO.cePD_SUBITEM_DTL            '사용할 Entity 변수 선언
    Private mobjcePD_SUBITEM_INPUT As ePDCO.cePD_SUBITEM_INPUT            '사용할 Entity 변수 선언
#End Region

#Region "GROUP BLOCK : Function Section"
    '기존값이외의 PD_SUBITEM 내용을 채워넣는다.
    Public Function SelectRtn_Fill(ByVal strInfoXML As String, _
                                   ByRef intRowCnt As Integer, _
                                   ByRef intColCnt As Integer, _
                                   ByVal strPREESTNO As String, _
                                   ByVal strITEMCODE As String, _
                                   ByVal strSEQString As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)




        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            strSQL = " SELECT "
            strSQL = strSQL & " Null SEQ,SEQ SUBITEMCODESEQ,'" & strPREESTNO & "' PREESTNO, "
            strSQL = strSQL & " SUBITEMNAME,PRICE,0 QTY,1 TERM,0 AMT,'' MEMO, "
            strSQL = strSQL & " PRICE EXEPRICE,0 EXEQTY,1 EXETERM,0 EXEAMT,'' EXEMEMO,'N' SAVEFLAG,'Y' NEWFLAG "
            strSQL = strSQL & " FROM PD_SUBITEM "
            strSQL = strSQL & " WHERE ITEMCODE = '" & strITEMCODE & "' "
            strSQL = strSQL & " AND SEQ NOT IN (" & strSEQString & ") "
            strSQL = strSQL & " ORDER BY SEQ "

            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Fill")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    'PD_SUBITEM 테이블에서 항목을 가져온다.
    Public Function SelectRtn_Empty(ByVal strInfoXML As String, _
                                    ByRef intRowCnt As Integer, _
                                    ByRef intColCnt As Integer, _
                                    ByVal strPREESTNO As String, _
                                    ByVal strITEMCODE As String, _
                                    ByVal strITEMCODESEQ As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            strSQL = " SELECT "
            strSQL = strSQL & " Null SEQ,"
            strSQL = strSQL & " SEQ PRINT_SEQ,"
            strSQL = strSQL & " SEQ SUBITEMCODESEQ, "
            strSQL = strSQL & " '" & strPREESTNO & "' PREESTNO, "
            strSQL = strSQL & " SUBITEMNAME,  "
            strSQL = strSQL & " PRICE,  "
            strSQL = strSQL & " 0 QTY,  "
            strSQL = strSQL & " 1 TERM,  "
            strSQL = strSQL & " 0 AMT,  "
            strSQL = strSQL & " '' MEMO,  "
            strSQL = strSQL & " PRICE EXEPRICE,  "
            strSQL = strSQL & " 0 EXEQTY,  "
            strSQL = strSQL & " 1 EXETERM,  "
            strSQL = strSQL & " 0 EXEAMT,  "
            strSQL = strSQL & " '' EXEMEMO,'" & strITEMCODESEQ & "' IMESEQ, "
            strSQL = strSQL & " 'N' SAVEFLAG,'Y' NEWFLAG "
            strSQL = strSQL & " FROM PD_SUBITEM "
            strSQL = strSQL & " WHERE ITEMCODE = '" & strITEMCODE & "' "
            strSQL = strSQL & " ORDER BY SUBITEMCODESEQ "

            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Empty")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
    'PD_SUBITEM_INPUT 테이블에서 가져온다. (실제투입전 데이터를 임시저장 한다.)
    Public Function SelectRtn_Temp(ByVal strInfoXML As String, _
                                   ByRef intRowCnt As Integer, _
                                   ByRef intColCnt As Integer, _
                                   ByVal strJOBNO As String, _
                                   ByVal strITEMCODE As String, _
                                   ByVal strITEMCODESEQ As String, _
                                   ByVal strPREESTNO As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언
        Dim strUSER

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strUSER = .WRKUSR()

            strSQL = " SELECT "
            strSQL = strSQL & " '0'CHK, "
            strSQL = strSQL & " SEQ,SUBITEMCODESEQ,PRINT_SEQ,PREESTNO, "
            strSQL = strSQL & " SUBITEMNAME,PRICE,QTY,TERM,AMT,MEMO, "
            strSQL = strSQL & " EXEPRICE, "
            strSQL = strSQL & " EXEQTY, "
            strSQL = strSQL & " EXETERM, "
            strSQL = strSQL & " EXEAMT, "
            strSQL = strSQL & " EXEMEMO, "
            strSQL = strSQL & " '" & strITEMCODESEQ & "' IMESEQ,'N' SAVEFLAG,'' NEWFLAG "
            strSQL = strSQL & " FROM "
            strSQL = strSQL & " ( "
            strSQL = strSQL & "     SELECT "
            strSQL = strSQL & "     SEQ,SUBITEMCODESEQ, "
            strSQL = strSQL & "     ROW_NUMBER() OVER (ORDER BY PRINT_SEQ) PRINT_SEQ,PREESTNO, "
            strSQL = strSQL & "     SUBITEMNAME,  "
            strSQL = strSQL & "     PRICE,  "
            strSQL = strSQL & "     QTY,  "
            strSQL = strSQL & "     TERM,  "
            strSQL = strSQL & "     AMT,  "
            strSQL = strSQL & "     MEMO,  "
            strSQL = strSQL & "     EXEPRICE,  "
            strSQL = strSQL & "     EXEQTY,  "
            strSQL = strSQL & "     EXETERM,  "
            strSQL = strSQL & "     EXEAMT,  "
            strSQL = strSQL & "     EXEMEMO "
            strSQL = strSQL & "     FROM PD_SUBITEM_INPUT "
            strSQL = strSQL & "     WHERE ATTR01 = '" & strJOBNO & "' "
            strSQL = strSQL & "     AND ITEMCODE = '" & strITEMCODE & "' "
            strSQL = strSQL & "     AND ITEMCODESEQ = '" & strITEMCODESEQ & "' "
            strSQL = strSQL & "     AND PREESTNO in ('" & strPREESTNO & "','9999999999') "
            strSQL = strSQL & "     AND CUSER = '" & strUSER & "' "
            strSQL = strSQL & " ) DATA "
            strSQL = strSQL & " ORDER BY PRINT_SEQ "

            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Temp")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '실제 투입되어진 부문 항목을 가져온되, 해당 견적과 본견적을 동시에 조회한다. 단, 해당견적에 내역이 없고 본견적에만 있을 경우 포함하여 조회한다.

    Public Function SelectRtn_Dtl(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strPREESTNO As String, _
                                  ByVal strITEMCODE As String, _
                                  ByVal strITEMCODESEQ As String, _
                                  ByVal strJOBNO As String) As Object
        '다음의 변수를 이용하여 DTL 테이블에서 조회하여 온다.
        'mstrPREESTNO,mstrITEMCODE,mstrITEMCODESEQ
        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            strSQL = " SELECT "
            strSQL = strSQL & " '0' CHK, "
            strSQL = strSQL & " SEQ, "
            strSQL = strSQL & " SUBITEMCODESEQ, "
            strSQL = strSQL & " PRINT_SEQ, "
            strSQL = strSQL & " PREESTNO, "
            strSQL = strSQL & " SUBITEMNAME, "
            strSQL = strSQL & " PRICE, "
            strSQL = strSQL & " QTY, "
            strSQL = strSQL & " TERM, "
            strSQL = strSQL & " AMT, "
            strSQL = strSQL & " MEMO, "
            strSQL = strSQL & " EXEPRICE, "
            strSQL = strSQL & " EXEQTY, "
            strSQL = strSQL & " EXETERM, "
            strSQL = strSQL & " EXEAMT, "
            strSQL = strSQL & " EXEMEMO, "
            strSQL = strSQL & " DBO.PD_IMESEQ_FUN('" & strPREESTNO & "','" & strITEMCODE & "','" & strITEMCODESEQ & "') IMESEQ, "
            strSQL = strSQL & " 'Y' SAVEFLAG,'' NEWFLAG "
            strSQL = strSQL & " FROM "
            strSQL = strSQL & " ( "
            strSQL = strSQL & "     SELECT "
            strSQL = strSQL & "     SEQ, "
            strSQL = strSQL & "     SUBITEMCODESEQ, "
            strSQL = strSQL & "     ROW_NUMBER() OVER (ORDER BY PRINT_SEQ) PRINT_SEQ, "
            strSQL = strSQL & "     PREESTNO, "
            strSQL = strSQL & "     SUBITEMNAME,  "
            strSQL = strSQL & "     PRICE,  "
            strSQL = strSQL & "     QTY,  "
            strSQL = strSQL & "     TERM,  "
            strSQL = strSQL & "     AMT,  "
            strSQL = strSQL & "     MEMO, "
            strSQL = strSQL & "     EXEPRICE, "
            strSQL = strSQL & "     EXEQTY, "
            strSQL = strSQL & "     EXETERM, "
            strSQL = strSQL & "     EXEAMT, "
            strSQL = strSQL & "     EXEMEMO "
            strSQL = strSQL & "     FROM PD_SUBITEM_DTL "
            strSQL = strSQL & "     WHERE ATTR01 = '" & strJOBNO & "' "
            strSQL = strSQL & "     AND ITEMCODE = '" & strITEMCODE & "' "
            strSQL = strSQL & " 	AND ITEMCODESEQ = " & strITEMCODESEQ
            strSQL = strSQL & "     AND PREESTNO in ('" & strPREESTNO & "','9999999999') "
            strSQL = strSQL & " ) ENDDATA "
            strSQL = strSQL & " ORDER BY PRINT_SEQ "


            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Dtl")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '팝업을 종료하기전에 금액을 조회하여 리턴한다. 실제로 저장된 금액을 메인 화면과 비교하여 차이를 확실히 구분하기 위함.
    'gstrConfigXml,mlngRowCnt,mlngColCnt, mstrJOBNO, mstrITEMCODE, mstrITEMCODESEQ)

    '=============== 견적 TYPE 상단그리드 조회
    Public Function SelectRtn_INPUTAMT(ByVal strInfoXML As String, _
                                       ByRef intRowCnt As Integer, _
                                       ByRef intColCnt As Integer, _
                                       ByVal strJOBNO As String, _
                                       ByVal strITEMCODE As String, _
                                       ByVal strITEMCODESEQ As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                SetConfig(strInfoXML) '기본정보 Setting

                strSQL = " SELECT "
                strSQL = strSQL & " SUM(ISNULL(AMT,0)) AS AMT,SUM(ISNULL(EXEAMT,0)) AS EXEAMT"
                strSQL = strSQL & " FROM PD_SUBITEM_INPUT"
                strSQL = strSQL & " WHERE ATTR01 = '" & strJOBNO & "'"
                strSQL = strSQL & " AND ITEMCODE = '" & strITEMCODE & "'"
                strSQL = strSQL & " AND ITEMCODESEQ = " & strITEMCODESEQ

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_INPUTAMT")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    ' =============== 현재INPUT 에 진행중인 상세 견적을 조회한다.
    Public Function SelectRtn_TempCount(ByVal strInfoXML As String, _
                                        ByRef intTempRowCnt As Integer, _
                                        ByRef intTempColCnt As Integer, _
                                        ByVal strJOBNO As String, _
                                        ByVal strITEMCODE As String, _
                                        ByVal strITEMCODESEQ As Double, _
                                        ByVal strPREESTNO As String) As Object

        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            strSQL = " SELECT SEQ FROM PD_SUBITEM_INPUT "
            strSQL = strSQL & " WHERE ATTR01 = '" & strJOBNO & "' "
            strSQL = strSQL & " AND ITEMCODE ='" & strITEMCODE & "' "
            strSQL = strSQL & " And ITEMCODESEQ = " & strITEMCODESEQ
            strSQL = strSQL & " And PREESTNO in ('" & strPREESTNO & "','9999999999') "


            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intTempRowCnt, intTempColCnt, , True)
                Return vntData
                ' ------ XML 데이터 조회
                'strXMLData = .mobjSCGLSql.SQLSelectOneScalar(strSQL) ', intRowCnt, intColCnt
                'Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TempCount")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
    'mstrPREESTNO,mstrITEMCODE,mstrITEMCODESEQ
    ' =============== 현재PD_SUBITEM_DTL 에 값이 저장되고 있는지 알아봄 (사용)
    Public Function SelectRtn_DtlCount(ByVal strInfoXML As String, _
                                       ByRef intTempRowCnt As Integer, _
                                       ByRef intTempColCnt As Integer, _
                                       ByVal strJOBNO As String, _
                                       ByVal strITEMCODE As String, _
                                       ByVal dblITEMCODESEQ As Double, _
                                       ByVal strPREESTNO As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = " SELECT SEQ FROM PD_SUBITEM_DTL "
            strSQL = strSQL & " WHERE ATTR01 = '" & strJOBNO & "' "
            strSQL = strSQL & " AND ITEMCODE ='" & strITEMCODE & "' "
            strSQL = strSQL & " And ITEMCODESEQ = " & dblITEMCODESEQ
            strSQL = strSQL & " And PREESTNO in ('" & strPREESTNO & "','9999999999') "

            Try

                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intTempRowCnt, intTempColCnt, , True)
                Return vntData
                ' ------ XML 데이터 조회
                'strXMLData = .mobjSCGLSql.SQLSelectOneScalar(strSQL) ', intRowCnt, intColCnt
                'Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_DtlCount")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
    '-------------TV- CF 견적 상세내역 팝업에서  저장 .
    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal vntData As Object, _
                               ByVal strJOBNO As String, _
                               ByVal strPREESTNO As String, _
                               ByVal strITEMCODE As String, _
                               ByVal strITEMCODESEQ As Double, _
                               ByVal strGBN As String, _
                               ByVal strNEWFLAG As String) As Integer

        Dim intRtn As Integer '결과값 변수
        Dim intRtn2 As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim strUSER

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                strUSER = .WRKUSR

                mobjcePD_SUBITEM_INPUT = New cePD_SUBITEM_INPUT(mobjSCGLConfig)
                'XML Element 변수 선언 (strMasterXML을 변환)
                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                '테이블을 저장 하기 전에 먼저 템프 테이블을 지우고 인서트 한다.
                intRtn = mobjcePD_SUBITEM_INPUT.DeleteRnt_Input(strJOBNO, strITEMCODE, strITEMCODESEQ, strUSER)

                intRtn2 = ProcessRtn_DETAIL_ONE(vntData, strJOBNO, strPREESTNO, strITEMCODE, strITEMCODESEQ, strGBN, strNEWFLAG)

                .mobjSCGLSql.SQLCommitTrans()

                Return intRtn2
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_SUBITEM_INPUT.Dispose()
            End Try
        End With
    End Function

    ' ============== PD_SUBITEM_INPUT 에 인서트 팝업의 이벤트는 모두 여기에 저장 삭제 된다.
    Public Function ProcessRtn_DETAIL_ONE(ByVal vntData As Object, _
                                          ByVal strJOBNO As String, _
                                          ByVal strPREESTNO As String, _
                                          ByVal strITEMCODE As String, _
                                          ByVal strITEMCODESEQ As Double, _
                                          ByVal strGBN As String, _
                                          ByVal strNEWFLAG As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblSEQ As Double
        Dim dblITEMCODESEQ
        Dim dblSUBITEMCODESEQ As Double


        With mobjSCGLConfig
            Try
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_SUBITEM_INPUT = New cePD_SUBITEM_INPUT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop
                    For i = 1 To intRows

                        strPREESTNO = GetElement(vntData, "PREESTNO", intColCnt, i)
                        dblSUBITEMCODESEQ = GetElement(vntData, "SUBITEMCODESEQ", intColCnt, i, NULL_NUM, True)

                        '신규데이터 [모든데이터를 가져왔을때 체크한 데이터만 뿌려준다.]
                        If strNEWFLAG = "Y" Then
                            If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 Or GetElement(vntData, "MOVEFLAG", intColCnt, i, OPTIONAL_STR) = "Y" Then

                                If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                                    dblSEQ = SelectRtn_SEQNO(strJOBNO)
                                    If dblSUBITEMCODESEQ = -999999 Then
                                        dblSUBITEMCODESEQ = SelectRtn_SUBSEQNO(strITEMCODE)
                                    End If
                                    intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strGBN, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, strJOBNO)
                                Else
                                    dblSEQ = GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True)

                                    intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strGBN, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, strJOBNO)
                                End If
                            End If
                        Else
                            '모든 데이터가 아닐경우 모든 데이터를 저장 한다.
                            If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                                dblSEQ = SelectRtn_SEQNO(strJOBNO)
                                If dblSUBITEMCODESEQ = -999999 Then
                                    dblSUBITEMCODESEQ = SelectRtn_SUBSEQNO(strITEMCODE)
                                End If

                                intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strGBN, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, strJOBNO)
                            Else
                                dblSEQ = GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True)

                                intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strGBN, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, strJOBNO)
                            End If
                        End If
                    Next
                End If

                Return intRows
            Catch err As Exception

                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_DETAIL_ONE")
            Finally
                mobjcePD_SUBITEM_INPUT.Dispose()
            End Try
        End With
    End Function

    '============== 서브항목의 SEQ 생성
    Public Function SelectRtn_SEQNO(ByVal strJOBNO As String) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            Try

                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 "
                strSQL = strSQL & " FROM PD_SUBITEM_INPUT "
                strSQL = strSQL & " WHERE ATTR01 = '" & strJOBNO & "' "

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function
    '============== PD_SUBITEM SEQ 생성
    Public Function SelectRtn_SUBSEQNO(ByVal strITEMCODE As String) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting
        Dim strPRECODE As String
        With mobjSCGLConfig '기본정보 Config 개체

            Try

                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 "
                strSQL = strSQL & " FROM PD_SUBITEM "
                strSQL = strSQL & " WHERE ITEMCODE = '" & strITEMCODE & "'"

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SUBSEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function
    '============== PD_SUBITEM SORTSEQ 가져오기
    Public Function SelectRtn_SORTSEQ(ByVal strITEMCODE As String) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting
        Dim strPRECODE As String
        With mobjSCGLConfig '기본정보 Config 개체

            Try
                strSQL = "SELECT DBO.PD_SUBITEMSORTSEQ_FUN('" & strITEMCODE & "')"

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SORTSEQ")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function
    '============== PD_SUBITEM SORTSEQ 가져오기
    Public Function SelectRtn_ITEMNAME(ByVal strITEMCODE As String) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting
        Dim strPRECODE As String
        With mobjSCGLConfig '기본정보 Config 개체

            Try

                strSQL = "SELECT ITEMNAME "
                strSQL = strSQL & " FROM PD_ITEMCODE "
                strSQL = strSQL & " WHERE ITEMCODE = '" & strITEMCODE & "' "

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ITEMNAME")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function
    '============== TEMP INSERT 서브항목의 SEQ 생성
    Public Function SelectRtn_TEMPSEQNO(ByVal strPREESTNO As String) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting
        Dim strPRECODE As String
        With mobjSCGLConfig '기본정보 Config 개체

            Try

                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 "
                strSQL = strSQL & " FROM PD_SUBITEM_INPUT "
                strSQL = strSQL & " WHERE PREESTNO = '" & strPREESTNO & "' "

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TEMPSEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function


    '============== PD_SUBITEM_DTL 의 삭제처리   'mstrJOBNO,mstrITEMCODE,mstrITEMCODESEQ)mstrGBN
    Public Function DeleteRtn_Temp(ByVal strInfoXML As String, _
                                   ByVal vntData As Object, _
                                   ByVal strJOBNO As String, _
                                   ByVal strITEMCODE As Double, _
                                   ByVal strITEMCODESEQ As Double, _
                                   ByVal strGBN As String) As Integer

        Dim intRtn As Integer       'Return변수( 처리건수 또는 0 )
        Dim intRtn2 As Integer      'Return변수( 처리건수 또는 0 )
        Dim CUSER As String         '템프를 지울때 항상 USERID 를 이용한다.


        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                CUSER = .WRKUSR

                mobjcePD_SUBITEM_INPUT = New cePD_SUBITEM_INPUT(mobjSCGLConfig)

                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 해당 상세 견적의 INPUT 데이터를 모두 삭제 후 저장
                intRtn = mobjcePD_SUBITEM_INPUT.DeleteRnt_Input(strJOBNO, strITEMCODE, strITEMCODESEQ, CUSER)

                intRtn2 = ProcessRtn_InsertInput(vntData, strJOBNO, strITEMCODE, strITEMCODESEQ, strGBN)

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn2
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_Temp")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_SUBITEM_INPUT.Dispose()
            End Try
        End With
    End Function

    ' ============== 팝업에서 삭제하였을 경우 남아있는 모든 데이터를 INSERT 
    Public Function ProcessRtn_InsertInput(ByVal vntData As Object, _
                                           ByVal strJOBNO As String, _
                                           ByVal strITEMCODE As String, _
                                           ByVal strITEMCODESEQ As String, _
                                           ByVal strGBN As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strPREESTNO
        Dim dblSUBITEMCODESEQ
        Dim dblSEQ

        With mobjSCGLConfig
            Try
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_SUBITEM_INPUT = New cePD_SUBITEM_INPUT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop

                    For i = 1 To intRows
                        strPREESTNO = GetElement(vntData, "PREESTNO", intColCnt, i)

                        dblSUBITEMCODESEQ = GetElement(vntData, "SUBITEMCODESEQ", intColCnt, i, NULL_NUM, True)

                        If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                            dblSEQ = SelectRtn_SEQNO(strJOBNO)
                            If dblSUBITEMCODESEQ = -999999 Then
                                dblSUBITEMCODESEQ = SelectRtn_SUBSEQNO(strITEMCODE)
                            End If

                            intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strGBN, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, strJOBNO)
                        Else
                            dblSEQ = GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True)

                            intRtn = InsertRtn_Temp(vntData, intColCnt, i, dblSEQ, strGBN, strITEMCODE, strITEMCODESEQ, dblSUBITEMCODESEQ, strJOBNO)
                        End If
                    Next
                End If

                Return intRows
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_InsertInput")
            Finally
                mobjcePD_SUBITEM_INPUT.Dispose()
            End Try
        End With
    End Function

#End Region

#Region "GROUP BLOCK : Entity Function Section"

    Private Function InsertRtn_Temp(ByVal vntData As Object, _
                                    ByVal intColCnt As Integer, _
                                    ByVal intRow As Integer, _
                                    ByVal dblSEQ As Double, _
                                    ByVal strGBN As String, _
                                    ByVal strITEMCODE As String, _
                                    ByVal strITEMCODESEQ As Double, _
                                    ByVal dblSUBITEMCODESEQ As Double, _
                                    ByVal strJOBNO As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjcePD_SUBITEM_INPUT.InsertDo( _
                                    GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                                    dblSEQ, _
                                    dblSUBITEMCODESEQ, _
                                    strITEMCODESEQ, _
                                    strITEMCODE, _
                                    strITEMCODESEQ, _
                                    GetElement(vntData, "PRINT_SEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "MEMO", intColCnt, intRow), _
                                    GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                                    strGBN, _
                                    "", _
                                    GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                                    strJOBNO, _
                                    GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function
    Private Function UpdateRtn_Temp(ByVal vntData As Object, _
                                    ByVal intColCnt As Integer, _
                                    ByVal intRow As Integer, _
                                    ByVal strGBN As String, _
                                    ByVal strITEMCODE As String, _
                                    ByVal strITEMCODESEQ As Double, _
                                    ByVal dblIMESEQ As Double) As Integer

        Dim intRtn As Integer
        'PREESTNO,SEQ,ITEMCODESEQ,ITEMCODE,SORTSEQ,PRICE,QTY,TERM,AMT,MEMO,CONFIRMGBN
        intRtn = mobjcePD_SUBITEM_INPUT.UpdateDo( _
                                    GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                                    GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "SUBITEMCODESEQ", intColCnt, intRow, NULL_NUM, True), _
                                    strITEMCODESEQ, _
                                    strITEMCODE, _
                                    dblIMESEQ, _
                                    GetElement(vntData, "PRINT_SEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "MEMO", intColCnt, intRow), _
                                    GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                                    strGBN, _
                                    GetElement(vntData, "NEWFLAG", intColCnt, intRow), _
                                    GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                    GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                    GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    Private Function InsertRtn(ByVal vntData As Object, _
                               ByVal intColCnt As Integer, _
                               ByVal intRow As Integer, _
                               ByVal dblID As Double, _
                               ByVal strGBN As String, _
                               ByVal strITEMCODE As String, _
                               ByVal strITEMCODESEQ As Double, _
                               ByVal dblIMESEQ As Double, _
                               ByVal dblSUBITEMCODESEQ As Double) As Integer
        Dim intRtn As Integer
        'PREESTNO,SEQ,ITEMCODESEQ,ITEMCODE,SORTSEQ,PRICE,QTY,TERM,AMT,MEMO,CONFIRMGBN
        intRtn = mobjcePD_SUBITEM_DTL.InsertDo( _
                               GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                               dblID, _
                               dblSUBITEMCODESEQ, _
                               strITEMCODESEQ, _
                               strITEMCODE, _
                               dblIMESEQ, _
                               dblSUBITEMCODESEQ, _
                               GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "MEMO", intColCnt, intRow), _
                               GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                               strGBN, _
                               GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                               GetElement(vntData, "ATTR01", intColCnt, intRow), _
                               GetElement(vntData, "ATTR02", intColCnt, intRow), _
                               GetElement(vntData, "ATTR03", intColCnt, intRow), _
                               GetElement(vntData, "ATTR04", intColCnt, intRow), _
                               GetElement(vntData, "ATTR05", intColCnt, intRow), _
                               GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function
    Private Function UpdateRtn(ByVal vntData As Object, _
                               ByVal intColCnt As Integer, _
                               ByVal intRow As Integer, _
                               ByVal strGBN As String, _
                               ByVal strITEMCODE As String, _
                               ByVal strITEMCODESEQ As Double, _
                               ByVal dblIMESEQ As Double) As Integer

        Dim intRtn As Integer
        'PREESTNO,SEQ,ITEMCODESEQ,ITEMCODE,SORTSEQ,PRICE,QTY,TERM,AMT,MEMO,CONFIRMGBN
        intRtn = mobjcePD_SUBITEM_DTL.UpdateDo( _
                               GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                               GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "SUBITEMCODESEQ", intColCnt, intRow, NULL_NUM, True), _
                               strITEMCODESEQ, _
                               strITEMCODE, _
                               dblIMESEQ, _
                               GetElement(vntData, "PRINT_SEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "SORTSEQ", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "TERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "MEMO", intColCnt, intRow), _
                               GetElement(vntData, "EXEPRICE", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEQTY", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXETERM", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEAMT", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "EXEMEMO", intColCnt, intRow), _
                               strGBN, _
                               GetElement(vntData, "SUBITEMNAME", intColCnt, intRow), _
                               GetElement(vntData, "ATTR01", intColCnt, intRow), _
                               GetElement(vntData, "ATTR02", intColCnt, intRow), _
                               GetElement(vntData, "ATTR03", intColCnt, intRow), _
                               GetElement(vntData, "ATTR04", intColCnt, intRow), _
                               GetElement(vntData, "ATTR05", intColCnt, intRow), _
                               GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                               GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function
#End Region
End Class
