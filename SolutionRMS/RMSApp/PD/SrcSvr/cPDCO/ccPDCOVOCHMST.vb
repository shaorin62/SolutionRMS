'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 컨트롤 클래스 메이커
'시스템구분    : 솔루션명 /시스템명/Server Control Class
'실행   환경    : COM+ Service Server Package
'프로그램명    : ccMDCMDEPTMST.vb
'기         능    : - 기능을 명시 합니다.
'특이  사항     : - 특이사항에 대해 표현
'                     -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 
'            2) 
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports ePDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트

Public Class ccPDCOVOCHMST
    Inherits ccControl
#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccPDCOVOCHMST"                  '자신의 클래스명
    Private mobjcePD_VOCH_MST As ePDCO.cePD_VOCH_MST             '사용할 Entity 변수 선언

    'Private Const .DBConnStr = "Provider=SQLOLEDB;Data Source=10.110.10.86;Initial Catalog=MCDEV;DSN=MCDEV;UID=devadmin;Pwd=password"
#End Region

#Region "GROUP BLOCK : 외부에비공개"
    Public Function Get_COMBO_VALUE(ByVal strInfoXML As String, _
                                    ByRef intRowCnt As Integer, _
                                    ByRef intColCnt As Integer, _
                                    ByVal strCODE As String) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정					

        '조회 필드 설정					
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = '" & strCODE & "' and use_yn = 'Y'" & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_COMBO_VALUE")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function Get_SUBCOMBO_VALUE(ByVal strInfoXML As String, _
                                       ByRef intRowCnt As Integer, _
                                       ByRef intColCnt As Integer, _
                                       ByVal strCODE As String) As Object

        Dim strSQL, strFormat As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정					

        '조회 필드 설정					
        strFormat = " SELECT "
        strFormat = strFormat & " BANK_TYPE CODE, "
        strFormat = strFormat & " BANK_TYPE CODE_NAME "
        strFormat = strFormat & " FROM SC_BANKTYPE_MST"
        strFormat = strFormat & " WHERE 1=1"
        strFormat = strFormat & " AND REPLACE(BUSINO,'-','') = '" & strCODE & "'"
        strFormat = strFormat & " AND USE_YN = 'Y'"

        With mobjSCGLConfig
            strSQL = String.Format(strFormat)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_SUBCOMBO_VALUE")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_SUSU(ByVal strInfoXML As String, _
                                   ByRef intRowCnt As Integer, _
                                   ByRef intColCnt As Integer, _
                                   ByVal strYEARMON As String, _
                                   ByVal strCLIENTCODE As String, _
                                   ByVal strCLIENTNAME As String, _
                                   ByVal strOUTSCODE As String, _
                                   ByVal strOUTSNAME As String, _
                                   ByVal strGBN As String, _
                                   ByVal strPROGBN As String) As Object

        Dim strSQL, strFormat, strWhere As String
        Dim strCondition As String
        Dim strCondition2 As String
        Dim strChkDate As String = ""
        Dim vntData As Object
        Dim Con1, Con2, Con3, Con4, Con5 As String

        Con1 = "" : Con2 = "" : Con3 = "" : Con4 = "" : Con5 = ""

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            If strYEARMON <> "" Then Con1 = String.Format(" AND (A.DEMANDDAY LIKE '%{0}%')", strYEARMON)
            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND A.CLIENTCODE = '{0}'", strCLIENTCODE)
            If strCLIENTNAME <> "" Then Con3 = String.Format(" AND DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE)  LIKE '%{0}%'", strCLIENTNAME)

            If strGBN <> "" Then
                If strGBN = "rdT" Then
                    Con4 = " AND ISNULL(A.VOCHNO,'') <> '' "
                ElseIf strGBN = "rdF" Then
                    Con4 = " AND ISNULL(A.VOCHNO,'') = '' AND ISNULL(B.ERRMSG,'') = '' "
                ElseIf strGBN = "rdE" Then
                    Con4 = " AND ISNULL(B.ERRMSG,'') <> '' "
                ElseIf strGBN = "rdA" Then
                    Con4 = " "
                End If
            End If

            If strPROGBN <> "" Then
                If strPROGBN = "rdPRO" Then
                    Con5 = " AND ISNULL(A.JOBGUBN,'') = 'PA05' "
                ElseIf strPROGBN = "rdNONPRO" Then
                    Con5 = " AND ISNULL(A.JOBGUBN,'') <> 'PA05' "
                End If
            End If

            '조회 필드 설정
            strWhere = BuildFields(" ", Con1, Con2, Con3, Con4, Con5)

            strFormat = strFormat & " SELECT "
            strFormat = strFormat & " 0 chk,"
            strFormat = strFormat & " '1' GFLAG, "
            strFormat = strFormat & " CASE ISNULL(B.POSTINGDATE,'') WHEN '' THEN A.DEMANDDAY ELSE B.POSTINGDATE END POSTINGDATE, "
            strFormat = strFormat & " CASE ISNULL(REPLACE(A.CLIENTBUSINO,'-',''),'') WHEN '' THEN REPLACE(DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),'-','') ELSE REPLACE(A.CLIENTBUSINO,'-','') END CUSTOMERCODE, "
            strFormat = strFormat & " CASE ISNULL(A.CLIENTNAME,'') WHEN '' THEN  DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) ELSE A.CLIENTNAME END CUSTNAME, "
            strFormat = strFormat & " CASE ISNULL(B.SUMM,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(A.SUMM)))))+'제작비' ELSE B.SUMM END AS SUMM, "
            strFormat = strFormat & " case when isnull(A.AMT,0) < 0 then abs(isnull(A.AMT,0)) else  dbo.lpad(A.AMT,13,'0') end  amt,  "
            strFormat = strFormat & " case isnull(b.vat,0) when 0 then case when isnull(A.vat,0) < 0 then abs(isnull(A.vat,0)) else dbo.lpad(A.vat,13,'0') end else isnull(b.vat,0) end vat,  "
            strFormat = strFormat & " CASE ISNULL(SEMU,'') WHEN '' THEN 'B0' ELSE ISNULL(SEMU,'') END AS SEMU, "
            strFormat = strFormat & " '8000' BP, "
            strFormat = strFormat & " CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY, "
            strFormat = strFormat & " CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DUEDATE END AS DUEDATE, "
            strFormat = strFormat & " 'P' GBN, "
            strFormat = strFormat & " CASE ISNULL(B.DOCUMENTDATE,'') WHEN '' THEN A.DEMANDDAY ELSE B.DOCUMENTDATE END AS DOCUMENTDATE, "
            strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment,"
            strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.fromdate end as  fromdate, "
            strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.todate end as  todate, "
            strFormat = strFormat & " CASE ISNULL(B.SUMMTEXT,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(A.SUMM)))))+'제작비' ELSE B.SUMMTEXT END AS SUMMTEXT, "
            strFormat = strFormat & " case when isnull(A.AMT,0) < 0 then '-' else '+' end AMTGBN,"
            strFormat = strFormat & " A.TAXYEARMON, "
            strFormat = strFormat & " A.TAXNO, "
            strFormat = strFormat & " case  cast(case a.vochno when '' then '' else a.vochno end as varchar) when '' then null  "
            strFormat = strFormat & " else cast(case a.vochno when '' then '' else a.vochno end as varchar)  end  vochno,"
            strFormat = strFormat & " B.ERRCODE, "
            strFormat = strFormat & " B.ERRMSG, "
            strFormat = strFormat & " DBO.PD_TAX_JOBBASE_FUN(A.TAXYEARMON,A.TAXNO) JOBBASE, "
            strFormat = strFormat & " CASE A.JOBGUBN WHEN 'PA05' THEN 'RMS_0008'"
            strFormat = strFormat & " ELSE 'RMS_0003' END JOBGUBN"
            strFormat = strFormat & " FROM PD_TAX_HDR  A  "
            strFormat = strFormat & " LEFT JOIN PD_VOCH_MST B  "
            strFormat = strFormat & " ON A.TAXYEARMON = B.TAXYEARMON AND A.TAXNO = B.TAXNO  AND B.GBN = 'P' AND ISNULL(B.ATTR01, '') = '0'"
            strFormat = strFormat & " WHERE 1=1"
            strFormat = strFormat & " {0}"
            strFormat = strFormat & " AND isnull(A.attr10,0) <> 999999  "
            strFormat = strFormat & " and isnull(A.MERGEFLAG,'') <> '1' "
            strFormat = strFormat & " order by CUSTOMERCODE  "

            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_SUSUDTL(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByVal strTAXYEARMON As String, _
                                      ByVal strTAXNO As String) As Object

        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1, Con2 As String

        SetConfig(strInfoXML)   '기본정보 설정

        Con1 = "" : Con2 = ""

        If strTAXYEARMON <> "" Then Con1 = String.Format(" AND (C.TAXYEARMON = '{0}')", strTAXYEARMON)
        If strTAXNO <> "" Then Con2 = String.Format(" AND (C.TAXNO = '{0}')", strTAXNO)

        strWhere = BuildFields(" ", Con1, Con2)

        strFormat = strFormat & " SELECT "
        strFormat = strFormat & " '1' GFLAG, "
        strFormat = strFormat & " CASE ISNULL(B.POSTINGDATE,'') WHEN '' THEN A.DEMANDDAY ELSE B.POSTINGDATE END POSTINGDATE, "
        strFormat = strFormat & " CASE ISNULL(REPLACE(A.CLIENTBUSINO,'-',''),'') WHEN '' THEN REPLACE(DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),'-','') ELSE REPLACE(A.CLIENTBUSINO,'-','') END CUSTOMERCODE, "
        strFormat = strFormat & " CASE ISNULL(A.CLIENTNAME,'') WHEN '' THEN  DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) ELSE A.CLIENTNAME END CUSTNAME, "
        strFormat = strFormat & " CASE ISNULL(B.SUMM,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(A.SUMM)))))+'제작비' ELSE B.SUMM END AS SUMM, "
        strFormat = strFormat & " CASE isnull(b.ba,'') when '' then dbo.SC_GET_BA(DBO.PD_JOBNO_DEPTCDREALTAX_FUN(a.taxyearmon, a.taxno)) else b.ba end as BA,"
        strFormat = strFormat & " CASE isnull(b.costcenter,'') when '' then dbo.SC_GET_CCTR(DBO.PD_JOBNO_DEPTCDREALTAX_FUN(a.taxyearmon, a.taxno)) else b.costcenter end as costcenter, "
        strFormat = strFormat & " DBO.SC_DEPT_NAME_FUN(DBO.PD_JOBNO_DEPTCDREALTAX_FUN(a.taxyearmon, a.taxno)) DEPT_NAME, "
        strFormat = strFormat & " case when isnull(A.AMT,0) < 0 then abs(isnull(A.AMT,0)) else  dbo.lpad(A.AMT,13,'0') end  amt,  "
        strFormat = strFormat & " case isnull(b.vat,0) when 0 then case when isnull(A.VAT,0) < 0 then abs(isnull(A.VAT,0)) else  dbo.lpad(A.VAT,13,'0') end else isnull(b.vat,0) end vat, "
        strFormat = strFormat & " CASE ISNULL(SEMU,'') WHEN '' THEN 'B0' ELSE ISNULL(SEMU,'') END AS SEMU, "
        strFormat = strFormat & " '8000' BP, "
        strFormat = strFormat & " CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY, "
        strFormat = strFormat & " CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DUEDATE END AS DUEDATE, "
        strFormat = strFormat & " 'P' GBN, "
        strFormat = strFormat & " CASE  DBO.PD_TAX_JOBBASE_FUN(A.TAXYEARMON,A.TAXNO) WHEN 'Y' THEN CASE ISNULL(B.ACCOUNT,'') WHEN '' THEN '200400' ELSE B.ACCOUNT END WHEN 'N' THEN ISNULL(B.ACCOUNT,'') END AS ACCOUNT, "
        strFormat = strFormat & " CASE  DBO.PD_TAX_JOBBASE_FUN(A.TAXYEARMON,A.TAXNO) WHEN 'Y' THEN CASE ISNULL(B.DEBTOR,'') WHEN '' THEN DBO.PD_VOCHDEBTOR_FUN(A.TAXYEARMON,A.TAXNO) ELSE B.DEBTOR END WHEN 'N' THEN ISNULL(B.DEBTOR,'') END AS DEBTOR, "
        strFormat = strFormat & " CASE ISNULL(B.BMORDER,'') WHEN '' THEN CASE DBO.SC_GET_CCTR(DBO.PD_JOBNO_DEPTCDREALTAX_FUN(A.TAXYEARMON, A.TAXNO)) WHEN '64400' THEN 'AD0320' ELSE 'AD0210' END ELSE B.BMORDER END AS  BMORDER,"
        strFormat = strFormat & " CASE ISNULL(B.BANKTYPE,'') WHEN '' THEN '' ELSE B.BANKTYPE END AS  BANKTYPE,"
        strFormat = strFormat & " CASE ISNULL(B.DOCUMENTDATE,'') WHEN '' THEN A.DEMANDDAY ELSE B.DOCUMENTDATE END AS DOCUMENTDATE, "
        strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment,"
        strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.fromdate end as  fromdate, "
        strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.todate end as  todate, "
        strFormat = strFormat & " CASE ISNULL(B.SUMMTEXT,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(A.SUMM)))))+'제작비' ELSE B.SUMMTEXT END AS SUMMTEXT, "
        strFormat = strFormat & " case when isnull(A.AMT,0) < 0 then '-' else '+' end AMTGBN,"
        strFormat = strFormat & " A.TAXYEARMON, "
        strFormat = strFormat & " A.TAXNO,"
        strFormat = strFormat & " CASE isnull(A.VOCHNO,'') WHEN '' THEN '' ELSE A.VOCHNO END VOCHNO,"
        strFormat = strFormat & " B.ERRCODE, "
        strFormat = strFormat & " B.ERRMSG, "
        strFormat = strFormat & " DBO.PD_TAX_JOBBASE_FUN(A.TAXYEARMON,A.TAXNO) JOBBASE,"
        strFormat = strFormat & " CASE A.JOBGUBN WHEN 'PA05' THEN 'RMS_0008'"
        strFormat = strFormat & " ELSE 'RMS_0003' END JOBGUBN,"
        strFormat = strFormat & " '0' TAXNOSEQ "
        strFormat = strFormat & " FROM PD_TAX_HDR  A  "
        strFormat = strFormat & " LEFT JOIN PD_VOCH_MST B  "
        strFormat = strFormat & " ON A.TAXYEARMON = B.TAXYEARMON AND A.TAXNO = B.TAXNO AND ISNULL(B.ATTR01,'') ='0'  AND B.GBN = 'P'"
        strFormat = strFormat & " WHERE 1=1 "
        strFormat = strFormat & " AND isnull(A.attr10,0) <> 999999  "
        strFormat = strFormat & " and isnull(A.MERGEFLAG,'') <> '1' "
        strFormat = strFormat & " and a.taxyearmon = '" & strTAXYEARMON & "'"
        strFormat = strFormat & " and a.taxno = '" & strTAXNO & "'"

        'strFormat = strFormat & " union all "

        'strFormat = strFormat & " SELECT  "
        'strFormat = strFormat & " '1' GFLAG,  "
        'strFormat = strFormat & " CASE ISNULL(B.POSTINGDATE,'') WHEN '' THEN A.DEMANDDAY ELSE B.POSTINGDATE END POSTINGDATE,  "
        'strFormat = strFormat & " CASE ISNULL(REPLACE(A.CLIENTBUSINO,'-',''),'') WHEN '' THEN REPLACE(DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),'-','') ELSE REPLACE(A.CLIENTBUSINO,'-','') END CUSTOMERCODE,  "
        'strFormat = strFormat & " CASE ISNULL(A.CLIENTNAME,'') WHEN '' THEN  DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) ELSE A.CLIENTNAME END CUSTNAME,  "
        'strFormat = strFormat & " CASE ISNULL(B.SUMM,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(A.SUMM)))))+'제작비' ELSE B.SUMM END AS SUMM,  "
        'strFormat = strFormat & " CASE isnull(b.ba,'') when '' then dbo.SC_GET_BA(DBO.PD_JOBNO_DEPTCDREAL_FUN(C.JOBNO)) else b.ba end as BA, "
        'strFormat = strFormat & " CASE isnull(b.costcenter,'') when '' then dbo.SC_GET_CCTR(DBO.PD_JOBNO_DEPTCDREAL_FUN(C.JOBNO)) else b.costcenter end as costcenter,  "
        'strFormat = strFormat & " DBO.SC_DEPT_NAME_FUN(DBO.PD_JOBNO_DEPTCDREAL_FUN(C.JOBNO)) DEPT_NAME,  "
        'strFormat = strFormat & " case when isnull(C.AMT,0) < 0 then abs(isnull(C.AMT,0)) else  dbo.lpad(C.AMT,13,'0') end  amt,   "
        'strFormat = strFormat & " 0  vat,  "
        'strFormat = strFormat & " CASE ISNULL(SEMU,'') WHEN '' THEN 'B0' ELSE ISNULL(SEMU,'') END AS SEMU,  "
        'strFormat = strFormat & " '8000' BP,  "
        'strFormat = strFormat & " CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY,  "
        'strFormat = strFormat & " CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DUEDATE END AS DUEDATE,  "
        'strFormat = strFormat & " 'P' GBN,  "
        'strFormat = strFormat & " '' ACCOUNT,  "
        'strFormat = strFormat & " CASE  DBO.PD_TAX_JOBBASE_FUN(A.TAXYEARMON,A.TAXNO) WHEN 'Y' THEN CASE ISNULL(B.DEBTOR,'') WHEN '' THEN DBO.PD_VOCHDEBTOR_DTL_FUN(C.JOBNO) ELSE B.DEBTOR END WHEN 'N' THEN ISNULL(B.DEBTOR,'') END AS DEBTOR,  "
        'strFormat = strFormat & " CASE ISNULL(B.DOCUMENTDATE,'') WHEN '' THEN A.DEMANDDAY ELSE B.DOCUMENTDATE END AS DOCUMENTDATE,  "
        'strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment, "
        'strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.fromdate end as  fromdate,  "
        'strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.todate end as  todate,  "
        'strFormat = strFormat & " CASE ISNULL(B.SUMMTEXT,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(A.SUMM)))))+'제작비' ELSE B.SUMMTEXT END AS SUMMTEXT,  "
        'strFormat = strFormat & " case when isnull(c.AMT,0) < 0 then '-' else '+' end AMTGBN, "
        'strFormat = strFormat & " A.TAXYEARMON,  "
        'strFormat = strFormat & " A.TAXNO, "
        'strFormat = strFormat & " CASE isnull(A.VOCHNO,'') WHEN '' THEN '0' ELSE A.VOCHNO END VOCHNO, "
        'strFormat = strFormat & " B.ERRCODE,  "
        'strFormat = strFormat & " B.ERRMSG,  "
        'strFormat = strFormat & " DBO.PD_TAX_JOBBASE_FUN(A.TAXYEARMON,A.TAXNO) JOBBASE, "
        'strFormat = strFormat & " CASE C.JOBGUBN WHEN 'PA05' THEN 'RMS_0008' "
        'strFormat = strFormat & " ELSE 'RMS_0003' END JOBGUBN,"
        'strFormat = strFormat & " C.TAXSEQ TAXNOSEQ "
        'strFormat = strFormat & " FROM PD_TAX_HDR  A, PD_TAX_DTL C"
        'strFormat = strFormat & " LEFT JOIN PD_VOCH_MST B   "
        'strFormat = strFormat & " ON C.TAXYEARMON = B.TAXYEARMON "
        'strFormat = strFormat & " AND C.TAXNO = B.TAXNO "
        'strFormat = strFormat & " AND CAST(C.TAXSEQ AS VARCHAR(10)) = ISNULL(B.ATTR01,'') "
        'strFormat = strFormat & " And B.GBN ='P'"
        'strFormat = strFormat & " WHERE 1=1 {0}"
        'strFormat = strFormat & " AND A.TAXYEARMON = C.TAXYEARMON "
        'strFormat = strFormat & " AND A.TAXNO = C.TAXNO "
        'strFormat = strFormat & " AND isnull(A.attr10,0) <> 999999   "
        'strFormat = strFormat & " and isnull(A.MERGEFLAG,'') <> '1'  "
        'strFormat = strFormat & " order by CUSTOMERCODE "

        strSQL = String.Format(strFormat, strWhere)
        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDR")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_OUT(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strYEARMON As String, _
                                  ByVal strCLIENTCODE As String, _
                                  ByVal strCLIENTNAME As String, _
                                  ByVal strOUTSCODE As String, _
                                  ByVal strOUTSNAME As String, _
                                  ByVal strGBN As String, _
                                  ByVal strPROGBN As String) As Object

        Dim strSQL, strFormat, strWhere As String
        Dim strCondition As String
        Dim strCondition2 As String
        Dim strChkDate As String = ""
        Dim vntData As Object
        Dim Con1, Con2, Con3, Con4, Con5, Con6, Con7 As String

        Con1 = "" : Con2 = "" : Con3 = "" : Con4 = "" : Con5 = "" : Con6 = "" : Con7 = ""

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            If strYEARMON <> "" Then Con1 = String.Format("AND A.ADJDAY LIKE '%{0}%'", strYEARMON)
            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND DBO.PD_JOBCLIENTCODE_FUN(A.JOBNO) = '{0}'", strCLIENTCODE)
            If strCLIENTNAME <> "" Then Con3 = String.Format(" AND DBO.PD_JOBCLIENTNAME_FUN(A.JOBNO) LIKE '%{0}%'", strCLIENTNAME)
            If strOUTSCODE <> "" Then Con4 = String.Format(" AND A.OUTSCODE = '{0}'", strOUTSCODE)
            If strOUTSNAME <> "" Then Con5 = String.Format(" AND DBO.SC_GET_HIGHCUSTNAME_FUN(A.OUTSCODE) LIKE '%{0}%'", strOUTSNAME)

            If strGBN <> "" Then
                If strGBN = "rdT" Then
                    Con6 = " AND ISNULL(A.VOCHNO,'') <> '' "
                ElseIf strGBN = "rdF" Then
                    Con6 = " AND ISNULL(A.VOCHNO,'') = '' AND ISNULL(B.ERRMSG,'') = '' "
                ElseIf strGBN = "rdE" Then
                    Con6 = " AND ISNULL(B.ERRMSG,'') <> '' "
                ElseIf strGBN = "rdA" Then
                    Con6 = " "
                End If
            End If

            If strPROGBN <> "" Then
                If strPROGBN = "rdPRO" Then
                    Con7 = " AND DBO.PD_JOBGUBN_FUN(A.JOBNO) = 'PA05' "
                ElseIf strPROGBN = "rdNONPRO" Then
                    Con7 = " AND DBO.PD_JOBGUBN_FUN(A.JOBNO) <> 'PA05' "
                End If
            End If

            '조회 필드 설정
            strWhere = BuildFields(" ", Con1, Con2, Con3, Con4, Con5, Con6, Con7)

            strFormat = " SELECT "
            strFormat = strFormat & " 0 chk,"
            strFormat = strFormat & " '1' GFLAG, "
            strFormat = strFormat & " CASE ISNULL(B.POSTINGDATE,'') WHEN '' THEN A.ADJDAY ELSE B.POSTINGDATE END POSTINGDATE, "
            strFormat = strFormat & " REPLACE(DBO.SC_GET_BUSINO_FUN(A.OUTSCODE),'-','') CUSTOMERCODE,  A.OUTSCODE,"
            strFormat = strFormat & " DBO.PD_JOBCLIENTNAME_FUN(A.JOBNO) CUSTNAME, "
            strFormat = strFormat & " CASE ISNULL(B.SUMM,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(DBO.PD_JOBNAME_FUN(A.JOBNO))))))+'제작비' ELSE B.SUMM END AS SUMM, "
            strFormat = strFormat & " CASE isnull(b.ba,'') when '' then dbo.SC_GET_BA(DBO.PD_JOBNO_DEPTCDREAL_FUN(A.JOBNO)) else b.ba end as BA,"
            strFormat = strFormat & " CASE isnull(b.costcenter,'') when '' then dbo.SC_GET_CCTR(DBO.PD_JOBNO_DEPTCDREAL_FUN(A.JOBNO)) else b.costcenter end as costcenter, "
            strFormat = strFormat & " DBO.SC_DEPT_NAME_FUN(DBO.PD_JOBNO_DEPTCDREAL_FUN(A.JOBNO)) DEPT_NAME, "
            strFormat = strFormat & " case when isnull(A.AMT,0) < 0 then abs(isnull(A.AMT,0)) else  dbo.lpad(A.AMT,13,'0') end  amt,  "
            strFormat = strFormat & " CASE ISNULL(B.POSTINGDATE,'') WHEN '' THEN CASE DBO.PD_TAXCODE_FUN(A.VATCODE) WHEN 'T' THEN case when isnull(A.AMT,0) < 0 then abs(FLOOR(A.AMT* 0.1)) else FLOOR(A.AMT* 0.1) end WHEN 'F' THEN 0 ELSE 0 END ELSE B.VAT END AS VAT, "
            strFormat = strFormat & " CASE ISNULL(B.POSTINGDATE,'') WHEN '' THEN CASE DBO.PD_TAXCODE_FUN(A.VATCODE) WHEN 'T' THEN 'I0' WHEN 'F' THEN B.SEMU END ELSE ISNULL(B.SEMU,'') END SEMU,  "
            strFormat = strFormat & " '8000' BP,  "
            strFormat = strFormat & " CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.ADJDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY, "
            strFormat = strFormat & " CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.ADJDAY ),112) ELSE B.DUEDATE END AS DUEDATE, "
            strFormat = strFormat & " REPLACE(DBO.SC_GET_BUSINO_FUN(A.OUTSCODE),'-','') VENDOR, "
            strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(A.OUTSCODE) VENDORNAME, "
            strFormat = strFormat & " A.TAXYEARMON,  "
            strFormat = strFormat & " A.TAXNO,  "
            strFormat = strFormat & " 'B' GBN,  "
            strFormat = strFormat & " CASE A.JOBBASE WHEN 'Y' THEN CASE ISNULL(B.ACCOUNT,'') WHEN '' THEN DBO.PD_VOCHACCOUNT_FUN(A.JOBNO) ELSE B.ACCOUNT END WHEN 'N' THEN 	CASE ISNULL(B.ACCOUNT,'')  WHEN '' THEN '681160'ELSE ISNULL(B.ACCOUNT,'')END END AS ACCOUNT ,"
            strFormat = strFormat & " CASE A.JOBBASE WHEN 'Y' THEN CASE ISNULL(B.DEBTOR,'') WHEN '' THEN '404103' ELSE B.DEBTOR END WHEN 'N' THEN ISNULL(B.DEBTOR,'')  END AS DEBTOR, "
            strFormat = strFormat & " CASE ISNULL(B.BMORDER,'') WHEN '' THEN CASE DBO.PD_JOBGUBN_FUN(A.JOBNO) WHEN 'PA05' THEN CASE DBO.SC_GET_CCTR(DBO.PD_JOBNO_DEPTCDREAL_FUN(A.JOBNO)) WHEN '64400' THEN 'AD0320' ELSE 'AD0310' END ELSE 'AD0210' END ELSE B.BMORDER END AS  BMORDER,"
            strFormat = strFormat & " CASE ISNULL(B.BANKTYPE,'') WHEN '' THEN '' ELSE B.BANKTYPE END AS  BANKTYPE,"
            strFormat = strFormat & " CASE ISNULL(B.DOCUMENTDATE,'') WHEN '' THEN A.TAXDATE ELSE B.DOCUMENTDATE END AS DOCUMENTDATE,  "
            strFormat = strFormat & " CASE ISNULL(B.SUMMTEXT,'') WHEN '' THEN RTRIM(LTRIM(CONVERT(CHAR(17),RTRIM(LTRIM(DBO.PD_JOBNAME_FUN(A.JOBNO))))))+'제작비' ELSE B.SUMMTEXT END AS SUMMTEXT,  "
            strFormat = strFormat & " case when isnull(A.AMT,0) < 0 then '-' else '+' end AMTGBN,"
            strFormat = strFormat & " case  cast(case a.vochno when '' then '' else a.vochno end as varchar) when '' then null  "
            strFormat = strFormat & " else cast(case a.vochno when '' then '' else a.vochno end as varchar)  end  vochno,"
            strFormat = strFormat & " B.ERRCODE,  "
            strFormat = strFormat & " B.ERRMSG,  "
            strFormat = strFormat & " CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment, "
            strFormat = strFormat & " CASE isnull(b.fromdate,'') when '' then '' else b.fromdate end as  fromdate, "
            strFormat = strFormat & " CASE isnull(b.todate,'') when '' then '' else b.todate end as  todate, "
            strFormat = strFormat & " ISNULL(B.PAYCODE,'') PAYCODE, A.JOBBASE,"
            strFormat = strFormat & " CASE DBO.PD_JOBGUBN_FUN(A.JOBNO) WHEN 'PA05' THEN 'RMS_0008'"
            strFormat = strFormat & " ELSE 'RMS_0003' END JOBGUBN,"
            strFormat = strFormat & " DENSE_RANK() OVER (ORDER BY A.OUTSCODE DESC) TRANSRANK "
            strFormat = strFormat & " FROM "
            strFormat = strFormat & " ( "
            strFormat = strFormat & " 	SELECT  "
            strFormat = strFormat & " 	JOBNO, SEQ,SUM(ISNULL(ADJAMT,0)) AMT,"
            strFormat = strFormat & " 	OUTSCODE,ADJDAY,SUBSTRING(PURCHASENO,1,6) "
            strFormat = strFormat & " 	TAXYEARMON, CAST(SUBSTRING(PURCHASENO,7,4) AS NUMERIC) TAXNO,"
            strFormat = strFormat & " 	VATCODE, VOCHNO, REGDATE, TAXDATE,"
            strFormat = strFormat & " 	DBO.PD_JOBNO_JOBBASE_FUN(JOBNO) JOBBASE  "
            strFormat = strFormat & " 	FROM PD_EXE_DTL "
            strFormat = strFormat & " 	WHERE ISNULL(PURCHASENO,'') <> ''  "
            strFormat = strFormat & " 	GROUP BY JOBNO, SEQ, OUTSCODE, ADJDAY, PURCHASENO, VATCODE, VOCHNO, REGDATE, TAXDATE "
            strFormat = strFormat & " ) A LEFT JOIN PD_VOCH_MST B   "
            strFormat = strFormat & " ON A.TAXYEARMON = B.TAXYEARMON AND A.TAXNO = B.TAXNO AND B.GBN = 'B' "
            strFormat = strFormat & " WHERE 1=1 "
            strFormat = strFormat & " {0} "
            strFormat = strFormat & " order by CUSTOMERCODE "

            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_OUT")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal vntData As Object, _
                               ByVal strRETURNLIST As String, _
                               ByVal strGBN As String) As Integer


        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strPOSTINGDATE As String
        Dim strDEMANDDAY As String
        Dim strDOCUMENTDATE As String
        Dim strDUEDATE As String
        Dim strFROMDATE As String
        Dim strTODATE As String
        Dim strTAXNOSEQ


        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                If IsArray(vntData) Then

                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_VOCH_MST = New cePD_VOCH_MST(mobjSCGLConfig)

                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop

                    If strGBN = "P" Then
                        For i = 1 To intRows
                            If GetElement(vntData, "POSTINGDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strPOSTINGDATE = Replace(GetElement(vntData, "POSTINGDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                            If GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR) <> "" Then strDEMANDDAY = Replace(GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR), "-", "")
                            If GetElement(vntData, "DOCUMENTDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strDOCUMENTDATE = Replace(GetElement(vntData, "DOCUMENTDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                            If GetElement(vntData, "FROMDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strFROMDATE = Replace(GetElement(vntData, "FROMDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                            If GetElement(vntData, "TODATE", intColCnt, i, OPTIONAL_STR) <> "" Then strTODATE = Replace(GetElement(vntData, "TODATE", intColCnt, i, OPTIONAL_STR), "-", "")
                            If GetElement(vntData, "DUEDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strDUEDATE = Replace(GetElement(vntData, "DUEDATE", intColCnt, i, OPTIONAL_STR), "-", "")

                            strTAXNOSEQ = ""
                            strTAXNOSEQ = GetElement(vntData, "TAXNOSEQ", intColCnt, i, OPTIONAL_STR)

                            intRtn = InsertRtn(vntData, intColCnt, i, strPOSTINGDATE, strDEMANDDAY, strFROMDATE, strTODATE, strDOCUMENTDATE, strDUEDATE, strTAXNOSEQ)
                        Next
                    ElseIf strGBN = "B" Then
                        For i = 1 To intRows
                            If GetElement(vntData, "CHK", intColCnt, i) = "1" Then
                                If GetElement(vntData, "POSTINGDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strPOSTINGDATE = Replace(GetElement(vntData, "POSTINGDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR) <> "" Then strDEMANDDAY = Replace(GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "DOCUMENTDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strDOCUMENTDATE = Replace(GetElement(vntData, "DOCUMENTDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "FROMDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strFROMDATE = Replace(GetElement(vntData, "FROMDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "TODATE", intColCnt, i, OPTIONAL_STR) <> "" Then strTODATE = Replace(GetElement(vntData, "TODATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "DUEDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strDUEDATE = Replace(GetElement(vntData, "DUEDATE", intColCnt, i, OPTIONAL_STR), "-", "")

                                intRtn = InsertRtn(vntData, intColCnt, i, strPOSTINGDATE, strDEMANDDAY, strFROMDATE, strTODATE, strDOCUMENTDATE, strDUEDATE, strGBN)
                            End If
                        Next
                    End If

                    intRtn = UpdateRtn(strInfoXML, strRETURNLIST, strGBN)

                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_VOCH_MST.Dispose()

            End Try
        End With
    End Function

    Public Function UpdateRtn(ByVal strInfoXML As String, _
                              ByVal strRETURNLIST As String, _
                              ByVal strGBN As String) As Integer


        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim firstArray
        Dim secondArray

        Dim strTAXYEARMON As String
        Dim intTAXNO As Integer
        Dim strDOC_STATUS As String
        Dim strDOC_MESSAGE As String
        Dim strVOCHNO As String
        Dim strIF_KEY As String

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                '.mobjSCGLSql.SQLConnect(.DBConnStr)
                '.mobjSCGLSql.SQLBeginTrans()

                firstArray = Split(strRETURNLIST, ":", -1, CompareMethod.Text)
                If strRETURNLIST <> "" Then

                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_VOCH_MST = New cePD_VOCH_MST(mobjSCGLConfig)

                    For i = 0 To firstArray.length - 1
                        secondArray = Split(firstArray(i), "|", -1, CompareMethod.Text)

                        strTAXYEARMON = secondArray(0)
                        intTAXNO = CInt(secondArray(1))
                        strDOC_STATUS = secondArray(2)
                        strDOC_MESSAGE = Trim(Replace(secondArray(3), "'", "''"))
                        strVOCHNO = secondArray(4)
                        strIF_KEY = secondArray(5)

                        If strDOC_STATUS = "S" Then
                            strDOC_STATUS = ""
                            strDOC_MESSAGE = ""
                        Else
                            strDOC_STATUS = "1"
                        End If

                        intRtn = UpdateRtn_VOCHNO(strGBN, strTAXYEARMON, intTAXNO, strDOC_STATUS, strDOC_MESSAGE, strVOCHNO, strIF_KEY)
                    Next

                End If
                '.mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                ' .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".UpdateRtn")
            Finally
                '.mobjSCGLSql.SQLDisconnect()
                mobjcePD_VOCH_MST.Dispose()

            End Try
        End With
    End Function


    Public Function VOCHDELL(ByVal strInfoXML As String, _
                             ByVal strRETURNLIST As String, _
                             ByVal strGBN As String) As Integer
        Dim intRtn As Integer

        Dim i, intColCnt, intRows As Integer
        Dim firstArray
        Dim secondArray
        Dim strTAXYEARMON As String
        Dim intTAXNO As Integer
        Dim strDOC_STATUS As String
        Dim strDOC_MESSAGE As String
        Dim strVOCHNO As String

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()


                firstArray = Split(strRETURNLIST, ":", -1, CompareMethod.Text)
                If strRETURNLIST <> "" Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_VOCH_MST = New cePD_VOCH_MST(mobjSCGLConfig)

                    For i = 0 To firstArray.length - 1
                        secondArray = Split(firstArray(i), "|", -1, CompareMethod.Text)

                        strTAXYEARMON = secondArray(0)
                        intTAXNO = CInt(secondArray(1))
                        strDOC_STATUS = secondArray(2)
                        strDOC_MESSAGE = Replace(secondArray(3), "'", "''")
                        strVOCHNO = secondArray(4)

                        If strDOC_STATUS = "S" Then
                            '전표내역 삭제
                            intRtn = mobjcePD_VOCH_MST.Delete_vochno(strTAXYEARMON, strVOCHNO, strGBN)

                            If strGBN = "P" Then
                                intRtn = mobjcePD_VOCH_MST.UpdateDelete_P(strTAXYEARMON, intTAXNO)
                            Else
                                intRtn = mobjcePD_VOCH_MST.UpdateDelete_B(strTAXYEARMON, intTAXNO)
                            End If
                        ElseIf strDOC_STATUS = "E" Then
                            '전표삭제시 SAP오류는 오류전표로 보내기위함.
                            strDOC_STATUS = "1"
                            intRtn = mobjcePD_VOCH_MST.UpdateRtn_DELETEERR(strGBN, strTAXYEARMON, intTAXNO, strDOC_STATUS, strDOC_MESSAGE, strVOCHNO)
                        End If
                    Next

                End If

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".VOCHDELL")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_VOCH_MST.Dispose()

            End Try
        End With
    End Function


    Public Function DeleteRtn(ByVal strInfoXML As String, _
                                  ByVal vntData As Object) As Integer
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblID As Double '자동 ID 를사용할 때만 사용
        Dim strSC_EMP_STATUS As String
        Dim vntData2 As Object
        Dim intSEQ As Double

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                If IsArray(vntData) Then

                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_VOCH_MST = New cePD_VOCH_MST(mobjSCGLConfig)

                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop
                    For i = 1 To intRows
                        If Trim(GetElement(vntData, "CHK", intColCnt, i)) = "" Then
                        Else
                            If GetElement(vntData, "CHK", intColCnt, i) = 1 And GetElement(vntData, "ERRCODE", intColCnt, i) = 1 Then
                                intRtn = DeleteRtn_ERR(vntData, intColCnt, i)
                            End If
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".DeleteRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_VOCH_MST.Dispose()
            End Try
        End With
    End Function


    Public Function DeleteRtn_GANG(ByVal strInfoXML As String, _
                                   ByVal strTAXYEARMON As String, _
                                   ByVal strTAXNO As String, _
                                   ByVal strVOCHNO As String, _
                                   ByVal strGBN As String) As Integer
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblID As Double '자동 ID 를사용할 때만 사용
        Dim strSC_EMP_STATUS As String
        Dim vntData2 As Object
        Dim intSEQ As Double

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()


                '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_VOCH_MST = New cePD_VOCH_MST(mobjSCGLConfig)

                intRtn = mobjcePD_VOCH_MST.Delete_vochno(strTAXYEARMON, strVOCHNO, strGBN)

                If strGBN = "P" Then
                    intRtn = mobjcePD_VOCH_MST.UpdateDelete_P(strTAXYEARMON, strTAXNO)
                Else
                    intRtn = mobjcePD_VOCH_MST.UpdateDelete_B(strTAXYEARMON, strTAXNO)
                End If

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".DeleteRtn_GANG")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_VOCH_MST.Dispose()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 비공개 Method"
    Private Function InsertRtn(ByVal vntData As Object, _
                               ByVal intColCnt As Integer, _
                               ByVal intRow As Integer, _
                               ByVal strPOSTINGDATE As String, _
                               ByVal strDEMANDDAY As String, _
                               ByVal strFROMDATE As String, _
                               ByVal strTODATE As String, _
                               ByVal strDOCUMENTDATE As String, _
                               ByVal strDUEDATE As String, _
                               ByVal strTAXNOSEQ As String) As Integer


        Dim intRtn As Integer
        intRtn = mobjcePD_VOCH_MST.InsertDo( _
                                       strPOSTINGDATE, _
                                       GetElement(vntData, "CUSTOMERCODE", intColCnt, intRow), _
                                       GetElement(vntData, "SUMM", intColCnt, intRow), _
                                       GetElement(vntData, "BA", intColCnt, intRow), _
                                       GetElement(vntData, "COSTCENTER", intColCnt, intRow), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VAT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "SEMU", intColCnt, intRow), _
                                       GetElement(vntData, "BP", intColCnt, intRow), _
                                       strDEMANDDAY, _
                                       strDUEDATE, _
                                       GetElement(vntData, "TAXYEARMON", intColCnt, intRow), _
                                       GetElement(vntData, "TAXNO", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "GBN", intColCnt, intRow), _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       "", _
                                       strDOCUMENTDATE, _
                                       GetElement(vntData, "PAYCODE", intColCnt, intRow), _
                                       GetElement(vntData, "BANKTYPE", intColCnt, intRow), _
                                       GetElement(vntData, "BMORDER", intColCnt, intRow), _
                                       GetElement(vntData, "PREPAYMENT", intColCnt, intRow), _
                                       strFROMDATE, _
                                       strTODATE, _
                                       GetElement(vntData, "SUMMTEXT", intColCnt, intRow), _
                                       GetElement(vntData, "ACCOUNT", intColCnt, intRow), _
                                       GetElement(vntData, "DEBTOR", intColCnt, intRow), _
                                       strTAXNOSEQ)
        Return intRtn
    End Function

    Private Function DeleteRtn_ERR(ByVal vntData As Object, _
                                   ByVal intColCnt As Integer, _
                                   ByVal intRow As Integer) As Integer

        Dim intRtn As Integer

        intRtn = mobjcePD_VOCH_MST.Delete_ERR(GetElement(vntData, "TAXYEARMON", intColCnt, intRow), _
                                              GetElement(vntData, "TAXNO", intColCnt, intRow), _
                                              GetElement(vntData, "GBN", intColCnt, intRow))

        Return intRtn
    End Function



    Private Function UpdateRtn_VOCHNO(ByVal strGBN As String, _
                                      ByVal strTAXYEARMON As String, _
                                      ByVal intTAXNO As Integer, _
                                      ByVal strDOC_STATUS As String, _
                                      ByVal strDOC_MESSAGE As String, _
                                      ByVal strVOCHNO As String, _
                                      ByVal strIF_KEY As String) As Integer

        Dim intRtn As Integer

        intRtn = mobjcePD_VOCH_MST.UpdateRtn_VOCHNO( _
                                       strGBN, _
                                       strTAXYEARMON, _
                                       intTAXNO, _
                                       strDOC_STATUS, _
                                       strDOC_MESSAGE, _
                                       strVOCHNO, _
                                       strIF_KEY)

        Return intRtn
    End Function


#End Region
End Class
