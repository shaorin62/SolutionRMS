'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 컨트롤 클래스 메이커 - 한화 S&C
'시스템구분    : 솔루션명 /시스템명/Server Control Class
'실행   환경    : COM+ Service Server Package
'프로그램명    : ccMDCMPRINTREG.vb
'기         능    : - 기능을 명시 합니다.
'특이  사항     : - 특이사항에 대해 표현
'                     -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2004-03-30 오전 10:32:13 By MakeSFARV.2.0.0
'                  2) 2004-03-30 오전 10:32:13 By 작성자명을 씁니다.
'****************************************************************************************

Imports System.Xml                        ' XML처리
Imports SCGLControl                       ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr            '오류처리 클래스
Imports SCGLUtil.cbSCGLXml           'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil            '기타유틸리티 클래스
Imports ePDCO '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트

Public Class ccPDCOTRUTAX
    Inherits ccControl

#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccPDCOTRUTAX"                  '자신의 클래스명
    Private mobjcePD_TAX_HDR As ePDCO.cePD_TAX_HDR
    Private mobjcePD_TAX_DTL As ePDCO.cePD_TAX_DTL
    Private mobjcePD_TRANS_HDR As ePDCO.cePD_TRANS_HDR
    Private mobjcePD_TRANS_DTL As ePDCO.cePD_TRANS_DTL
    Private mobjcePD_DIVAMT As ePDCO.cePD_DIVAMT
    Private mobjcePD_TAX_TEMP As ePDCO.cePD_TAX_TEMP
    Private mobjcePD_TAX_MST_TEMP As ePDCO.cePD_TAX_MST_TEMP
    'Private Const .DBConnStr = "Provider=SQLOLEDB;Data Source=10.110.10.86;Initial Catalog=MCDEV;DSN=MCDEV;UID=devadmin;Pwd=password"

#End Region

#Region "GROUP BLOCK : Property 선언"
#End Region

#Region "GROUP BLOCK : Event 선언"
    Public Function Get_COMBOVOCH_VALUE(ByVal strInfoXML As String, _
                                        ByRef intRowCnt As Integer, _
                                        ByRef intColCnt As Integer) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = 'MD_VOCH_TYPE' " & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_COMBOVOCH_VALUE")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '콤보타입가져오기
    Public Function GetDataType(ByVal strInfoXML As String, _
                              ByRef intRowCnt As Integer, _
                              ByRef intColCnt As Integer, _
                              ByVal strCombo As String) As Object



        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object
        Dim strWhere
        'Combo 구분자 [strCombo] --------------------------------
        'JOBGUBN : 좝구분, JOBBASE : 청구기준, CREGUBN : 제작구분, CREPART : 제작종류, 
        Select Case strCombo
            Case ("JOBGUBN")
                strWhere = "PD_JOBKIND"
            Case ("JOBBASE")
                strWhere = "PD_JOBBASE"
            Case ("CREGUBN")
                strWhere = "PD_CREGUBN"
            Case ("CREPART")
                strWhere = "CREPART"
            Case ("ENDFLAG")
                strWhere = "PD_ENDFLAG"
            Case ("PONOGUBN")
                strWhere = "PD_PONOGROUP"
        End Select


        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE,CODE_NAME"

        'SQL문 생성
        If strWhere = "CREPART" Then
            strFormat = "SELECT {0} " & _
                   "FROM SC_CODE " & _
                   "WHERE ATTR02 = 'K' AND LEN(ATTR01) > 3 AND USE_YN = 'Y' ORDER BY CLASS_CODE,SORT_SEQ"

        Else
            strFormat = "SELECT {0} " & _
                               "FROM SC_CODE " & _
                               "WHERE CLASS_CODE = '" & strWhere & "' AND USE_YN = 'Y' " & _
                               "ORDER BY SORT_SEQ "
        End If


        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


#End Region

#Region "GROUP BLOCK : 외부에 공개 Method"
    '미완료~
    Public Function Get_TAXBUILD(ByVal strInfoXML As String, _
                                 ByRef intRowCnt As Integer, _
                                 ByRef intColCnt As Integer, _
                                 ByVal strFROM As String, _
                                 ByVal strTO As String, _
                                 ByVal strCLIENTCODE As String, _
                                 ByVal strTIMCODE As String, _
                                 ByVal strGUBUN As String, _
                                 ByVal strJOBGUBN As String) As Object

        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1, Con2, Con3, Con4 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = "" : Con2 = "" : Con3 = "" : Con4 = ""

            If strFROM <> "" And strTO <> "" Then
                Con1 = String.Format(" AND (A.DEMANDDAY BETWEEN '{0}' AND  '{1}')", strFROM, strTO)
            End If
            If strFROM <> "" And strTO = "" Then
                Con1 = String.Format(" AND (A.DEMANDDAY >= '{0}')", strFROM)
            End If
            If strFROM = "" And strTO <> "" Then
                Con1 = String.Format(" AND (A.DEMANDDAY <= '{0}')", strTO)
            End If

            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (A.CLIENTCODE ='{0}')", strCLIENTCODE)
            If strTIMCODE <> "" Then Con3 = String.Format(" AND (A.TIMCODE ='{0}')", strTIMCODE)
            If strJOBGUBN <> "" Then Con4 = String.Format(" AND (DBO.PD_JOBGUBN_FUN(A.JOBNO) = '{0}')", strJOBGUBN)

            strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)

            strFormat = " SELECT "
            strFormat = strFormat & " 0 CHK,'' TAXMANAGE, "
            strFormat = strFormat & " SUBSTRING(A.DEMANDDAY,1,6) TAXYEARMON, "
            strFormat = strFormat & " '' TAXNO, "
            strFormat = strFormat & " A.TRANSYEARMON, "
            strFormat = strFormat & " A.TRANSNO, "
            strFormat = strFormat & " A.SEQ, "
            strFormat = strFormat & " A.JOBNOSEQ, "
            strFormat = strFormat & " A.JOBNO,  "
            strFormat = strFormat & " A.JOBNAME,  "
            strFormat = strFormat & " A.JOBNAME SUMM,"
            strFormat = strFormat & " A.DEMANDDAY, "
            strFormat = strFormat & " A.ADJAMT AMT, "
            strFormat = strFormat & " CASE A.TAXCODE WHEN 'TA01' THEN A.VAT ELSE 0 END AS VAT, "
            strFormat = strFormat & " A.ADJAMT+(CASE A.TAXCODE WHEN 'TA01' THEN A.VAT ELSE 0 END) SUMAMT, "
            strFormat = strFormat & " A.CLIENTCODE, DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) CLIENTNAME, "
            strFormat = strFormat & " A.TIMCODE, DBO.SC_GET_CUSTNAME_FUN(A.TIMCODE) TIMNAME,   "
            strFormat = strFormat & " A.SUBSEQ, DBO.SC_GET_SUBSEQNAME_FUN(A.SUBSEQ) SUBSEQNAME, "
            strFormat = strFormat & " A.DEPT_CD AS DEPTCD, DBO.SC_DEPT_NAME_FUN(A.DEPT_CD) DEPTNAME, "
            strFormat = strFormat & "  CAST(DATEPART(YEAR,GETDATE()) AS VARCHAR(4))  + RIGHT('00' + CAST(DATEPART(MONTH,GETDATE()) AS VARCHAR(2)), 2)+RIGHT('00' + CAST(DATEPART(DAY,GETDATE()) AS VARCHAR(2)), 2) PRINTDAY,"
            'strFormat = strFormat & " A.PRINTDAY, "
            strFormat = strFormat & " '' ACCODE, "
            strFormat = strFormat & " DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE) CLIENTBUSINO, "
            strFormat = strFormat & " DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE) REALBUSINO, "
            strFormat = strFormat & " DBO.SC_GET_CUSTOWNER_FUN(A.CLIENTCODE) CLIENTOWNER,  "
            strFormat = strFormat & " DBO.SC_GET_ADDRESS1_FUN(A.CLIENTCODE) CLIENTADDR1,  "
            strFormat = strFormat & " DBO.SC_GET_ADDRESS2_FUN(A.CLIENTCODE) CLIENTADDR2, "
            strFormat = strFormat & " '' VOCHNO, "
            'strFormat = strFormat & " DENSE_RANK() OVER (ORDER BY DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),A.TAXCODE, DBO.PD_JOBGUBN_FUN(A.JOBNO)) RANKTRANS, "
            strFormat = strFormat & " DENSE_RANK() OVER (ORDER BY DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),A.TAXCODE, DBO.PD_GET_PROMOTION_FUN(A.JOBNO)) RANKTRANS, "
            strFormat = strFormat & " B.INCJOBNO INCJOBNO, "
            strFormat = strFormat & " DBO.PD_JOBGUBN_FUN(A.JOBNO) JOBGUBN,A.TAXCODE,DBO.SC_GET_CODENAME_FUN(A.TAXCODE) TAXNAME,DBO.PD_JOBNO_CREPARTCODE_FUN(A.JOBNO) JOBPART,DBO.PD_JOBNO_CREPARTNAME_FUN(A.JOBNO) JOBPARTNAME, CASE ISNULL(A.TAXCODE,'') WHEN 'TA04' THEN '사외거래' ELSE '' END ATTR03 "
            strFormat = strFormat & " FROM PD_TRANS_DTL A,PD_DIVAMT B "
            strFormat = strFormat & " WHERE A.TRANSYEARMON = B.TRANSYEARMON "
            strFormat = strFormat & " AND A.TRANSNO = B.TRANSNO AND A.SEQ = B.TRANSNOSEQ"
            strFormat = strFormat & " AND A.TAXNO IS NULL " 'AND ISNULL(A.CONFIRMFLAG, 0) = 1 : 승인제외
            strFormat = strFormat & " AND ISNULL(A.AMT,0) <> 0"
            strFormat = strFormat & " {0} "
            strFormat = strFormat & " ORDER BY REALBUSINO, DEMANDDAY, AMT, TRANSNO"

            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetJOBSEQList")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '완료~
    Public Function Get_TAX(ByVal strInfoXML As String, _
                            ByRef intRowCnt As Integer, _
                            ByRef intColCnt As Integer, _
                            ByVal strFROM As String, _
                            ByVal strTO As String, _
                            ByVal strCLIENTCODE As String, _
                            ByVal strJOBGUBN As String) As Object

        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1 As String
        Dim Con2 As String
        Dim Con3 As String
        Dim Con4 As String
        Dim Con5 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = "" : Con2 = "" : Con3 = "" : Con4 = "" : Con5 = ""

            'If strFROM <> "" And strTO <> "" Then
            'Con1 = String.Format(" AND (A.TAXYEARMON BETWEEN '{0}' AND  '{1}')", strTRANSFROM, strTRANSTO)
            'End If
            'If strFROM <> "" And strTO = "" Then
            'Con1 = String.Format(" AND (A.TAXYEARMON >= '{0}')", strTRANSFROM)
            'End If
            'If strFROM = "" And strTO <> "" Then
            '    Con1 = String.Format(" AND (A.TAXYEARMON <= '{0}')", strTRANSTO)
            'End If


            If strFROM <> "" And strTO <> "" Then
                Con1 = String.Format(" AND (A.DEMANDDAY BETWEEN '{0}' AND  '{1}')", strFROM, strTO)
                Con3 = String.Format(" AND (DEMANDDAY BETWEEN '{0}' AND  '{1}')", strFROM, strTO)
            End If
            If strFROM <> "" And strTO = "" Then
                Con1 = String.Format(" AND (A.DEMANDDAY >= '{0}')", strFROM)
                Con3 = String.Format(" AND (DEMANDDAY >= '{0}')", strFROM)
            End If
            If strFROM = "" And strTO <> "" Then
                Con1 = String.Format(" AND (A.DEMANDDAY <= '{0}')", strTO)
                Con3 = String.Format(" AND (DEMANDDAY <= '{0}')", strTO)
            End If

            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (A.CLIENTCODE = '{0}')", strCLIENTCODE)


            If strJOBGUBN <> "" Then Con4 = String.Format(" AND (B.JOBGUBN = '{0}')", strJOBGUBN)

            strWhere = BuildFields(" ", Con1, Con2, Con4)

            'strFormat = " SELECT  "
            'strFormat = strFormat & "0 CHK,  "
            'strFormat = strFormat & "A.TAXYEARMON + '-' + A.TAXFLAG + '-' + dbo.LPAD(A.TAXNO,4,'0') TAXMANAGE,  "
            'strFormat = strFormat & "A.DEMANDDAY,  "
            'strFormat = strFormat & "CASE ISNULL(A.CLIENTNAME,'') WHEN '' THEN DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE)   ELSE A.CLIENTNAME END CLIENTNAME,  "
            'strFormat = strFormat & "CASE ISNULL(A.CLIENTBUSINO,'') WHEN '' THEN DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE) ELSE  A.CLIENTBUSINO END CLIENTBUSINO,  "
            'strFormat = strFormat & "'' REALBUSINO,  "
            'strFormat = strFormat & "DBO.SC_GET_CUSTNAME_FUN(A.TIMCODE) TIMNAME,  "
            'strFormat = strFormat & "DBO.SC_GET_SUBSEQNAME_FUN(A.SUBSEQ) SUBSEQNAME,  "
            'strFormat = strFormat & "ISNULL(A.AMT,0) AMT, ISNULL(A.VAT,0) VAT,   "
            'strFormat = strFormat & "ISNULL(A.AMT,0)+ISNULL(A.VAT,0) SUMAMT,   "
            'strFormat = strFormat & "A.SUMM, A.PRINTDAY,   "
            'strFormat = strFormat & "DBO.PD_TAX_DEPTNAME_FUN(A.TAXYEARMON,A.TAXNO) DEPT_NAME,   "
            'strFormat = strFormat & "A.CLIENTOWNER, A.CLIENTADDR1, A.CLIENTADDR2,   "
            'strFormat = strFormat & "A.VOCHNO,   "
            'strFormat = strFormat & "A.TAXYEARMON, A.TAXNO,   "
            'strFormat = strFormat & " B.JOBGUBN JOBGUBN,A.TAXCODE,DBO.SC_GET_CODENAME_FUN(A.TAXCODE) TAXNAME,B.JOBPARTNAME JOBPARTNAME "
            'strFormat = strFormat & " FROM PD_TAX_HDR A, (SELECT DBO.PD_JOBNO_CREPARTNAME_FUN(JOBNO) JOBPARTNAME,DBO.PD_JOBGUBN_FUN(JOBNO) JOBGUBN,TAXNO,TAXYEARMON FROM PD_TAX_DTL "

            strFormat = "SELECT  "
            strFormat = strFormat & "0 CHK,  "
            strFormat = strFormat & "A.TAXYEARMON + '-' + A.TAXFLAG + '-' + dbo.LPAD(A.TAXNO,4,'0') TAXMANAGE,  "
            strFormat = strFormat & "A.DEMANDDAY,  "
            strFormat = strFormat & "CASE ISNULL(A.CLIENTNAME,'') WHEN '' THEN DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE)   ELSE A.CLIENTNAME END CLIENTNAME,  "
            strFormat = strFormat & "CASE ISNULL(A.CLIENTBUSINO,'') WHEN '' THEN DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE) ELSE  A.CLIENTBUSINO END CLIENTBUSINO,  "
            strFormat = strFormat & "'' REALBUSINO,  "
            strFormat = strFormat & "DBO.SC_GET_CUSTNAME_FUN(A.TIMCODE) TIMNAME,  "
            strFormat = strFormat & "DBO.SC_GET_SUBSEQNAME_FUN(A.SUBSEQ) SUBSEQNAME,  "
            strFormat = strFormat & "ISNULL(A.AMT,0) AMT, ISNULL(A.VAT,0) VAT,   "
            strFormat = strFormat & "ISNULL(A.AMT,0)+ISNULL(A.VAT,0) SUMAMT,   "
            strFormat = strFormat & "A.SUMM, A.PRINTDAY,   "
            strFormat = strFormat & "DBO.PD_TAX_DEPTNAME_FUN(A.TAXYEARMON,A.TAXNO) DEPT_NAME,   "
            strFormat = strFormat & "A.CLIENTOWNER, A.CLIENTADDR1, A.CLIENTADDR2,   "
            strFormat = strFormat & "A.VOCHNO,   "
            strFormat = strFormat & "A.TAXYEARMON, A.TAXNO,   "
            strFormat = strFormat & " B.JOBGUBN JOBGUBN,A.TAXCODE,DBO.SC_GET_CODENAME_FUN(A.TAXCODE) TAXNAME,B.JOBPARTNAME JOBPARTNAME, A.MERGEFLAG "
            strFormat = strFormat & " FROM PD_TAX_HDR A, "
            strFormat = strFormat & "( "
            strFormat = strFormat & "	select DBO.SC_GET_CODENAME_FUN(DBO.PD_JOBGUBN_FUN(JOBNO)) JOBPARTNAME,DBO.PD_JOBGUBN_FUN(JOBNO) JOBGUBN,TAXNO,TAXYEARMON "
            strFormat = strFormat & "	from ("
            strFormat = strFormat & "		select aa.jobno , aa.taxyearmon, aa.taxno"
            strFormat = strFormat & "		from pd_tax_dtl aa inner join "
            strFormat = strFormat & "		("
            strFormat = strFormat & "			select taxyearmon, taxno, max(taxseq) taxseq, max(amt) amt"
            strFormat = strFormat & "			from pd_tax_dtl "
            strFormat = strFormat & "			where 1=1 " & Con3
            strFormat = strFormat & "			group by taxyearmon, taxno"
            strFormat = strFormat & "		) bb on aa.taxyearmon = bb.taxyearmon and aa.taxno = bb.taxno and aa.taxseq = bb.taxseq"
            strFormat = strFormat & "	)dtl"
            strFormat = strFormat & ") B  "
            strFormat = strFormat & " WHERE 1=1 AND A.TAXYEARMON = B.TAXYEARMON AND A.TAXNO = B.TAXNO "
            strFormat = strFormat & " and isnull(A.attr10,0) <> 999999"
            strFormat = strFormat & " {0} "


            'If strJOBGUBN <> "" Then
            '    strFormat = strFormat & "WHERE DBO.PD_JOBGUBN_FUN(JOBNO) = '" & strJOBGUBN & "'"
            'End If
            'strFormat = strFormat & " GROUP BY TAXNO,TAXYEARMON,DBO.PD_JOBNO_CREPARTNAME_FUN(JOBNO),DBO.PD_JOBGUBN_FUN(JOBNO)) B  "
            'strFormat = strFormat & "WHERE 1=1 AND A.TAXYEARMON = B.TAXYEARMON AND A.TAXNO = B.TAXNO {0}"

            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_TAX")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With

    End Function

    '전체~
    Public Function Get_TAXALL(ByVal strInfoXML As String, _
                               ByRef intRowCnt As Integer, _
                               ByRef intColCnt As Integer, _
                               ByVal strFROM As String, _
                               ByVal strTO As String, _
                               ByVal strCLIENTCODE As String, _
                               ByVal strTIMCODE As String, _
                               ByVal strGUBUN As String, _
                               ByVal strJOBGUBN As String) As Object

        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1, Con2, Con3, Con4 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = "" : Con2 = "" : Con3 = "" : Con4 = ""


            If strFROM <> "" And strTO <> "" Then
                Con1 = String.Format(" AND (TRANSYEARMON BETWEEN '{0}' AND  '{1}')", strFROM, strTO)
            End If
            If strFROM <> "" And strTO = "" Then
                Con1 = String.Format(" AND (TRANSYEARMON >= '{0}')", strFROM)
            End If
            If strFROM = "" And strTO <> "" Then
                Con1 = String.Format(" AND (TRANSYEARMON <= '{0}')", strTO)
            End If

            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (CLIENTCODE ='{0}')", strCLIENTCODE)
            If strTIMCODE <> "" Then Con3 = String.Format(" AND (TIMCODE ='{0}')", strTIMCODE)
            If strJOBGUBN <> "" Then Con4 = String.Format(" AND (DBO.PD_JOBGUBN_FUN(JOBNO) = '{0}')", strJOBGUBN)

            strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)

            strFormat = strFormat & " SELECT "
            strFormat = strFormat & " Case ISNULL(CAST(TAXNO AS NVARCHAR(10)),'NULL')  WHEN 'NULL' THEN '미완료' ELSE '완료' END AS CHK, "
            strFormat = strFormat & " Case ISNULL(TAXYEARMON,'') WHEN '' THEN TRANSYEARMON +'-'+CAST(TRANSNO AS NVARCHAR(10))  ELSE  TAXYEARMON + '-MT-' + dbo.LPAD(TAXNO,4,'0') END TAXMANAGE, "
            strFormat = strFormat & " JOBNOSEQ, "
            strFormat = strFormat & " JOBNO,  "
            strFormat = strFormat & " DEMANDDAY, "
            strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
            strFormat = strFormat & " DBO.SC_GET_BUSINO_FUN(CLIENTCODE) CLIENTBISNO, "
            strFormat = strFormat & " DBO.SC_GET_CUSTNAME_FUN(TIMCODE) TIMNAME,  "
            strFormat = strFormat & " DBO.SC_GET_SUBSEQNAME_FUN(SUBSEQ) SUBSEQNAME, "
            strFormat = strFormat & " DBO.SC_DEPT_NAME_FUN(DEPT_CD) DEPTNAME, "
            strFormat = strFormat & " ADJAMT AMT, "
            strFormat = strFormat & " CASE TAXCODE WHEN 'TA01' THEN DBO.TRUNC(ADJAMT * 0.1,0) ELSE 0 END VAT,  "
            strFormat = strFormat & " ADJAMT+(CASE TAXCODE WHEN 'TA01' THEN DBO.TRUNC(ADJAMT * 0.1,0) ELSE 0 END) SUMAMT,  "
            strFormat = strFormat & " DBO.PD_JOBNAME_FUN(JOBNO) SUMM, "
            strFormat = strFormat & " CAST(DATEPART(YEAR,GETDATE()) AS VARCHAR(4))  + RIGHT('00' + CAST(DATEPART(MONTH,GETDATE()) AS VARCHAR(2)), 2)+RIGHT('00' + CAST(DATEPART(DAY,GETDATE()) AS VARCHAR(2)), 2) PRINTDAY, "
            strFormat = strFormat & " DBO.SC_GET_BUSINO_FUN(CLIENTCODE) BUSINO, "
            strFormat = strFormat & " DBO.SC_GET_CUSTOWNER_FUN(CLIENTCODE) CLIENTOWNER, "
            strFormat = strFormat & " DBO.SC_GET_ADDRESS1_FUN(CLIENTCODE) CLIENTADDR1, "
            strFormat = strFormat & " DBO.SC_GET_ADDRESS2_FUN(CLIENTCODE) CLIENTADDR2, "
            strFormat = strFormat & " '' VOCHNO, "
            strFormat = strFormat & " SUBSTRING(DEMANDDAY,1,6) TAXYEARMON, "
            strFormat = strFormat & " NULL TAXNO, "
            strFormat = strFormat & " TRANSYEARMON, TRANSNO, SEQ, "
            strFormat = strFormat & " DBO.SC_GET_ACCUSTCODE_FUN(CLIENTCODE) CLIENTACCODE, "
            strFormat = strFormat & " DEPT_CD, "
            strFormat = strFormat & " SUBSEQ, "
            strFormat = strFormat & " DENSE_RANK() OVER (ORDER BY dbo.SC_GET_BUSINO_FUN(CLIENTCODE), TRANSYEARMON, TRANSNO ) RANKTRANS ,TAXCODE,DBO.SC_GET_CODENAME_FUN(TAXCODE) TAXNAME, CASE ISNULL(TAXCODE,'') WHEN 'TA04' THEN '사외거래' ELSE '' END ATTR03"
            strFormat = strFormat & " FROM PD_TRANS_DTL "
            strFormat = strFormat & " WHERE(1 = 1) "
            'strFormat = strFormat & " AND ISNULL(CONFIRMFLAG, 0) = 1 " '승인제외
            strFormat = strFormat & " AND ISNULL(AMT,0) <> 0 "
            strFormat = strFormat & " {0} "
            strFormat = strFormat & " ORDER BY TRANSNO, SEQ,  AMT, DEMANDDAY "

            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_PRINT_TAXALL")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    '세금계산서 상세팝업 HEADER 조회
    Public Function SelectRtn_HDR(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strTAXYEARMON As String, _
                                  ByVal strTAXNO As String) As String

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1, Con2
        Dim intCnt
        Dim intRtn, intRtn2

        SetConfig(strInfoXML)

        Con1 = ""
        Con2 = ""

        If strTAXYEARMON <> "" Then Con1 = String.Format(" AND (TAXYEARMON = '{0}')", strTAXYEARMON)
        If strTAXNO <> "" Then Con2 = String.Format(" AND (TAXNO = '{0}')", strTAXNO)

        strCols = "  TAXYEARMON, "
        strCols = strCols & "  TAXNO, "
        strCols = strCols & "  CLIENTCODE, "
        strCols = strCols & "  DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strCols = strCols & "  DBO.SC_GET_CUSTNAME_FUN(TIMCODE) TIMNAME,"
        strCols = strCols & "  DBO.SC_GET_BUSINO_FUN(CLIENTCODE) BUSINO,"
        strCols = strCols & "  DEMANDDAY,"
        strCols = strCols & "  PRINTDAY,"
        strCols = strCols & "  AMT,"
        strCols = strCols & "  VAT,"
        strCols = strCols & "  SUMAMT,"
        strCols = strCols & "  SUMM,VOCHNO "

        strWhere = BuildFields(" ", Con1, Con2)

        strFormat = "SELECT {0} FROM PD_TAX_HDR "
        strFormat = strFormat & " WHERE 1=1 {1}"

        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strCols, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)
                Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDR")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '세금계산서 상세팝업 DETAIL 조회
    Public Function SelectRtn_DTL(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strTAXYEARMON As String, _
                                  ByVal strTAXNO As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)

        SetConfig(strInfoXML)

        strSQL = strSQL & " SELECT "
        strSQL = strSQL & " TAXYEARMON, TAXNO,  "
        strSQL = strSQL & " TAXSEQ,"
        strSQL = strSQL & " JOBNO,"
        strSQL = strSQL & " JOBNAME,"
        strSQL = strSQL & " DBO.SC_DEPT_NAME_FUN(DEPT_CD) DEPTNAME,"
        strSQL = strSQL & " AMT,"
        strSQL = strSQL & " VAT, "
        strSQL = strSQL & " TRANSYEARMON+'-'+CAST(TRANSNO AS VARCHAR(20))+'-'+CAST(SEQ AS VARCHAR(20)) TRANSNO, "
        strSQL = strSQL & " ''VOCHNO"
        strSQL = strSQL & " FROM PD_TAX_DTL"
        strSQL = strSQL & " WHERE 1=1"
        strSQL = strSQL & " AND TAXYEARMON = '" & strTAXYEARMON & "'"
        strSQL = strSQL & " AND TAXNO = '" & strTAXNO & "'"

        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_DTL")
            Finally
                ' DB 접속 종료

                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function ProcessRtn_Group(ByVal strInfoXML As String, _
                                     ByVal vntData As Object, _
                                     ByVal intTAXNO As Integer, _
                                     ByVal intColFlag As Integer) As Integer

        Dim intRtn, intRtn1, intRtn2, intRtn3 As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim intTAXNOSEQ As Integer
        Dim strDEMANDDAY As String
        Dim strPRINTDAY As String
        Dim strTAXYEARMON As String
        Dim strSUMM As String
        Dim strTRANSYEARMON As String
        Dim intTRANSNO As Integer
        Dim intSEQ As Integer
        Dim strTAXNO As String
        Dim strTRANSNO As String
        Dim intCnt As Integer
        Dim intCnt2 As Integer
        Dim strJOBNO As String
        Dim intJOBNOSEQ As Integer

        '합계 변수
        Dim lngAMT As Double
        Dim lngSUMAMT As Double
        Dim lngVAT As Double
        Dim lngSUMVAT As Double
        Dim lngSUMAMTVAT As Double
        Dim lngVALUE As Double
        Dim lngSUMVALUE As Double
        Dim strMEDCODE
        Dim strMEDCODE2
        Dim strCNT
        '헤더 변수
        Dim strCLIENTCODE, strCLIENTACCCODE, strDEPT_CD As String
        '디테일변수

        Dim strPROGNAME As String
        Dim strPROGRAM As String

        Dim lngCnt As Integer
        Dim lngAMTED As Double
        Dim lngAMTST As Double
        Dim strSUMMMAX As String

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                Dim xmlRoot As XmlElement

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                mobjcePD_TAX_HDR = New cePD_TAX_HDR(mobjSCGLConfig)
                mobjcePD_TAX_DTL = New cePD_TAX_DTL(mobjSCGLConfig)
                mobjcePD_TRANS_DTL = New ePDCO.cePD_TRANS_DTL(mobjSCGLConfig)
                mobjcePD_DIVAMT = New ePDCO.cePD_DIVAMT(mobjSCGLConfig)

                intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                For intCnt = 1 To intColFlag
                    intCnt2 = 0
                    strMEDCODE2 = ""
                    If IsArray(vntData) Then
                        intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                        '''해당하는Row 만큼 Loop
                        lngAMT = 0
                        lngSUMAMT = 0
                        lngVAT = 0
                        lngSUMVAT = 0
                        lngVALUE = 0
                        lngSUMVALUE = 0
                        strCNT = 0
                        '쉬트 내 헤더값 검출


                        '대표건명 만들기 시작
                        lngCnt = 0
                        For i = 1 To intRows
                            If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 And GetElement(vntData, "RANKTRANS", intColCnt, i, OPTIONAL_STR) = intCnt Then
                                lngCnt = lngCnt + 1
                            End If
                        Next
                        lngAMTED = 0
                        For i = 1 To intRows
                            If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 And GetElement(vntData, "RANKTRANS", intColCnt, i, OPTIONAL_STR) = intCnt Then
                                lngAMTST = GetElement(vntData, "AMT", intColCnt, i, OPTIONAL_STR)
                                If lngAMTED < lngAMTST Then
                                    lngAMTED = lngAMTST
                                End If
                            End If
                        Next
                        For i = 1 To intRows
                            If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 And GetElement(vntData, "RANKTRANS", intColCnt, i, OPTIONAL_STR) = intCnt Then
                                If lngAMTED = GetElement(vntData, "AMT", intColCnt, i, OPTIONAL_STR) Then
                                    strSUMMMAX = GetElement(vntData, "SUMM", intColCnt, i, OPTIONAL_STR) & " 외"
                                End If
                            End If
                        Next



                        For i = 1 To intRows
                            '청구합계
                            If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 And GetElement(vntData, "RANKTRANS", intColCnt, i, OPTIONAL_STR) = intCnt Then
                                lngAMT = GetElement(vntData, "AMT", intColCnt, i, OPTIONAL_STR)
                                lngVAT = GetElement(vntData, "VAT", intColCnt, i, OPTIONAL_STR)

                                lngSUMAMT = lngSUMAMT + lngAMT
                                lngSUMVAT = lngSUMVAT + lngVAT


                                '계산서년월
                                strTAXYEARMON = GetElement(vntData, "TAXYEARMON", intColCnt, i, OPTIONAL_STR)
                                '계산서번호
                                intTAXNO = SelectRtn_TRUTAXNO(strTAXYEARMON)
                                '헤더정보

                                strDEMANDDAY = GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)
                                strPRINTDAY = GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)

                                If lngCnt = 1 Then
                                    strSUMM = GetElement(vntData, "SUMM", intColCnt, i, OPTIONAL_STR)
                                Else
                                    strSUMM = strSUMMMAX
                                End If

                            End If
                        Next

                        'lngSUMVAT = Int(lngSUMAMT / 10)
                        lngSUMAMTVAT = lngSUMAMT + lngSUMVAT

                        '검출된 헤더값 실제저장
                        For i = 1 To intRows
                            If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 And GetElement(vntData, "RANKTRANS", intColCnt, i, OPTIONAL_STR) = intCnt Then
                                If intCnt2 = intCnt Then
                                Else
                                    '헤더저장
                                    intRtn = InsertRtn_TRUTAX_HDR(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, lngSUMAMT, lngSUMVAT, lngSUMAMTVAT, strDEMANDDAY, strPRINTDAY, strSUMM)
                                End If
                                '무한업데이트.
                                intCnt2 = intCnt
                                '디테일저장
                                If IsArray(vntData) Then

                                    '거래명세서 번호는 위에서 참조
                                    strJOBNO = GetElement(vntData, "JOBNO", intColCnt, i, OPTIONAL_STR)
                                    intJOBNOSEQ = GetElement(vntData, "JOBNOSEQ", intColCnt, i, OPTIONAL_STR)

                                    strTRANSYEARMON = GetElement(vntData, "TRANSYEARMON", intColCnt, i, OPTIONAL_STR)
                                    intTRANSNO = GetElement(vntData, "TRANSNO", intColCnt, i, OPTIONAL_STR)
                                    intSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_STR)
                                    strTRANSNO = strTRANSYEARMON & "-" & intTRANSNO & "-" & intSEQ

                                    strTAXNO = strTAXYEARMON & "-" & intTAXNO
                                    intTAXNOSEQ = SelectRtn_TRUTAXNOSEQ(strTAXYEARMON, intTAXNO)

                                    strDEMANDDAY = GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)
                                    strPRINTDAY = GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)
                                    strSUMM = GetElement(vntData, "SUMM", intColCnt, i, OPTIONAL_STR)

                                    '디테일저장
                                    intRtn1 = InsertRtn_TRUTAX_DTL(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, intTAXNOSEQ, strDEMANDDAY, strPRINTDAY)

                                    'DIVAMT의 세금계산서번호 저장
                                    intRtn2 = mobjcePD_DIVAMT.Update_TruTax(strJOBNO, intJOBNOSEQ, strTAXYEARMON, intTAXNO, intTAXNOSEQ)

                                    '거래명세서 디테일의 세금계산서번호 저장
                                    intRtn3 = mobjcePD_TRANS_DTL.TaxUpdateDo(strTRANSYEARMON, intTRANSNO, intSEQ, strTAXYEARMON, intTAXNO, intTAXNOSEQ)
                                End If

                            End If
                        Next
                    End If
                Next


                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_Group")
            Finally
                'Resource해제
                mobjcePD_TAX_HDR.Dispose()
                mobjcePD_TAX_DTL.Dispose()
                mobjcePD_TRANS_DTL.Dispose()
                mobjcePD_DIVAMT.Dispose()
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function ProcessRtn_Div(ByVal strInfoXML As String, _
                                   ByVal vntData As Object, _
                                   ByVal intTAXNO As Integer) As Integer

        Dim intRtn, intRtn1, intRtn2, intRtn3 As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim intTAXNOSEQ As Integer
        Dim strDEMANDDAY As String
        Dim strPRINTDAY As String
        Dim strJOBNO As String
        Dim intJOBNOSEQ As Integer
        Dim strTAXYEARMON As String
        Dim strSUMM As String
        Dim strTRANSYEARMON As String
        Dim intTRANSNO As Integer
        Dim intSEQ As Integer
        Dim strTAXNO As String
        Dim strTRANSNO As String
        Dim intTAXSEQ As Integer

        '테스트
        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                mobjcePD_TAX_HDR = New cePD_TAX_HDR(mobjSCGLConfig)
                mobjcePD_TAX_DTL = New cePD_TAX_DTL(mobjSCGLConfig)
                mobjcePD_TRANS_DTL = New ePDCO.cePD_TRANS_DTL(mobjSCGLConfig)
                mobjcePD_DIVAMT = New ePDCO.cePD_DIVAMT(mobjSCGLConfig)
                intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                '''해당하는Row 만큼 Loop
                For i = 1 To intRows
                    ''' FLAG 조사 - INSERT/UPDATE 조사
                    If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 Then

                        strJOBNO = GetElement(vntData, "JOBNO", intColCnt, i, OPTIONAL_STR)
                        intJOBNOSEQ = GetElement(vntData, "JOBNOSEQ", intColCnt, i, OPTIONAL_STR)

                        strTRANSYEARMON = GetElement(vntData, "TRANSYEARMON", intColCnt, i, OPTIONAL_STR)
                        intTRANSNO = GetElement(vntData, "TRANSNO", intColCnt, i, OPTIONAL_STR)
                        intSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_STR)
                        strTRANSNO = strTRANSYEARMON & "-" & intTRANSNO & "-" & intSEQ

                        strTAXYEARMON = GetElement(vntData, "TAXYEARMON", intColCnt, i, OPTIONAL_STR)
                        intTAXNO = SelectRtn_TRUTAXNO(strTAXYEARMON)
                        intTAXNOSEQ = SelectRtn_TRUTAXNOSEQ(strTAXYEARMON, intTAXNO)
                        strTAXNO = strTAXYEARMON & "-" & intTAXNO

                        strDEMANDDAY = GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)
                        strPRINTDAY = GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)

                        '헤더저장       
                        intRtn = DIVInsertRtn_PD_TRUTAX_HDR(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, strDEMANDDAY, strPRINTDAY)

                        '디테일저장
                        intRtn1 = DIVInsertRtn_PD_TRUTAX_DTL(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, strDEMANDDAY, strPRINTDAY)

                        'DIVAMT의 세금계산서번호 저장
                        intRtn2 = mobjcePD_DIVAMT.Update_TruTax(strJOBNO, intJOBNOSEQ, strTAXYEARMON, intTAXNO, intTAXNOSEQ)

                        '거래명세서 디테일의 세금계산서번호 저장
                        intRtn3 = mobjcePD_TRANS_DTL.TaxUpdateDo(strTRANSYEARMON, intTRANSNO, intSEQ, strTAXYEARMON, intTAXNO, intTAXNOSEQ)

                    End If
                Next
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_Div")
            Finally
                'Resource해제
                mobjcePD_TAX_HDR.Dispose()
                mobjcePD_TAX_DTL.Dispose()
                mobjcePD_TRANS_DTL.Dispose()
                mobjcePD_DIVAMT.Dispose()
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With

    End Function


    Public Function SelectRtn_TRUTAXNO(ByVal strTAXYEARMON As String) As String
        Dim strSQL As String
        Dim strFormat As String
        Dim strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = String.Format("select isnull(Max(TAXNO),0) +1 From PD_TAX_HDR WHERE TAXYEARMON = '" & strTAXYEARMON & "'")
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TRANSNO")
            Finally
            End Try
        End With
    End Function
    Public Function SelectRtn_TRUTAXNOSEQ(ByVal strTAXYEARMON As String, _
                                          ByVal intTAXNO As Integer) As String
        Dim strSQL As String
        Dim strFormat As String
        Dim strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = String.Format("select isnull(Max(TAXSEQ),0) +1 From PD_TAX_DTL WHERE TAXYEARMON = '" & strTAXYEARMON & "' AND TAXNO =" & intTAXNO)
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TRUTAXNOSEQ")
            Finally
            End Try
        End With
    End Function


    Public Function SelectRtn_TRUTAXSEQ(ByVal intTAXNO As Integer, ByVal strTAXYEARMON As String) As String
        Dim strSQL As String
        Dim strFormat As String
        Dim strRtn As String
        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = String.Format("select isnull(Max(TAXNOSEQ),0) +1 From MD_TRUTAX_DTL WHERE TAXYEARMON = '" & strTAXYEARMON & "' AND TAXNO = '" & intTAXNO & "'")
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TRUTAXSEQ")
            Finally
            End Try
        End With
    End Function

    '======== 생성된 세금계산서 삭제
    Public Function DeleteRtn_TruTax(ByVal strInfoXML As String, _
                                     ByVal strTAXYEARMON As String, _
                                     ByVal intTAXNO As Integer) As Integer
        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )
        Dim strTAXNO As String

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                strTAXNO = strTAXYEARMON & "-" & CStr(intTAXNO)
                mobjcePD_TAX_HDR = New cePD_TAX_HDR(mobjSCGLConfig)
                mobjcePD_TAX_DTL = New cePD_TAX_DTL(mobjSCGLConfig)
                mobjcePD_TRANS_DTL = New ePDCO.cePD_TRANS_DTL(mobjSCGLConfig)
                mobjcePD_DIVAMT = New ePDCO.cePD_DIVAMT(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출

                '거래명세서의 세금계산서년월,번호 삭제
                intRtn = mobjcePD_DIVAMT.TruTaxDeleteUpdateDo(strTAXYEARMON, intTAXNO)

                '신탁테이블의 세금계산서 번호 삭제
                intRtn = mobjcePD_TRANS_DTL.TruTaxDeleteUpdateDo(strTAXYEARMON, intTAXNO)

                '헤더 삭제
                'intRtn = mobjcePD_TAX_HDR.DeleteDo(strTAXYEARMON, intTAXNO)
                '디테일 삭제
                'intRtn = mobjcePD_TAX_DTL.DeleteDo(strTAXYEARMON, intTAXNO)


                intRtn = mobjcePD_TAX_HDR.DeleteMark(strTAXYEARMON, intTAXNO)
                intRtn = mobjcePD_TAX_DTL.DeleteMark(strTAXYEARMON, intTAXNO)

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_TruTax")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_TAX_HDR.Dispose()
                mobjcePD_TAX_DTL.Dispose()
                mobjcePD_TRANS_DTL.Dispose()
                mobjcePD_DIVAMT.Dispose()
            End Try
        End With

    End Function

    '세금계산서 출력을 위한 테이블 삭제처리
    Public Function DeleteRtn_TEMP(ByVal strInfoXML As String) As Integer   '데이터 DELETE

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_TAX_TEMP = New cePD_TAX_TEMP(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjcePD_TAX_TEMP.DeleteDo(.WRKUSR)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_TAX_TEMP.Dispose()
            End Try
        End With
    End Function

    ' ============== ProcessRtn (Master & Detail) Sample Code 
    Public Function ProcessRtn_TEMP(ByVal strInfoXML As String, _
                                    ByVal strTAXYEARMON As String, _
                                    ByVal strTAXNO As String, _
                                    ByVal VATFLAG As String, _
                                    ByVal FLAG As String, _
                                    ByVal strNUM As Double, _
                                    ByRef strUSERID As String) As Integer

        Dim intRtn As Integer  '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim intCnt

        SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리
                mobjcePD_TAX_TEMP = New cePD_TAX_TEMP(mobjSCGLConfig)

                strUSERID = .WRKUSR 'USERID 를 받아야 출력시에 USERID에 따른 구분을 둘수있다.
                intRtn = InsertRtn_TRANS_TEMP(strTAXYEARMON, strTAXNO, VATFLAG, FLAG, strNUM)
                mobjcePD_TAX_TEMP.Dispose()
                '트랜잭션Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_TEMP")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '상세페이지의 부가세/적요 수정시
    Public Function ProcessRtn_VAT(ByVal strInfoXML As String, _
                                   ByVal vntData As Object, _
                                   ByVal strTAXYEARMON As String, _
                                   ByVal intTAXNO As Integer, _
                                   ByVal strSUMM As String) As Integer
        Dim intRtn As Integer
        Dim intRtnTrans As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblTAXSEQ
        Dim strTRANSSUM
        Dim strTRANSYEARMON
        Dim strTRANSNO
        Dim intTRANSSEQ
        Dim lngVAT
        Dim lngSUMVAT
        Dim intRtnTranVAT

        Dim intLEN
        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then

                    mobjcePD_TAX_HDR = New cePD_TAX_HDR(mobjSCGLConfig)
                    mobjcePD_TAX_DTL = New cePD_TAX_DTL(mobjSCGLConfig)
                    mobjcePD_TRANS_HDR = New ePDCO.cePD_TRANS_HDR(mobjSCGLConfig)
                    mobjcePD_TRANS_DTL = New ePDCO.cePD_TRANS_DTL(mobjSCGLConfig)


                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    For i = 1 To intRows
                        lngVAT = 0
                        dblTAXSEQ = 0

                        lngVAT = GetElement(vntData, "VAT", intColCnt, i, NULL_NUM, True)

                        dblTAXSEQ = GetElement(vntData, "TAXSEQ", intColCnt, i, NULL_NUM, True)
                        strTRANSSUM = GetElement(vntData, "TRANSNO", intColCnt, i)

                        intLEN = Len(strTRANSSUM)
                        strTRANSYEARMON = Mid(strTRANSSUM, 1, 6)
                        strTRANSNO = Mid(strTRANSSUM, InStr(1, strTRANSSUM, "-") + 1, (InStr(8, strTRANSSUM, "-")) - (InStr(1, strTRANSSUM, "-") + 1))
                        intTRANSSEQ = Mid(strTRANSSUM, InStr(8, strTRANSSUM, "-") + 1, intLEN)

                        '세금계산서 상세내역에 업데이트
                        intRtn = mobjcePD_TAX_DTL.Update_vat(strTAXYEARMON, intTAXNO, dblTAXSEQ, lngVAT)
                        '거래명세서 상세내역에 업데이트
                        intRtnTranVAT = mobjcePD_TRANS_DTL.Update_vat(strTRANSYEARMON, strTRANSNO, intTRANSSEQ, lngVAT)

                        '부가세의 합을 계산
                        lngSUMVAT = lngSUMVAT + lngVAT
                    Next

                End If
                '부가세의 합을 헤더에 저장 한다.
                intRtn = mobjcePD_TAX_HDR.Update_Vat(strTAXYEARMON, intTAXNO, strSUMM, lngSUMVAT)

                '거래명세서 헤더 VAT업데이트를 위해 거래명세서 DTL 금액 조회
                intRtnTranVAT = SelectRtn_TRANSVAT(strTRANSYEARMON, strTRANSNO)

                '변경된 세부내역의 부가세의 합을 거래명세서 헤더에 합산 Update
                intRtnTrans = mobjcePD_TRANS_HDR.Update_VatHDR(strTRANSYEARMON, strTRANSNO, intRtnTranVAT)


                .mobjSCGLSql.SQLCommitTrans()
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_VAT")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_TAX_HDR.Dispose()
                mobjcePD_TAX_DTL.Dispose()
                mobjcePD_TRANS_HDR.Dispose()
            End Try
        End With
    End Function


    ''============== 거래명세서 DTL에 있는 VAT 금액을 합산하여 가져온다
    Public Function SelectRtn_TRANSVAT(ByVal strTRANSYEARMON As String, _
                                      ByVal strTRANSNO As Integer) As String
        '여기부터 단순조회
        Dim strSQL, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = strSQL & " SELECT "
                strSQL = strSQL & " SUM(ISNULL(VAT,0))"
                strSQL = strSQL & " FROM PD_TRANS_DTL"
                strSQL = strSQL & " WHERE TRANSYEARMON = '" & strTRANSYEARMON & "'"
                strSQL = strSQL & " AND TRANSNO = " & strTRANSNO

                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)

                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TRANSVAT")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

#End Region

#Region "GROUP BLOCK : 외부에 비공개 Method"

    Private Function DIVInsertRtn_PD_TRUTAX_HDR(ByVal vntData As Object, _
                                                ByVal intColCnt As Integer, _
                                                ByVal intRow As Integer, _
                                                ByVal strTAXYEARMON As String, _
                                                ByVal intTAXNO As Integer, _
                                                ByVal strDEMANDDAY As String, _
                                                ByVal strPRINTDAY As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjcePD_TAX_HDR.InsertDo( _
                                       strTAXYEARMON, _
                                       intTAXNO, _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "TIMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "SUBSEQ", intColCnt, intRow), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VAT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "SUMAMT", intColCnt, intRow, NULL_NUM, True), _
                                       strDEMANDDAY, _
                                       strPRINTDAY, _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTBUSINO", intColCnt, intRow), _
                                       GetElement(vntData, "REALBUSINO", intColCnt, intRow), _
                                       GetElement(vntData, "SUMM", intColCnt, intRow), _
                                       "Y", _
                                       "JS", _
                                       GetElement(vntData, "TAXCODE", intColCnt, intRow), _
                                       GetElement(vntData, "PAYCODE", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTNAME", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTOWNER", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTADDR1", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTADDR2", intColCnt, intRow), _
                                       GetElement(vntData, "JOBGUBN", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function


    Private Function DIVInsertRtn_PD_TRUTAX_DTL(ByVal vntData As Object, _
                                                ByVal intColCnt As Integer, _
                                                ByVal intRow As Integer, _
                                                ByVal strTAXYEARMON As String, _
                                                ByVal intTAXNO As Integer, _
                                                ByVal strDEMANDDAY As String, _
                                                ByVal strPRINTDAY As String) As Integer

        Dim intRtn As Integer
        intRtn = mobjcePD_TAX_DTL.InsertDo( _
                                        strTAXYEARMON, _
                                        intTAXNO, _
                                        1, _
                                        GetElement(vntData, "JOBNOSEQ", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                        GetElement(vntData, "JOBNAME", intColCnt, intRow), _
                                        GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                        GetElement(vntData, "TIMCODE", intColCnt, intRow), _
                                        GetElement(vntData, "SUBSEQ", intColCnt, intRow), _
                                        GetElement(vntData, "DEPTCD", intColCnt, intRow), _
                                        GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "VAT", intColCnt, intRow, NULL_NUM, True), _
                                        strDEMANDDAY, _
                                        strPRINTDAY, _
                                        GetElement(vntData, "REALBUSINO", intColCnt, intRow), _
                                        GetElement(vntData, "SUMM", intColCnt, intRow), _
                                        "Y", _
                                        GetElement(vntData, "JOBGUBN", intColCnt, intRow), _
                                        GetElement(vntData, "TRANSYEARMON", intColCnt, intRow), _
                                        GetElement(vntData, "TRANSNO", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function
    Private Function InsertRtn_TRUTAX_HDR(ByVal vntData As Object, _
                                          ByVal intColCnt As Integer, _
                                          ByVal intRow As Integer, _
                                          ByVal strTAXYEARMON As String, _
                                          ByVal intTAXNO As String, _
                                          ByVal lngSUMAMT As Double, _
                                          ByVal lngSUMVAT As Double, _
                                          ByVal lngSUMAMTVAT As Double, _
                                          ByVal strDEMANDDAY As String, _
                                          ByVal strPRINTDAY As String, _
                                          ByVal strSUMM As String) As Integer


        Dim intRtn As Integer
        intRtn = mobjcePD_TAX_HDR.InsertDo( _
                                       strTAXYEARMON, _
                                       intTAXNO, _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "TIMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "SUBSEQ", intColCnt, intRow), _
                                       lngSUMAMT, _
                                       lngSUMVAT, _
                                       lngSUMAMTVAT, _
                                       strDEMANDDAY, _
                                       strPRINTDAY, _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTBUSINO", intColCnt, intRow), _
                                       GetElement(vntData, "REALBUSINO", intColCnt, intRow), _
                                       strSUMM, _
                                       "Y", _
                                       "JS", _
                                       GetElement(vntData, "TAXCODE", intColCnt, intRow), _
                                       GetElement(vntData, "PAYCODE", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTNAME", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTOWNER", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTADDR1", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTADDR2", intColCnt, intRow), _
                                       GetElement(vntData, "JOBGUBN", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function


    Private Function InsertRtn_TRUTAX_DTL(ByVal vntData As Object, _
                                          ByVal intColCnt As Integer, _
                                          ByVal intRow As Integer, _
                                          ByVal strTAXYEARMON As String, _
                                          ByVal intTAXNO As Integer, _
                                          ByVal intTAXNOSEQ As Integer, _
                                          ByVal strDEMANDDAY As String, _
                                          ByVal strPRINTDAY As String) As Integer

        Dim intRtn As Integer
        intRtn = mobjcePD_TAX_DTL.InsertDo( _
                                        strTAXYEARMON, _
                                        intTAXNO, _
                                        intTAXNOSEQ, _
                                        GetElement(vntData, "JOBNOSEQ", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                        GetElement(vntData, "JOBNAME", intColCnt, intRow), _
                                        GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                        GetElement(vntData, "TIMCODE", intColCnt, intRow), _
                                        GetElement(vntData, "SUBSEQ", intColCnt, intRow), _
                                        GetElement(vntData, "DEPTCD", intColCnt, intRow), _
                                        GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "VAT", intColCnt, intRow, NULL_NUM, True), _
                                        strDEMANDDAY, _
                                        strPRINTDAY, _
                                        GetElement(vntData, "REALBUSINO", intColCnt, intRow), _
                                        GetElement(vntData, "SUMM", intColCnt, intRow), _
                                        "Y", _
                                        GetElement(vntData, "JOBGUBN", intColCnt, intRow), _
                                        GetElement(vntData, "TRANSYEARMON", intColCnt, intRow), _
                                        GetElement(vntData, "TRANSNO", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                        GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                        GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    Private Function InsertRtn_TRANS_TEMP(ByVal strTAXYEARMON As String, _
                                          ByRef strTAXNO As String, _
                                          ByRef VATFLAG As String, _
                                          ByRef FLAG As String, _
                                          ByRef strNUM As Double) As Integer


        Dim intRtn As Integer
        intRtn = mobjcePD_TAX_TEMP.InsertDo( _
                                       strTAXYEARMON, _
                                       strTAXNO, _
                                       VATFLAG, _
                                       FLAG, _
                                       strNUM)

    End Function

#End Region
End Class