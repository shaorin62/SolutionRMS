'Public Class ccPDCMEXE

'End Class
'****************************************************************************************
'Generated By  : Kim Tae Ho 
'시스템구분    : RMS/PD/Server Control Class
'실행   환경   : COM+ Service Server Package
'프로그램명    : ccPDCMPREESTLIST.vb
'기         능 : - 가견적관리
'특이  사항    : - CE 단 Query 복사 기능
'                -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2008.11.12 Kim Tae Ho
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports ePDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트
Public Class ccPDCOCHARGEDIV
    Inherits ccControl
#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccPDCOCHARGEDIV"                  '자신의 클래스명
    Private mobjcePD_EXE_HDR As ePDCO.cePD_EXE_HDR            '외주정산 기본내역
    Private mobjcePD_EXE_DTL As ePDCO.cePD_EXE_DTL            '외주정산 상세내역
    Private mobjcePD_ACC_MST As ePDCO.cePD_ACC_MST            '회계진행비 상세내역 투입
    Private mobjcePD_DIVAMT As ePDCO.cePD_DIVAMT

    'Private Const .DBConnStr = "Provider=SQLOLEDB;Data Source=10.110.10.86;Initial Catalog=MCDEV;DSN=MCDEV;UID=devadmin;Pwd=password"
#End Region

#Region "GROUP BLOCK : Function Section"
    '=============== 정산(지출) 헤더 조회 ==>> 확정분이 없을 경우
    Public Function SelectRtn_HDR(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strCODE As String) As String

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1 As String


        If strCODE <> "" Then Con1 = String.Format(" AND (B.JOBNO = '{0}')", strCODE)

        strWhere = BuildFields(" ", Con1)

        strCols = strCols & " B.JOBNO, B.JOBNO JOBNOINS, "
        strCols = strCols & " B.PREESTNO,"
        strCols = strCols & " PROJECTNM,JOBNAME,DBO.MD_GETPUBNAME_FUN(A.JOBGUBN) JOBGUBN,"
        strCols = strCols & " DBO.MD_GETPUBNAME_FUN(A.CREPART) CREPART,"
        strCols = strCols & " DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) CLIENTNAME,"
        strCols = strCols & " DBO.SC_GET_CUSTNAME_FUN(A.TIMCODE) TIMNAME,"
        strCols = strCols & " DBO.SC_GET_SUBSEQNAME_FUN(A.SUBSEQ) SUBSEQNAME, "
        strCols = strCols & " CASE A.REQDAY WHEN '' THEN '' ELSE substring(A.REQDAY,1,4) + '-' + substring(A.REQDAY,5,2) + '-' + substring(A.REQDAY,7,2) END AS DEMANDDAY,"
        strCols = strCols & " CASE B.ENDDAY WHEN '' THEN '' ELSE substring(B.ENDDAY,1,4) + '-' + substring(B.ENDDAY,5,2) + '-' + substring(B.ENDDAY,7,2)  END AS ENDDAY, "
        strCols = strCols & " CASE WHEN A.ENDFLAG = 'PF01' THEN '의뢰'  "
        strCols = strCols & " WHEN ENDFLAG ='PF02' THEN '진행'   "
        strCols = strCols & " WHEN ENDFLAG = 'PF03' THEN '청구'  "
        strCols = strCols & " WHEN ENDFLAG = 'PF04' THEN '결산' "
        strCols = strCols & " ELSE '마감' END AS ENDFLAG,"
        strCols = strCols & " ISNULL(C.NONCOMMITION,0) NONCOMMITION,"
        strCols = strCols & " ISNULL(C.COMMITION,0) COMMITION,"
        strCols = strCols & " ISNULL(C.SUSURATE,0) SUSURATE,"
        strCols = strCols & " ISNULL(C.SUSUAMT,0) SUSUAMT,"
        strCols = strCols & " ISNULL(C.SUMAMT,0) ESTAMT,"
        strCols = strCols & " ISNULL(B.PAYMENT,0) PAYMENT,"
        strCols = strCols & " ISNULL(B.RATE,0) RATE,"
        strCols = strCols & " ISNULL(B.DEMANDAMT,0) DEMANDAMT,"
        strCols = strCols & " ISNULL(B.INCOM,0) INCOM,"
        strCols = strCols & " ISNULL(B.ACCAMT,0) ACCAMT"

        strFormat = "SELECT {0} FROM V_JOBNO A   "
        strFormat = strFormat & "LEFT JOIN PD_EXE_HDR B ON A.JOBNO = B.JOBNO "
        strFormat = strFormat & "LEFT JOIN PD_PREEST_HDR C ON A.JOBNO = C.JOBNO "
        strFormat = strFormat & "WHERE ISNULL(C.CONFIRMFLAG,'') <> '' {1} "

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strCols, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                'vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                'Return vntData
                ' ------ XML 데이터 조회
                strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)
                Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDR")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    '=============== 정산(지출) 헤더 조회 ==>> 확정분이 없을 경우
    Public Function SelectRtn_Actual_HDR(ByVal strInfoXML As String, _
                                         ByRef intRowCnt As Integer, _
                                         ByRef intColCnt As Integer, _
                                         ByVal strJOBNO As String) As String

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1 As String


        If strJOBNO <> "" Then Con1 = String.Format(" AND (C.PREESTNO = dbo.PD_JOBNO_PREESTNO_FUN('{0}')) ", strJOBNO)

        strWhere = BuildFields(" ", Con1)



        strCols = strCols & " C.JOBNO, B.JOBNO JOBNOINS, "
        strCols = strCols & " C.PREESTNO,"
        strCols = strCols & " PROJECTNM,JOBNAME,DBO.MD_GETPUBNAME_FUN(A.JOBGUBN) JOBGUBN,"
        strCols = strCols & " DBO.MD_GETPUBNAME_FUN(A.CREPART) CREPART,"
        strCols = strCols & " DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) CLIENTNAME,"
        strCols = strCols & " DBO.SC_GET_CUSTNAME_FUN(A.TIMCODE) TIMNAME,"
        strCols = strCols & " DBO.SC_GET_SUBSEQNAME_FUN(A.SUBSEQ) SUBSEQNAME, "
        strCols = strCols & " CASE A.REQDAY WHEN '' THEN '' ELSE substring(A.REQDAY,1,4) + '-' + substring(A.REQDAY,5,2) + '-' + substring(A.REQDAY,7,2) END AS DEMANDDAY,"
        strCols = strCols & " CASE B.ENDDAY WHEN '' THEN '' ELSE substring(B.ENDDAY,1,4) + '-' + substring(B.ENDDAY,5,2) + '-' + substring(B.ENDDAY,7,2)  END AS ENDDAY, "
        strCols = strCols & " CASE WHEN A.ENDFLAG = 'PF01' THEN '의뢰'  "
        strCols = strCols & " WHEN ENDFLAG ='PF02' THEN '진행'   "
        strCols = strCols & " WHEN ENDFLAG = 'PF03' THEN '청구'  "
        strCols = strCols & " WHEN ENDFLAG = 'PF04' THEN '결산' "
        strCols = strCols & " ELSE '마감' END AS ENDFLAG, "
        strCols = strCols & " ISNULL(C.NONCOMMITION,0) NONCOMMITION,  "
        strCols = strCols & " ISNULL(C.COMMITION,0) COMMITION,  "
        strCols = strCols & " ISNULL(C.SUSURATE,0) SUSURATE,  "
        strCols = strCols & " ISNULL(C.SUSUAMT,0) SUSUAMT,  "
        strCols = strCols & " DBO.PD_DEMANDSUMAMT_FUN(C.JOBNO) DEMANDAMT, "
        strCols = strCols & " 0 PAYMENT,  "   'DBO.PD_PAYMENTSUMAMT_FUN(JOBNO)
        strCols = strCols & " 0 RATE,  "
        strCols = strCols & " 0 INCOM, "
        strCols = strCols & " CASE ISNULL(B.ESTAMT,0) WHEN 0 THEN C.SUMAMT ELSE B.ESTAMT END AS ESTAMT,  "
        strCols = strCols & " 0 ACCAMT  "


        strFormat = "SELECT {0} FROM V_JOBNO A   "
        strFormat = strFormat & "LEFT JOIN PD_EXE_HDR B ON A.JOBNO = B.JOBNO "
        strFormat = strFormat & "LEFT JOIN PD_PREEST_HDR C ON A.JOBNO = C.JOBNO "
        strFormat = strFormat & "WHERE 1=1  {1} "

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strCols, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                'vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                'Return vntData
                ' ------ XML 데이터 조회
                strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)
                Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_Actual_HDR")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' =============== 청구지 상세내역 리스트 조회
    Public Function SelectRtn_DTL(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strCODE As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1

        If strCODE <> "" Then Con1 = String.Format(" AND (JOBNO = '{0}')", strCODE)

        strWhere = BuildFields(" ", Con1)

        strCols = strCols & " '0' CHK,"
        strCols = strCols & " CASE ISNULL(EXE_FLAG,'0') WHEN '0' THEN '미확정' ELSE '확정' END AS EXE_FLAGNAME, "
        strCols = strCols & " JOBNO,DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strCols = strCols & " SEQ JOBNOSEQ,"
        strCols = strCols & " ROUND ( ( ISNULL(DIVAMT,0) /  CASE ISNULL(DBO.PD_JOBNO_SUMDIVAMTRATE__FUN(JOBNO),0) WHEN 0 THEN 1 ELSE ISNULL(DBO.PD_JOBNO_SUMDIVAMTRATE__FUN(JOBNO),0) END  )*100,2) AS DIVRATE,"
        strCols = strCols & " DIVAMT,"
        strCols = strCols & " ADJAMT,"
        strCols = strCols & " CHARGE,"
        strCols = strCols & " 0 OUTAMT_CONFIRM,"
        strCols = strCols & " 0 OUTAMT_NOCONFIRM,"
        strCols = strCols & " 0 AS EXEAMT, "

        'strCols = strCols & " DBO.PD_JOBNO_DIVEXEVOCHAMT_FUN(JOBNO,SEQ) OUTAMT_CONFIRM,"
        'strCols = strCols & " DBO.PD_JOBNO_DIVEXENONEAMT_FUN(JOBNO,SEQ) OUTAMT_NOCONFIRM,"
        'strCols = strCols & " CASE WHEN ISNULL(EXE_FLAG,'0')='0' and DBO.PD_JOBNO_DIVEXEVOCHAMT_FUN(JOBNO,SEQ) <> 0 THEN DBO.PD_JOBNO_DIVEXEVOCHAMT_FUN(JOBNO,SEQ)"
        'strCols = strCols & " WHEN ISNULL(EXE_FLAG,'0') ='0' and DBO.PD_JOBNO_DIVEXEVOCHAMT_FUN(JOBNO,SEQ) = 0 then DBO.PD_JOBNO_DIVEXENONEAMT_FUN(JOBNO,SEQ) "
        'strCols = strCols & " WHEN ISNULL(EXE_FLAG,'0') ='1' then ISNULL(EXE_FLAG,'0') "
        'strCols = strCols & " END AS EXEAMT, "
        strCols = strCols & " ISNULL(EXE_FLAG,'0') EXE_FLAG"

        strFormat = " SELECT {0} FROM PD_DIVAMT "
        strFormat = strFormat & " WHERE 1=1 {1} ORDER BY JOBNO, SEQ"

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strCols, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_DTL")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function



    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal vntData As Object) As Object

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim IntEXEAMT As Integer
        Dim dblSeq As Double
        Dim strJOBNO As String


        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_DIVAMT = New cePD_DIVAMT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    For i = 1 To intRows
                        If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 Then
                            strJOBNO = GetElement(vntData, "JOBNO", intColCnt, i, OPTIONAL_STR)
                            dblSeq = GetElement(vntData, "JOBNOSEQ", intColCnt, i, NULL_NUM, True)
                            IntEXEAMT = GetElement(vntData, "EXEAMT", intColCnt, i, NULL_NUM, True)
                            intRtn = mobjcePD_DIVAMT.Update_EXEAMTCONFIRM(strJOBNO, dblSeq, IntEXEAMT)
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_DIVAMT.Dispose()
            End Try
        End With
    End Function


    Public Function ProcessRtn_ConfirmCancel(ByVal strInfoXML As String, _
                                             ByVal vntData As Object) As Object

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim IntEXEAMT As Integer
        Dim dblSeq As Double
        Dim strJOBNO As String


        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_DIVAMT = New cePD_DIVAMT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    For i = 1 To intRows
                        If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 Then
                            strJOBNO = GetElement(vntData, "JOBNO", intColCnt, i, OPTIONAL_STR)
                            dblSeq = GetElement(vntData, "JOBNOSEQ", intColCnt, i, NULL_NUM, True)
                            IntEXEAMT = GetElement(vntData, "EXEAMT", intColCnt, i, NULL_NUM, True)
                            intRtn = mobjcePD_DIVAMT.Update_EXEAMTCONFIRMCANCEL(strJOBNO, dblSeq)
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_DIVAMT.Dispose()
            End Try
        End With
    End Function



    '================정산세부내역 삭제
    Public Function DeleteRtn(ByVal strInfoXML As String, _
                              ByVal strJOBNO As String, _
                              ByVal dblSEQ As Double) As Integer
        'PREESTNO,ITEMCODESEQ
        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_EXE_DTL = New cePD_EXE_DTL(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjcePD_EXE_DTL.DeleteDo(strJOBNO, dblSEQ)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_EXE_DTL.Dispose()
            End Try
        End With
    End Function

    '================정산세부내역 삭제
    Public Function DeleteRtn_All(ByVal strInfoXML As String, _
                                  ByVal strJOBNO As String) As Integer
        'PREESTNO,ITEMCODESEQ
        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )
        Dim strSQL
        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_EXE_DTL = New cePD_EXE_DTL(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출

                strSQL = "DELETE FROM PD_EXE_HDR WHERE JOBNO = '" & strJOBNO & "';DELETE FROM PD_EXE_DTL WHERE JOBNO = '" & strJOBNO & "';DELETE FROM PD_ACC_MST WHERE JOBNO = '" & strJOBNO & "'"
                intRtn = mobjcePD_EXE_DTL.DeleteDo_ALL(strSQL)

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_EXE_DTL.Dispose()
            End Try
        End With
    End Function

    Public Function ProcessRtn_DELHDR(ByVal strInfoXML As String, _
                                      ByVal strMasterXML As String) As Integer '데이터 INSERT/UPDATE
        Dim intRtn As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim strENDDAY
        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'XML Element 변수 선언 (strMasterXML을 변환)
                Dim xmlRoot As XmlElement
                mobjcePD_EXE_HDR = New cePD_EXE_HDR(mobjSCGLConfig)
                xmlRoot = XMLGetRoot(strMasterXML) 'XML 데이터

                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리
                If XMLGetElement(xmlRoot, "ENDDAY") <> "" Then strENDDAY = XMLGetElement(xmlRoot, "ENDDAY").Substring(0, 4) & XMLGetElement(xmlRoot, "ENDDAY").Substring(5, 2) & XMLGetElement(xmlRoot, "ENDDAY").Substring(8, 2)

                intRtn = UpdateRtn_HDR(xmlRoot, strENDDAY)

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_DELHDR")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_EXE_HDR.Dispose()
            End Try
        End With
    End Function

    ' =============== 회계진행비 내역 조회
    Public Function SelectRtn_ACCLIST(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByVal strCODE As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim Con1

        strCols = " JOBNO,SEQ,AMT,BREAKDOWN,ACCDAY"

        If strCODE <> "" Then Con1 = String.Format(" AND (JOBNO = '{0}')", strCODE)
        strWhere = BuildFields(" ", Con1)
        strFormat = "SELECT {0} FROM PD_ACC_MST WHERE 1=1 {1} ORDER BY SEQ"

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strCols, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ACCLIST")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    ''============== ProcessRtn 회계진행비 투입
    Public Function ProcessRtn_ACCLIST(ByVal strInfoXML As String, _
                                       ByVal vntData As Object, _
                                       ByVal strJOBNO As String) As Object '데이터 INSERT/UPDATE
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strACCDAY As String
        Dim dblSEQ As Integer
        Dim dblSUMAMT As Double
        Dim intHDR As Integer
        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjcePD_ACC_MST = New cePD_ACC_MST(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    For i = 1 To intRows
                        strACCDAY = ""
                        If GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_STR) = "" Then
                            dblSEQ = SelectRtn_ACCSEQNO(strJOBNO)
                            strACCDAY = Mid(GetElement(vntData, "ACCDAY", intColCnt, i, OPTIONAL_STR), 1, 4) & Mid(GetElement(vntData, "ACCDAY", intColCnt, i, OPTIONAL_STR), 6, 2) & Mid(GetElement(vntData, "ACCDAY", intColCnt, i, OPTIONAL_STR), 9, 2)

                            intRtn = InsertRtn_ACCLIST(vntData, intColCnt, i, dblSEQ, strACCDAY)
                        Else
                            strACCDAY = Mid(GetElement(vntData, "ACCDAY", intColCnt, i, OPTIONAL_STR), 1, 4) & Mid(GetElement(vntData, "ACCDAY", intColCnt, i, OPTIONAL_STR), 6, 2) & Mid(GetElement(vntData, "ACCDAY", intColCnt, i, OPTIONAL_STR), 9, 2)

                            intRtn = UpdateRtn_ACCLIST(vntData, intColCnt, i, strACCDAY)
                        End If
                    Next
                    intHDR = mobjcePD_ACC_MST.Update_EXEHDR(strJOBNO)
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_ACCLIST")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_ACC_MST.Dispose()
            End Try
        End With
    End Function

    '============== 회계진행비 순번생성
    Public Function SelectRtn_ACCSEQNO(ByVal strJOBNO As String) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting
        Dim strPRECODE As String
        With mobjSCGLConfig '기본정보 Config 개체

            Try
                strSQL = "SELECT ISNULL(MAX(SEQ),0) +1 FROM PD_ACC_MST WHERE JOBNO = '" & strJOBNO & "'"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ACCSEQNO")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function


    '================회계진행비 내역 삭제
    Public Function DeleteRtn_ACCLIST(ByVal strInfoXML As String, _
                                      ByVal strJOBNO As String, _
                                      ByVal dblSEQ As Double) As Integer
        'PREESTNO,ITEMCODESEQ
        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_ACC_MST = New cePD_ACC_MST(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjcePD_ACC_MST.DeleteDo(strJOBNO, dblSEQ)
                intRtn = mobjcePD_ACC_MST.Update_EXEHDR(strJOBNO)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_ACCLIST")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjcePD_ACC_MST.Dispose()
            End Try
        End With
    End Function


    ''============== ProcessRtn 회계진행비 삭제시 외주비정산 헤더에 금액 업데이트
    Public Function DeleteUpdate_ACCLIST(ByVal strInfoXML As String, _
                                         ByVal strJOBNO As String, _
                                         ByVal strSUMAMT As Double) As Object '데이터 INSERT/UPDATE
        Dim intRtn As Integer

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                mobjcePD_ACC_MST = New cePD_ACC_MST(mobjSCGLConfig)
                intRtn = mobjcePD_ACC_MST.Update_EXEHDR(strJOBNO)
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".DeleteUpdate_ACCLIST")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_ACC_MST.Dispose()
            End Try
        End With
    End Function
    '=============== 정산(지출) 헤더 조회 ==>> 정산지출 헤더가 없다면 진행비 입력전 저장을 해야 한다.
    Public Function SelectRtn_ACCEXIST(ByVal strInfoXML As String, _
                                       ByRef intRowCnt As Integer, _
                                       ByRef intColCnt As Integer, _
                                       ByVal strCODE As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            strSQL = "SELECT JOBNO FROM PD_EXE_HDR WHERE JOBNO ='" & strCODE & "'"

            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
                ' ------ XML 데이터 조회
                'strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)
                'Return strXMLData
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDR")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function






    ''==============  DeleteRtn_ENDDAY Endday '' 로 업데이트... 확정취소
    Public Function DeleteRtn_ENDDAY(ByVal strInfoXML As String, ByVal strJOBNO As String) As Object '데이터 INSERT/UPDATE
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strNOW As String

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                mobjcePD_EXE_HDR = New cePD_EXE_HDR(mobjSCGLConfig)
                '''vntData의 컬럼수, 로우수를 변수입력
                intRtn = mobjcePD_EXE_HDR.Delete_ENDDAY(strJOBNO)
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".DeleteRtn_ENDDAY")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjcePD_EXE_HDR.Dispose()
            End Try
        End With

    End Function
#End Region

#Region "GROUP BLOCK : Entity Function Section"
    'JOBNO,DEMANDDAY,ENDDAY,PREESTNO,NONCOMMITION,COMMITION,SUSURATE,SUSUAMT,DEMANDAMT,PAYMENT,RATE,INCOM
    '공백은 추후 DEMANDDAY 넣으려 하였음    
    Private Function InsertRtn_HDR(ByVal xmlRoot As XmlElement, _
                                   ByVal strENDDAY As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjcePD_EXE_HDR.InsertDo( _
                                       XMLGetElement(xmlRoot, "JOBNO"), _
                                       "", _
                                       strENDDAY, _
                                       XMLGetElement(xmlRoot, "PREESTNO"), _
                                       XMLGetElement(xmlRoot, "NONCOMMITION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "COMMITION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSURATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSUAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "DEMANDAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "PAYMENT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "RATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "INCOM", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ESTAMT", NULL_NUM, True))
        'strPREESTNO,PREESTNAME,JOBNO,CREDAY,CLIENTSUBCODE,SUSURATE,CLIENTCODE
        'SUSUAMT,COMMITION,NONCOMMITION,SUMAMT
        Return intRtn
    End Function

    Private Function UpdateRtn_HDR(ByVal xmlRoot As XmlElement, _
                                   ByVal strENDDAY As String) As Integer
        Dim intRtn As Integer
        'SUSURATE,SUSUAMT,COMMITION,NONCOMMITION,SUMAMT
        intRtn = mobjcePD_EXE_HDR.UpdateDo( _
                                        XMLGetElement(xmlRoot, "JOBNO"), _
                                       "", _
                                       strENDDAY, _
                                       XMLGetElement(xmlRoot, "PREESTNO"), _
                                       XMLGetElement(xmlRoot, "NONCOMMITION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "COMMITION", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSURATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "SUSUAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "DEMANDAMT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "PAYMENT", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "RATE", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "INCOM", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ESTAMT", NULL_NUM, True))
        Return intRtn
    End Function

    Private Function InsertRtn_DTL(ByVal vntData As Object, _
                                   ByVal intColCnt As Integer, _
                                   ByVal intRow As Integer, _
                                   ByVal strJOBNO As String, _
                                   ByVal strPREESTNO As String, _
                                   ByVal lngSEQ As String, _
                                   ByVal strADJDAY As String, _
                                   ByVal strREGDATE As String) As Integer
        Dim intRtn As Integer

        intRtn = mobjcePD_EXE_DTL.InsertDo( _
                                       strJOBNO, _
                                       lngSEQ, _
                                       strPREESTNO, _
                                       GetElement(vntData, "ITEMCODESEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ITEMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "OUTSCODE", intColCnt, intRow), _
                                       GetElement(vntData, "STD", intColCnt, intRow), _
                                       GetElement(vntData, "ADJAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       strADJDAY, _
                                       strREGDATE, _
                                       GetElement(vntData, "AMTFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "ADDFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "VATCODE", intColCnt, intRow), _
                                       GetElement(vntData, "INCOMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function

    Private Function UpdateRtn_DTL(ByVal vntData As Object, _
                                   ByVal intColCnt As Integer, _
                                   ByVal intRow As Integer, _
                                   ByVal strADJDAY As String, _
                                   ByVal strREGDATE As String) As Integer

        Dim intRtn As Integer
        'JOBNO,SEQ,SORTSEQ,PREESTNO,ITEMCODESEQ,ITEMCODE,QTY,PRICE,AMT,OUTSCODE,STD,ADJAMT,VOCHNO,ADJDAY
        intRtn = mobjcePD_EXE_DTL.UpdateDo( _
                                       GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                       GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PREESTNO", intColCnt, intRow), _
                                       GetElement(vntData, "ITEMCODESEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ITEMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "OUTSCODE", intColCnt, intRow), _
                                       GetElement(vntData, "STD", intColCnt, intRow), _
                                       GetElement(vntData, "ADJAMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       strADJDAY, _
                                       strREGDATE, _
                                       GetElement(vntData, "AMTFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "ADDFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "VATCODE", intColCnt, intRow), _
                                       GetElement(vntData, "INCOMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    '회계진행비 
    Private Function InsertRtn_ACCLIST(ByVal vntData As Object, _
                                       ByVal intColCnt As Integer, _
                                       ByVal intRow As Integer, _
                                       ByVal lngSEQ As String, _
                                       ByVal strACCDAY As String) As Integer
        Dim intRtn As Integer
        'JOBNO|SEQ|OUTSCODE|AMT|BREAKDOWN|ACCDAY
        intRtn = mobjcePD_ACC_MST.InsertDo( _
                                       GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                       lngSEQ, _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "BREAKDOWN", intColCnt, intRow), _
                                       strACCDAY, _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function

    Private Function UpdateRtn_ACCLIST(ByVal vntData As Object, _
                                       ByVal intColCnt As Integer, _
                                       ByVal intRow As Integer, _
                                       ByVal strACCDAY As String) As Integer

        Dim intRtn As Integer
        'JOBNO|SEQ|OUTSCODE|OUTSNAME|AMT|BREAKDOWN|ACCDAY
        intRtn = mobjcePD_ACC_MST.UpdateDo( _
                                       GetElement(vntData, "JOBNO", intColCnt, intRow), _
                                       GetElement(vntData, "SEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "BREAKDOWN", intColCnt, intRow), _
                                       strACCDAY, _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function



#End Region
End Class
