'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 엔티티 클래스 메이커 - 한화 S&C
'시스템구분 : 솔루션명/시스템명/Server Entity Class
'실행  환경 : GAC(Global Assembly Cache)
'프로그램명 : cePD_TRANS_DTL.vb ( PD_TRANS_DTL Entity 처리 Class)
'기      능 : PD_TRANS_DTL Entity에 대해Insert/Update/Delete/Select를 처리
'             - 부모엔티티 객체인 SCGLUtil.ceEntity를 상속
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2007-12-06 오전 5:08:22 By Making Entity Bean
'****************************************************************************************
Imports SCGLUtil.cbSCGLUtil     '공통 유틸리티 객체
Imports SCGLUtil.cbSCGLErr      '공통 오류처리 객체
Imports SCGLEntity              '엔티티 객체의 부모 객체

Public Class cePD_TRANS_DTL
    Inherits ceEntity

#Region "GROUP BLOCk : 전역 또는 모듈레벨의 변수/상수 선언"
    Private Const CLASS_NAME = "cePD_TRANS_DTL"    '자신의 클래스명
#End Region

#Region "GROUP BLOCk : 외부에 공개 Method"
#Region "SQL Insert/Update/Delete/Select"
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Insert 처리
    '*****************************************************************
    Public Function InsertDo(ByVal strTRANSYEARMON As String, _
            ByVal dblTRANSNO As Double, _
            ByVal dblSEQ As Double, _
            ByVal strJOBNO As String, _
            ByVal strJOBNAME As String, _
            ByVal dblJOBNOSEQ As Double, _
            Optional ByVal dbINCJOBNOSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strINCJOBNO As String = OPTIONAL_STR, _
            Optional ByVal strPREESTNO As String = OPTIONAL_STR, _
            Optional ByVal strCLIENTCODE As String = OPTIONAL_STR, _
            Optional ByVal strTIMCODE As String = OPTIONAL_STR, _
            Optional ByVal strSUBSEQ As String = OPTIONAL_STR, _
            Optional ByVal strDEPT_CD As String = OPTIONAL_STR, _
            Optional ByVal strDEMANDDAY As String = OPTIONAL_STR, _
            Optional ByVal strPRINTDAY As String = OPTIONAL_STR, _
            Optional ByVal dblAMT As Double = OPTIONAL_NUM, _
            Optional ByVal dblADJAMT As Double = OPTIONAL_NUM, _
            Optional ByVal dblBALANCE As Double = OPTIONAL_NUM, _
            Optional ByVal dblVAT As Double = OPTIONAL_NUM, _
            Optional ByVal strTAXYEARMON As String = OPTIONAL_STR, _
            Optional ByVal dblTAXNO As Double = OPTIONAL_NUM, _
            Optional ByVal dblTAXSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strDEMANDFLAG As String = OPTIONAL_STR, _
            Optional ByVal dblCONFIRMFLAG As Double = OPTIONAL_NUM, _
            Optional ByVal dblPRINT_SEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strMEMO As String = OPTIONAL_STR, _
            Optional ByVal strTAXCODE As String = OPTIONAL_STR, _
            Optional ByVal strATTR01 As String = OPTIONAL_STR, _
            Optional ByVal strATTR02 As String = OPTIONAL_STR, _
            Optional ByVal strATTR03 As String = OPTIONAL_STR, _
            Optional ByVal strATTR04 As String = OPTIONAL_STR, _
            Optional ByVal strATTR05 As String = OPTIONAL_STR, _
            Optional ByVal dblATTR06 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR07 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR08 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR09 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR10 As Double = OPTIONAL_NUM)

        Dim strSQL As String
        Dim strFields As New System.Text.StringBuilder
        Dim strValues As New System.Text.StringBuilder
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now

        Try
            BuildNameValues(",", "TRANSYEARMON", strTRANSYEARMON, strFields, strValues)
            BuildNameValues(",", "TRANSNO", dblTRANSNO, strFields, strValues)
            BuildNameValues(",", "SEQ", dblSEQ, strFields, strValues)
            BuildNameValues(",", "JOBNO", strJOBNO, strFields, strValues)
            BuildNameValues(",", "JOBNAME", strJOBNAME, strFields, strValues)
            BuildNameValues(",", "JOBNOSEQ", dblJOBNOSEQ, strFields, strValues)
            BuildNameValues(",", "INCJOBNOSEQ", dbINCJOBNOSEQ, strFields, strValues)
            BuildNameValues(",", "INCJOBNO", strINCJOBNO, strFields, strValues)
            BuildNameValues(",", "PREESTNO", strPREESTNO, strFields, strValues)
            BuildNameValues(",", "CLIENTCODE", strCLIENTCODE, strFields, strValues)
            BuildNameValues(",", "TIMCODE", strTIMCODE, strFields, strValues)
            BuildNameValues(",", "SUBSEQ", strSUBSEQ, strFields, strValues)
            BuildNameValues(",", "DEPT_CD", strDEPT_CD, strFields, strValues)
            BuildNameValues(",", "DEMANDDAY", strDEMANDDAY, strFields, strValues)
            BuildNameValues(",", "PRINTDAY", strPRINTDAY, strFields, strValues)
            BuildNameValues(",", "AMT", dblAMT, strFields, strValues)
            BuildNameValues(",", "ADJAMT", dblADJAMT, strFields, strValues)
            BuildNameValues(",", "BALANCE", dblBALANCE, strFields, strValues)
            BuildNameValues(",", "VAT", dblVAT, strFields, strValues)
            BuildNameValues(",", "TAXYEARMON", strTAXYEARMON, strFields, strValues)
            BuildNameValues(",", "TAXNO", dblTAXNO, strFields, strValues)
            BuildNameValues(",", "TAXSEQ", dblTAXSEQ, strFields, strValues)
            BuildNameValues(",", "DEMANDFLAG", strDEMANDFLAG, strFields, strValues)
            BuildNameValues(",", "CONFIRMFLAG", dblCONFIRMFLAG, strFields, strValues)
            BuildNameValues(",", "PRINT_SEQ", dblPRINT_SEQ, strFields, strValues)
            BuildNameValues(",", "MEMO", strMEMO, strFields, strValues)
            BuildNameValues(",", "TAXCODE", strTAXCODE, strFields, strValues)
            BuildNameValues(",", "ATTR01", strATTR01, strFields, strValues)
            BuildNameValues(",", "ATTR02", strATTR02, strFields, strValues)
            BuildNameValues(",", "ATTR03", strATTR03, strFields, strValues)
            BuildNameValues(",", "ATTR04", strATTR04, strFields, strValues)
            BuildNameValues(",", "ATTR05", strATTR05, strFields, strValues)
            BuildNameValues(",", "ATTR06", dblATTR06, strFields, strValues)
            BuildNameValues(",", "ATTR07", dblATTR07, strFields, strValues)
            BuildNameValues(",", "ATTR08", dblATTR08, strFields, strValues)
            BuildNameValues(",", "ATTR09", dblATTR09, strFields, strValues)
            BuildNameValues(",", "ATTR10", dblATTR10, strFields, strValues)
            BuildNameValues(",", "CUSER", mobjSCGLConfig.WRKUSR, strFields, strValues)
            BuildNameValues(",", "CDATE", strNOW, strFields, strValues)
            BuildNameValues(",", "UUSER", mobjSCGLConfig.WRKUSR, strFields, strValues)
            BuildNameValues(",", "UDATE", strNOW, strFields, strValues)
            strSQL = String.Format("INSERT INTO {0} ({1}) VALUES({2})", EntityName, strFields, strValues)

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".InsertDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Update 처리
    '참고 : Key 조건과 Value Field가선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function UpdateDo(Optional ByVal strTRANSYEARMON As String = OPTIONAL_STR, _
            Optional ByVal dblTRANSNO As Double = OPTIONAL_NUM, _
            Optional ByVal dblSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strJOBNO As String = OPTIONAL_STR, _
            Optional ByVal strJOBNAME As String = OPTIONAL_STR, _
            Optional ByVal dblJOBNOSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal dbINCJOBNOSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strINCJOBNO As String = OPTIONAL_STR, _
            Optional ByVal strPREESTNO As String = OPTIONAL_STR, _
            Optional ByVal strCLIENTCODE As String = OPTIONAL_STR, _
            Optional ByVal strTIMCODE As String = OPTIONAL_STR, _
            Optional ByVal strSUBSEQ As String = OPTIONAL_STR, _
            Optional ByVal strDEPT_CD As String = OPTIONAL_STR, _
            Optional ByVal strDEMANDDAY As String = OPTIONAL_STR, _
            Optional ByVal strPRINTDAY As String = OPTIONAL_STR, _
            Optional ByVal dblAMT As Double = OPTIONAL_NUM, _
            Optional ByVal dblADJAMT As Double = OPTIONAL_NUM, _
            Optional ByVal dblBALANCE As Double = OPTIONAL_NUM, _
            Optional ByVal strTAXYEARMON As String = OPTIONAL_STR, _
            Optional ByVal dblTAXNO As Double = OPTIONAL_NUM, _
            Optional ByVal dblTAXSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strDEMANDFLAG As String = OPTIONAL_STR, _
            Optional ByVal dblCONFIRMFLAG As Double = OPTIONAL_NUM, _
            Optional ByVal dblPRINT_SEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strMEMO As String = OPTIONAL_STR, _
            Optional ByVal strTAXCODE As String = OPTIONAL_STR, _
            Optional ByVal strATTR01 As String = OPTIONAL_STR, _
            Optional ByVal strATTR02 As String = OPTIONAL_STR, _
            Optional ByVal strATTR03 As String = OPTIONAL_STR, _
            Optional ByVal strATTR04 As String = OPTIONAL_STR, _
            Optional ByVal strATTR05 As String = OPTIONAL_STR, _
            Optional ByVal dblATTR06 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR07 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR08 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR09 As Double = OPTIONAL_NUM, _
            Optional ByVal dblATTR10 As Double = OPTIONAL_NUM) As Integer

        Dim strSQL As String
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now

        Try
            strSQL = String.Format("UPDATE {0} SET {1} WHERE {2}", EntityName, _
                     BuildFields(",", _
                        GetFieldNameValue("JOBNOSEQ", dblJOBNOSEQ), _
                        GetFieldNameValue("JOBNO", strJOBNO), _
                        GetFieldNameValue("INCJOBNOSEQ", dbINCJOBNOSEQ), _
                        GetFieldNameValue("INCJOBNO", strINCJOBNO), _
                        GetFieldNameValue("AMT", dblAMT), _
                        GetFieldNameValue("ADJAMT", dblADJAMT), _
                        GetFieldNameValue("BALANCE", dblBALANCE), _
                        GetFieldNameValue("TAXYEARMON", strTAXYEARMON), _
                        GetFieldNameValue("TAXNO", dblTAXNO), _
                        GetFieldNameValue("TAXSEQ", dblTAXSEQ), _
                        GetFieldNameValue("MEMO", strMEMO), _
                        GetFieldNameValue("SUBSEQ", strSUBSEQ), _
                        GetFieldNameValue("JOBNAME", strJOBNAME), _
                        GetFieldNameValue("PREESTNO", strPREESTNO), _
                        GetFieldNameValue("TIMCODE", strTIMCODE), _
                        GetFieldNameValue("TAXCODE", strTAXCODE), _
                        GetFieldNameValue("ATTR01", strATTR01), _
                        GetFieldNameValue("ATTR02", strATTR02), _
                        GetFieldNameValue("ATTR03", strATTR03), _
                        GetFieldNameValue("ATTR04", strATTR04), _
                        GetFieldNameValue("ATTR05", strATTR05), _
                        GetFieldNameValue("ATTR06", dblATTR06), _
                        GetFieldNameValue("ATTR07", dblATTR07), _
                        GetFieldNameValue("ATTR08", dblATTR08), _
                        GetFieldNameValue("ATTR09", dblATTR09), _
                        GetFieldNameValue("ATTR10", dblATTR10), _
                        GetFieldNameValue("UUSER", mobjSCGLConfig.WRKUSR), _
                        GetFieldNameValue("UDATE", strNOW)), _
                     BuildFields("AND", _
                        GetFieldNameValue("TRANSYEARMON", strTRANSYEARMON), GetFieldNameValue("TRANSNO", dblTRANSNO), GetFieldNameValue("SEQ", dblSEQ)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".UpdateDo")
        End Try
    End Function

    Public Function ConfirmUpdate(ByVal strTRANSYEARMON As String, _
                                  ByVal strTRANSNO As Double) As Integer
        Dim strSQL
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now
        Dim strUSER As String
        strUSER = mobjSCGLConfig.WRKUSR
        Try
            strSQL = "UPDATE PD_TRANS_DTL "
            strSQL = strSQL & " SET CONFIRMFLAG = 1, "
            strSQL = strSQL & " ATTR04 = '" & strUSER & "', "
            strSQL = strSQL & " ATTR05 =  '" & strNOW & "'"
            strSQL = strSQL & " WHERE TRANSYEARMON = '" & strTRANSYEARMON & "' AND TRANSNO = " & strTRANSNO
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".ConfirmUpdate")
        End Try
    End Function
    Public Function ConfirmUpdateCancel(ByVal strTRANSYEARMON As String, _
                                  ByVal strTRANSNO As Double) As Integer
        Dim strSQL
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now
        Dim strUSER As String
        strUSER = mobjSCGLConfig.WRKUSR
        Try
            strSQL = "UPDATE PD_TRANS_DTL "
            strSQL = strSQL & " SET CONFIRMFLAG = null, "
            strSQL = strSQL & " ATTR04 = '" & strUSER & "', "
            strSQL = strSQL & " ATTR05 =  '" & strNOW & "'"
            strSQL = strSQL & " WHERE TRANSYEARMON = '" & strTRANSYEARMON & "' AND TRANSNO = " & strTRANSNO
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".ConfirmUpdateCancel")
        End Try
    End Function


    Public Function TaxUpdateDo(Optional ByVal strTRANSYEARMON As String = OPTIONAL_STR, _
                                Optional ByVal dblTRANSNO As Double = OPTIONAL_NUM, _
                                Optional ByVal dblSEQ As Double = OPTIONAL_NUM, _
                                Optional ByVal strTAXYEARMON As String = OPTIONAL_STR, _
                                Optional ByVal dblTAXNO As Double = OPTIONAL_NUM, _
                                Optional ByVal dblTAXSEQ As Double = OPTIONAL_NUM) As Integer

        Dim strSQL As String

        Try
            strSQL = String.Format("UPDATE {0} SET {1} WHERE {2}", EntityName, _
                     BuildFields(",", _
                        GetFieldNameValue("TAXYEARMON", strTAXYEARMON), _
                        GetFieldNameValue("TAXNO", dblTAXNO), _
                        GetFieldNameValue("TAXSEQ", dblTAXSEQ)), _
                     BuildFields("AND", _
                        GetFieldNameValue("TRANSYEARMON", strTRANSYEARMON), GetFieldNameValue("TRANSNO", dblTRANSNO), GetFieldNameValue("SEQ", dblSEQ)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".UpdateDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Delete 처리
    '참고 : Key 조건이 선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function DeleteDo(Optional ByVal strTRANSYEARMON As String = OPTIONAL_STR, Optional ByVal dblTRANSNO As Double = OPTIONAL_NUM) As Integer
        Dim strSQL As String

        Try
            strSQL = String.Format("DELETE FROM {0} WHERE {1}", EntityName, _
                     BuildFields("AND", _
                                   GetFieldNameValue("TRANSYEARMON", strTRANSYEARMON), GetFieldNameValue("TRANSNO", dblTRANSNO)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".DeleteDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Select 처리
    '*****************************************************************
    Public Function SelectDo(ByRef intRowCnt As Integer, ByRef intColCnt As Integer, _
                            Optional ByVal strTRANSYEARMON As String = OPTIONAL_STR, _
                            Optional ByVal dblTRANSNO As Double = OPTIONAL_NUM, _
                            Optional ByVal dblSEQ As Double = OPTIONAL_NUM, _
                            Optional ByVal strSelFields As String = "*", _
                            Optional ByVal intLimitRow As Integer = 0, _
                            Optional ByVal intSelMode As Integer = SELMODE.ARR, _
                            Optional ByVal blnBindingHeader As Boolean = False) As Object
        Dim strSQL As String
        Dim strKeyFields As String

        Try
            strKeyFields = BuildFields("AND", _
                                    GetFieldNameValue("TRANSYEARMON", strTRANSYEARMON), GetFieldNameValue("TRANSNO", dblTRANSNO), GetFieldNameValue("SEQ", dblSEQ))

            Return SelectDoExt(intRowCnt, intColCnt, strSelFields, strKeyFields, intLimitRow, intSelMode, blnBindingHeader)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".SeleteDo")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 거래명세서 디테일에 세금계산서 번호 부여
    '참고 : Key 조건이 선택적이 아님
    '*****************************************************************
    'UpdateRtn_SUMM(strTAXYEARMON, strTAXNO, strSUMM)
    Public Function Update_TaxNo(ByVal strTRANSYEARMON As String, _
                                 ByVal lngTRANSNO As Double, _
                                 ByVal lngSEQ As Double, _
                                 ByVal strTAXYEARMON As String, _
                                 ByVal intTAXNO As Double, _
                                 ByVal lngTAXSEQ As Double) As Integer
        'strTRANSYEARMON, lngTRANSNO, lngSEQ, strTAXYEARMON, intTAXNO
        Dim strSQL As String

        Try
            strSQL = "UPDATE PD_TRANS_DTL SET TAXYEARMON = '" & strTAXYEARMON & "',TAXNO = " & intTAXNO & ",TAXSEQ =" & lngTAXSEQ
            strSQL = strSQL & " WHERE TRANSYEARMON = '" & strTRANSYEARMON & "' AND TRANSNO = " & lngTRANSNO & " AND SEQ =" & lngSEQ
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Update_TaxNo")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 거래명세서 디테일에 세금계산서 삭제시 번호 업데이트
    '참고 : Key 조건이 선택적이 아님
    '*****************************************************************
    'UpdateRtn_SUMM(strTAXYEARMON, strTAXNO, strSUMM)
    Public Function TruTaxDeleteUpdateDo(ByVal strTAXYEARMON As String, _
                                         ByVal intTAXNO As Double) As Integer
        'strTAXYEARMON, intTAXNO
        Dim strSQL As String

        Try
            strSQL = "UPDATE PD_TRANS_DTL SET TAXYEARMON = '',TAXNO = NULL,TAXSEQ = NULL"
            strSQL = strSQL & " WHERE TAXYEARMON = '" & strTAXYEARMON & "' AND TAXNO = " & intTAXNO
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".TaxDeleteUpdateDo")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 세금계산서 발행으로 인한 제작관리번호의 플레그 변경 (청구PF03)
    '참고 : Key 조건이 선택적이 아님
    '*****************************************************************
    'UpdateRtn_SUMM(strTAXYEARMON, strTAXNO, strSUMM)
    Public Function Update_EndFlag(ByVal strJOBNO As String, _
                                   ByVal strDEMANDDAY As String) As Integer
        'strTAXYEARMON, intTAXNO
        Dim strSQL As String

        Try
            strSQL = "UPDATE PD_JOBNO SET ENDFLAG  = 'PF03',DEMANDYEARMON = '" & strDEMANDDAY & "'"
            strSQL = strSQL & " WHERE JOBNO = '" & strJOBNO & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Update_EndFlag")
        End Try
    End Function


    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 세금계산서 발행으로 인한 제작관리번호의 플레그 변경 (청구PF03)
    '참고 : Key 조건이 선택적이 아님
    '*****************************************************************
    'UpdateRtn_SUMM(strTAXYEARMON, strTAXNO, strSUMM)
    Public Function Update_BACK_EndFlag(ByVal strJOBNO As String, _
                                        ByVal strDEMANDDAY As String) As Integer
        'strTAXYEARMON, intTAXNO
        Dim strSQL As String

        Try
            strSQL = "UPDATE PD_JOBNO SET ENDFLAG  = 'PF02',DEMANDYEARMON = '" & strDEMANDDAY & "'"
            strSQL = strSQL & " WHERE JOBNO = '" & strJOBNO & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Update_EndFlag")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 거래명세서 완료건에 대하여 부가세 수정
    '참고 : Key 조건이 선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************

    Public Function Update_Vat(ByVal strTRANSYEARMON, ByVal strTRANSNO, ByVal intTRANSSEQ, ByVal lngVAT) As Integer
        Dim strSQL As String

        Try
            strSQL = " UPDATE PD_TRANS_DTL "
            strSQL = strSQL & " SET VAT = " & lngVAT
            strSQL = strSQL & " WHERE TRANSYEARMON = '" & strTRANSYEARMON & "' "
            strSQL = strSQL & " AND TRANSNO = " & strTRANSNO
            strSQL = strSQL & " AND SEQ = " & intTRANSSEQ

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Update_Vat")
        End Try
    End Function
#End Region

#Region "객체 생성/해제"
    '*****************************************************************
    '입력 : strInfoXML = 공통기본정보에 대한 XML
    'objSCGLSql = DB 처리 객체 인스턴싱 변수    '반환 : 없음
    '기능 : DB 처리를 위한 공통기본정보 설정
    '*****************************************************************
    Public Sub New(Optional ByVal objSCGLConfig As SCGLUtil.cbSCGLConfig = Nothing, Optional ByVal strInfoXML As String = "")
        MyBase.SetConfig(objSCGLConfig, strInfoXML)
        MyBase.EntityName = "PD_TRANS_DTL"     'Entity Name 설정
    End Sub

    '해제 기능은 Base Class에서 구현되어 있음
#End Region
#End Region
End Class

'------->>엔티티 INSERT/UPDATE 샘플입니다. 반드시 자신의 환경에 맞추어서 변경하시기 바랍니다.
'=========================================================
'       'vntData Array를 사용할 때 Insert/Update 입니다.
'=========================================================
'        Dim intRtn As Integer
'        intRtn = mobjcePD_TRANS_DTL.InsertDo( _
'                                       GetElement(vntData,"TRANSYEARMON", intColCnt, intRow), _
'                                       GetElement(vntData,"TRANSNO", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"SEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"JOBNOSEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"JOBNO", intColCnt, intRow), _
'                                       GetElement(vntData,"INCJOBNOSEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"INCJOBNO", intColCnt, intRow), _
'                                       GetElement(vntData,"AMT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ADJAMT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"BALANCE", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TAXYEARMON", intColCnt, intRow), _
'                                       GetElement(vntData,"TAXNO", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TAXSEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"MEMO", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR01", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR02", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR03", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR04", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR05", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR06", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR07", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR08", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR09", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR10", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"CUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"CDATE", intColCnt, intRow, NULL_DTM, true ), _
'                                       GetElement(vntData,"UUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"UDATE", intColCnt, intRow, NULL_DTM, true ) _
'                                       )
'        Return intRtn

'        Dim intRtn As Integer
'        intRtn = mobjcePD_TRANS_DTL.UpdateDo( _
'                                       GetElement(vntData,"TRANSYEARMON", intColCnt, intRow), _
'                                       GetElement(vntData,"TRANSNO", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"SEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"JOBNOSEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"JOBNO", intColCnt, intRow), _
'                                       GetElement(vntData,"INCJOBNOSEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"INCJOBNO", intColCnt, intRow), _
'                                       GetElement(vntData,"AMT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ADJAMT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"BALANCE", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TAXYEARMON", intColCnt, intRow), _
'                                       GetElement(vntData,"TAXNO", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TAXSEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"MEMO", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR01", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR02", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR03", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR04", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR05", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR06", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR07", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR08", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR09", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR10", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"CUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"CDATE", intColCnt, intRow, NULL_DTM, true ), _
'                                       GetElement(vntData,"UUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"UDATE", intColCnt, intRow, NULL_DTM, true ) _
'                                       )
'        Return intRtn


'=========================================================
'       'XmlData 를 사용할 때 Insert/Update 입니다.
'=========================================================
'        Dim intRtn As Integer
'        intRtn = mobjcePD_TRANS_DTL.InsertDo( _
'                                       XMLGetElement(xmlRoot,"TRANSYEARMON"), _
'                                       XMLGetElement(xmlRoot,"TRANSNO", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"SEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"JOBNOSEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"JOBNO"), _
'                                       XMLGetElement(xmlRoot,"INCJOBNOSEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"INCJOBNO"), _
'                                       XMLGetElement(xmlRoot,"AMT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ADJAMT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"BALANCE", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TAXYEARMON"), _
'                                       XMLGetElement(xmlRoot,"TAXNO", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TAXSEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"MEMO"), _
'                                       XMLGetElement(xmlRoot,"ATTR01"), _
'                                       XMLGetElement(xmlRoot,"ATTR02"), _
'                                       XMLGetElement(xmlRoot,"ATTR03"), _
'                                       XMLGetElement(xmlRoot,"ATTR04"), _
'                                       XMLGetElement(xmlRoot,"ATTR05"), _
'                                       XMLGetElement(xmlRoot,"ATTR06", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR07", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR08", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR09", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR10", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"CUSER"), _
'                                       XMLGetElement(xmlRoot,"CDATE", NULL_DTM, true ), _
'                                       XMLGetElement(xmlRoot,"UUSER"), _
'                                       XMLGetElement(xmlRoot,"UDATE", NULL_DTM, true ) _
'                                       )
'        Return intRtn

'        Dim intRtn As Integer
'        intRtn = mobjcePD_TRANS_DTL.UpdateDo( _
'                                       XMLGetElement(xmlRoot,"TRANSYEARMON"), _
'                                       XMLGetElement(xmlRoot,"TRANSNO", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"SEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"JOBNOSEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"JOBNO"), _
'                                       XMLGetElement(xmlRoot,"INCJOBNOSEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"INCJOBNO"), _
'                                       XMLGetElement(xmlRoot,"AMT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ADJAMT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"BALANCE", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TAXYEARMON"), _
'                                       XMLGetElement(xmlRoot,"TAXNO", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TAXSEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"MEMO"), _
'                                       XMLGetElement(xmlRoot,"ATTR01"), _
'                                       XMLGetElement(xmlRoot,"ATTR02"), _
'                                       XMLGetElement(xmlRoot,"ATTR03"), _
'                                       XMLGetElement(xmlRoot,"ATTR04"), _
'                                       XMLGetElement(xmlRoot,"ATTR05"), _
'                                       XMLGetElement(xmlRoot,"ATTR06", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR07", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR08", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR09", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR10", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"CUSER"), _
'                                       XMLGetElement(xmlRoot,"CDATE", NULL_DTM, true ), _
'                                       XMLGetElement(xmlRoot,"UUSER"), _
'                                       XMLGetElement(xmlRoot,"UDATE", NULL_DTM, true ) _
'                                       )
'        Return intRtn


