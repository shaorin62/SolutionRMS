'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 엔티티 클래스 메이커 - 한화 S&C
'시스템구분 : 솔루션명/시스템명/Server Entity Class
'실행  환경 : GAC(Global Assembly Cache)
'프로그램명 : ceMD_ELECTRIC_MEDIUM.vb ( MD_ELECTRIC_MEDIUM Entity 처리 Class)
'기      능 : MD_ELECTRIC_MEDIUM Entity에 대해Insert/Update/Delete/Select를 처리
'             - 부모엔티티 객체인 SCGLUtil.ceEntity를 상속
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2007-12-14 오후 5:38:41 By Making Entity Bean
'****************************************************************************************
Imports SCGLUtil.cbSCGLUtil     '공통 유틸리티 객체
Imports SCGLUtil.cbSCGLErr      '공통 오류처리 객체
Imports SCGLEntity              '엔티티 객체의 부모 객체

Public Class ceMD_ELECTRIC_MEDIUM
    Inherits ceEntity

#Region "GROUP BLOCk : 전역 또는 모듈레벨의 변수/상수 선언"
    Private Const CLASS_NAME = "ceMD_ELECTRIC_MEDIUM"    '자신의 클래스명
#End Region

#Region "GROUP BLOCk : 외부에 공개 Method"
#Region "SQL Insert/Update/Delete/Select"
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Insert 처리
    '*****************************************************************
    Public Function InsertDo(ByVal strYEARMON As String, _
                    ByVal dblSEQ As Double, _
                    Optional ByVal strDEMANDDAY As String = OPTIONAL_STR, _
                    Optional ByVal strCLIENTCODE As String = OPTIONAL_STR, _
                    Optional ByVal strCLIENTSUBCODE As String = OPTIONAL_STR, _
                    Optional ByVal strTIMCODE As String = OPTIONAL_STR, _
                    Optional ByVal strREAL_MED_CODE As String = OPTIONAL_STR, _
                    Optional ByVal strMEDCODE As String = OPTIONAL_STR, _
                    Optional ByVal strSUBSEQ As String = OPTIONAL_STR, _
                    Optional ByVal strDEPT_CD As String = OPTIONAL_STR, _
                    Optional ByVal strMEDGUBUN As String = OPTIONAL_STR, _
                    Optional ByVal strREGIONGUBUN As String = OPTIONAL_STR, _
                    Optional ByVal strSTD As String = OPTIONAL_STR, _
                    Optional ByVal strEXCLIENTCODE As String = OPTIONAL_STR, _
                    Optional ByVal strMATTERCODE As String = OPTIONAL_STR, _
                    Optional ByVal strMATTERNAME As String = OPTIONAL_STR, _
                    Optional ByVal strINPUT_MEDCODE As String = OPTIONAL_STR, _
                    Optional ByVal strINPUT_MEDNAME As String = OPTIONAL_STR, _
                    Optional ByVal strINPUT_MEDFLAG As String = OPTIONAL_STR, _
                    Optional ByVal strINPUT_AREAFLAG As String = OPTIONAL_STR, _
                    Optional ByVal strPROGRAM As String = OPTIONAL_STR, _
                    Optional ByVal strBRDMON As String = OPTIONAL_STR, _
                    Optional ByVal strBRDTUE As String = OPTIONAL_STR, _
                    Optional ByVal strBRDWED As String = OPTIONAL_STR, _
                    Optional ByVal strBRDTHU As String = OPTIONAL_STR, _
                    Optional ByVal strBRDFRI As String = OPTIONAL_STR, _
                    Optional ByVal strBRDSAT As String = OPTIONAL_STR, _
                    Optional ByVal strBRDSUN As String = OPTIONAL_STR, _
                    Optional ByVal strINPUT_WEEK As String = OPTIONAL_STR, _
                    Optional ByVal strTYPHOUR As String = OPTIONAL_STR, _
                    Optional ByVal strBRDSTTIME As String = OPTIONAL_STR, _
                    Optional ByVal strBRDEDTIME As String = OPTIONAL_STR, _
                    Optional ByVal strROLLSTDATE As String = OPTIONAL_STR, _
                    Optional ByVal strROLLEDDATE As String = OPTIONAL_STR, _
                    Optional ByVal strTBRDSTDATE As String = OPTIONAL_STR, _
                    Optional ByVal strTBRDEDDATE As String = OPTIONAL_STR, _
                    Optional ByVal dblCMLAN As Double = OPTIONAL_NUM, _
                    Optional ByVal dblCNT As Double = OPTIONAL_NUM, _
                    Optional ByVal dblPRICE As Double = OPTIONAL_NUM, _
                    Optional ByVal dblAMT As Double = OPTIONAL_NUM, _
                    Optional ByVal strBRDDIV As String = OPTIONAL_STR, _
                    Optional ByVal strADSTOCFLAG As String = OPTIONAL_STR, _
                    Optional ByVal strINPUT_AREAFLAGNAME As String = OPTIONAL_STR, _
                    Optional ByVal strADLOCALFLAG As String = OPTIONAL_STR, _
                    Optional ByVal strINPUT_CLIENTCODE As String = OPTIONAL_STR, _
                    Optional ByVal dblCOMMI_RATE As Double = OPTIONAL_NUM, _
                    Optional ByVal dblCOMMISSION As Double = OPTIONAL_NUM, _
                    Optional ByVal strGFLAG As String = OPTIONAL_STR, _
                    Optional ByVal strVOCH_TYPE As String = OPTIONAL_STR, _
                    Optional ByVal strTRU_TAX_FLAG As String = OPTIONAL_STR, _
                    Optional ByVal strCOMMI_TAX_FLAG As String = OPTIONAL_STR, _
                    Optional ByVal strTRU_TRANS_NO As String = OPTIONAL_STR, _
                    Optional ByVal strTRU_TAX_NO As String = OPTIONAL_STR, _
                    Optional ByVal strTRU_VOCH_NO As String = OPTIONAL_STR, _
                    Optional ByVal strCOMMI_TRANS_NO As String = OPTIONAL_STR, _
                    Optional ByVal strCOMMI_TAX_NO As String = OPTIONAL_STR, _
                    Optional ByVal strCOMMI_VOCH_NO As String = OPTIONAL_STR, _
                    Optional ByVal strMEMO As String = OPTIONAL_STR, _
                    Optional ByVal strSPONSOR As String = OPTIONAL_STR, _
                    Optional ByVal strCONFIRMFLAG As String = OPTIONAL_STR, _
                    Optional ByVal strATTR01 As String = OPTIONAL_STR, _
                    Optional ByVal strATTR02 As String = OPTIONAL_STR, _
                    Optional ByVal strATTR03 As String = OPTIONAL_STR, _
                    Optional ByVal strATTR04 As String = OPTIONAL_STR, _
                    Optional ByVal strATTR05 As String = OPTIONAL_STR, _
                    Optional ByVal dblATTR06 As Double = OPTIONAL_NUM, _
                    Optional ByVal dblATTR07 As Double = OPTIONAL_NUM, _
                    Optional ByVal dblATTR08 As Double = OPTIONAL_NUM, _
                    Optional ByVal dblATTR09 As Double = OPTIONAL_NUM, _
                    Optional ByVal dblATTR10 As Double = OPTIONAL_NUM)

        Dim strSQL As String
        Dim strFields As New System.Text.StringBuilder
        Dim strValues As New System.Text.StringBuilder
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now
        Try

            BuildNameValues(",", "YEARMON", strYEARMON, strFields, strValues)
            BuildNameValues(",", "SEQ", dblSEQ, strFields, strValues)
            BuildNameValues(",", "DEMANDDAY", strDEMANDDAY, strFields, strValues)
            BuildNameValues(",", "CLIENTCODE", strCLIENTCODE, strFields, strValues)
            BuildNameValues(",", "CLIENTSUBCODE", strCLIENTSUBCODE, strFields, strValues)
            BuildNameValues(",", "TIMCODE", strTIMCODE, strFields, strValues)
            BuildNameValues(",", "REAL_MED_CODE", strREAL_MED_CODE, strFields, strValues)
            BuildNameValues(",", "MEDCODE", strMEDCODE, strFields, strValues)
            BuildNameValues(",", "SUBSEQ", strSUBSEQ, strFields, strValues)
            BuildNameValues(",", "DEPT_CD", strDEPT_CD, strFields, strValues)
            BuildNameValues(",", "MEDGUBUN", strMEDGUBUN, strFields, strValues)
            BuildNameValues(",", "REGIONGUBUN", strREGIONGUBUN, strFields, strValues)
            BuildNameValues(",", "STD", strSTD, strFields, strValues)
            BuildNameValues(",", "EXCLIENTCODE", strEXCLIENTCODE, strFields, strValues)
            BuildNameValues(",", "MATTERCODE", strMATTERCODE, strFields, strValues)
            BuildNameValues(",", "MATTERNAME", strMATTERNAME, strFields, strValues)
            BuildNameValues(",", "INPUT_MEDCODE", strINPUT_MEDCODE, strFields, strValues)
            BuildNameValues(",", "INPUT_MEDNAME", strINPUT_MEDNAME, strFields, strValues)
            BuildNameValues(",", "INPUT_MEDFLAG", strINPUT_MEDFLAG, strFields, strValues)
            BuildNameValues(",", "INPUT_AREAFLAG", strINPUT_AREAFLAG, strFields, strValues)
            BuildNameValues(",", "PROGRAM", strPROGRAM, strFields, strValues)
            BuildNameValues(",", "BRDMON", strBRDMON, strFields, strValues)
            BuildNameValues(",", "BRDTUE", strBRDTUE, strFields, strValues)
            BuildNameValues(",", "BRDWED", strBRDWED, strFields, strValues)
            BuildNameValues(",", "BRDTHU", strBRDTHU, strFields, strValues)
            BuildNameValues(",", "BRDFRI", strBRDFRI, strFields, strValues)
            BuildNameValues(",", "BRDSAT", strBRDSAT, strFields, strValues)
            BuildNameValues(",", "BRDSUN", strBRDSUN, strFields, strValues)
            BuildNameValues(",", "INPUT_WEEK", strINPUT_WEEK, strFields, strValues)
            BuildNameValues(",", "TYPHOUR", strTYPHOUR, strFields, strValues)
            BuildNameValues(",", "BRDSTTIME", strBRDSTTIME, strFields, strValues)
            BuildNameValues(",", "BRDEDTIME", strBRDEDTIME, strFields, strValues)
            BuildNameValues(",", "ROLLSTDATE", strROLLSTDATE, strFields, strValues)
            BuildNameValues(",", "ROLLEDDATE", strROLLEDDATE, strFields, strValues)
            BuildNameValues(",", "TBRDSTDATE", strTBRDSTDATE, strFields, strValues)
            BuildNameValues(",", "TBRDEDDATE", strTBRDEDDATE, strFields, strValues)
            BuildNameValues(",", "CMLAN", dblCMLAN, strFields, strValues)
            BuildNameValues(",", "CNT", dblCNT, strFields, strValues)
            BuildNameValues(",", "PRICE", dblPRICE, strFields, strValues)
            BuildNameValues(",", "AMT", dblAMT, strFields, strValues)
            BuildNameValues(",", "BRDDIV", strBRDDIV, strFields, strValues)
            BuildNameValues(",", "ADSTOCFLAG", strADSTOCFLAG, strFields, strValues)
            BuildNameValues(",", "INPUT_AREAFLAGNAME", strINPUT_AREAFLAGNAME, strFields, strValues)
            BuildNameValues(",", "ADLOCALFLAG", strADLOCALFLAG, strFields, strValues)
            BuildNameValues(",", "INPUT_CLIENTCODE", strINPUT_CLIENTCODE, strFields, strValues)
            BuildNameValues(",", "COMMI_RATE", dblCOMMI_RATE, strFields, strValues)
            BuildNameValues(",", "COMMISSION", dblCOMMISSION, strFields, strValues)
            BuildNameValues(",", "GFLAG", strGFLAG, strFields, strValues)
            BuildNameValues(",", "VOCH_TYPE", strVOCH_TYPE, strFields, strValues)
            BuildNameValues(",", "TRU_TAX_FLAG", strTRU_TAX_FLAG, strFields, strValues)
            BuildNameValues(",", "COMMI_TAX_FLAG", strCOMMI_TAX_FLAG, strFields, strValues)
            BuildNameValues(",", "TRU_TRANS_NO", strTRU_TRANS_NO, strFields, strValues)
            BuildNameValues(",", "TRU_TAX_NO", strTRU_TAX_NO, strFields, strValues)
            BuildNameValues(",", "TRU_VOCH_NO", strTRU_VOCH_NO, strFields, strValues)
            BuildNameValues(",", "COMMI_TRANS_NO", strCOMMI_TRANS_NO, strFields, strValues)
            BuildNameValues(",", "COMMI_TAX_NO", strCOMMI_TAX_NO, strFields, strValues)
            BuildNameValues(",", "COMMI_VOCH_NO", strCOMMI_VOCH_NO, strFields, strValues)
            BuildNameValues(",", "MEMO", strMEMO, strFields, strValues)
            BuildNameValues(",", "SPONSOR", strSPONSOR, strFields, strValues)
            BuildNameValues(",", "CONFIRMFLAG", strCONFIRMFLAG, strFields, strValues)
            BuildNameValues(",", "ATTR01", strATTR01, strFields, strValues)
            BuildNameValues(",", "ATTR02", strATTR02, strFields, strValues)
            BuildNameValues(",", "ATTR03", strATTR03, strFields, strValues)
            BuildNameValues(",", "ATTR04", strATTR04, strFields, strValues)
            BuildNameValues(",", "ATTR05", strATTR05, strFields, strValues)
            BuildNameValues(",", "ATTR06", dblATTR06, strFields, strValues)
            BuildNameValues(",", "ATTR07", dblATTR07, strFields, strValues)
            BuildNameValues(",", "ATTR08", dblATTR08, strFields, strValues)
            BuildNameValues(",", "ATTR09", dblATTR09, strFields, strValues)
            BuildNameValues(",", "ATTR10", dblATTR10, strFields, strValues)
            BuildNameValues(",", "CUSER", mobjSCGLConfig.WRKUSR, strFields, strValues)
            BuildNameValues(",", "CDATE", strNOW, strFields, strValues)
            BuildNameValues(",", "UUSER", mobjSCGLConfig.WRKUSR, strFields, strValues)
            BuildNameValues(",", "UDATE", strNOW, strFields, strValues)

            strSQL = String.Format("INSERT INTO {0} ({1}) VALUES({2})", EntityName, strFields, strValues)

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".InsertDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Update 처리
    '참고 : Key 조건과 Value Field가선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function UpdateDo(Optional ByVal strYEARMON As String = OPTIONAL_STR, _
                Optional ByVal dblSEQ As Double = OPTIONAL_NUM, _
                Optional ByVal strDEMANDDAY As String = OPTIONAL_STR, _
                Optional ByVal strCLIENTCODE As String = OPTIONAL_STR, _
                Optional ByVal strCLIENTSUBCODE As String = OPTIONAL_STR, _
                Optional ByVal strTIMCODE As String = OPTIONAL_STR, _
                Optional ByVal strREAL_MED_CODE As String = OPTIONAL_STR, _
                Optional ByVal strMEDCODE As String = OPTIONAL_STR, _
                Optional ByVal strSUBSEQ As String = OPTIONAL_STR, _
                Optional ByVal strDEPT_CD As String = OPTIONAL_STR, _
                Optional ByVal strMEDGUBUN As String = OPTIONAL_STR, _
                Optional ByVal strREGIONGUBUN As String = OPTIONAL_STR, _
                Optional ByVal strSTD As String = OPTIONAL_STR, _
                Optional ByVal strEXCLIENTCODE As String = OPTIONAL_STR, _
                Optional ByVal strMATTERCODE As String = OPTIONAL_STR, _
                Optional ByVal strMATTERNAME As String = OPTIONAL_STR, _
                Optional ByVal strINPUT_MEDCODE As String = OPTIONAL_STR, _
                Optional ByVal strINPUT_MEDNAME As String = OPTIONAL_STR, _
                Optional ByVal strINPUT_MEDFLAG As String = OPTIONAL_STR, _
                Optional ByVal strINPUT_AREAFLAG As String = OPTIONAL_STR, _
                Optional ByVal strPROGRAM As String = OPTIONAL_STR, _
                Optional ByVal strBRDMON As String = OPTIONAL_STR, _
                Optional ByVal strBRDTUE As String = OPTIONAL_STR, _
                Optional ByVal strBRDWED As String = OPTIONAL_STR, _
                Optional ByVal strBRDTHU As String = OPTIONAL_STR, _
                Optional ByVal strBRDFRI As String = OPTIONAL_STR, _
                Optional ByVal strBRDSAT As String = OPTIONAL_STR, _
                Optional ByVal strBRDSUN As String = OPTIONAL_STR, _
                Optional ByVal strINPUT_WEEK As String = OPTIONAL_STR, _
                Optional ByVal strTYPHOUR As String = OPTIONAL_STR, _
                Optional ByVal strBRDSTTIME As String = OPTIONAL_STR, _
                Optional ByVal strBRDEDTIME As String = OPTIONAL_STR, _
                Optional ByVal strROLLSTDATE As String = OPTIONAL_STR, _
                Optional ByVal strROLLEDDATE As String = OPTIONAL_STR, _
                Optional ByVal strTBRDSTDATE As String = OPTIONAL_STR, _
                Optional ByVal strTBRDEDDATE As String = OPTIONAL_STR, _
                Optional ByVal dblCMLAN As Double = OPTIONAL_NUM, _
                Optional ByVal dblCNT As Double = OPTIONAL_NUM, _
                Optional ByVal dblPRICE As Double = OPTIONAL_NUM, _
                Optional ByVal dblAMT As Double = OPTIONAL_NUM, _
                Optional ByVal strBRDDIV As String = OPTIONAL_STR, _
                Optional ByVal strADSTOCFLAG As String = OPTIONAL_STR, _
                Optional ByVal strINPUT_AREAFLAGNAME As String = OPTIONAL_STR, _
                Optional ByVal strADLOCALFLAG As String = OPTIONAL_STR, _
                Optional ByVal strINPUT_CLIENTCODE As String = OPTIONAL_STR, _
                Optional ByVal dblCOMMI_RATE As Double = OPTIONAL_NUM, _
                Optional ByVal dblCOMMISSION As Double = OPTIONAL_NUM, _
                Optional ByVal strGFLAG As String = OPTIONAL_STR, _
                Optional ByVal strVOCH_TYPE As String = OPTIONAL_STR, _
                Optional ByVal strTRU_TAX_FLAG As String = OPTIONAL_STR, _
                Optional ByVal strCOMMI_TAX_FLAG As String = OPTIONAL_STR, _
                Optional ByVal strTRU_TRANS_NO As String = OPTIONAL_STR, _
                Optional ByVal strTRU_TAX_NO As String = OPTIONAL_STR, _
                Optional ByVal strTRU_VOCH_NO As String = OPTIONAL_STR, _
                Optional ByVal strCOMMI_TRANS_NO As String = OPTIONAL_STR, _
                Optional ByVal strCOMMI_TAX_NO As String = OPTIONAL_STR, _
                Optional ByVal strCOMMI_VOCH_NO As String = OPTIONAL_STR, _
                Optional ByVal strMEMO As String = OPTIONAL_STR, _
                Optional ByVal strSPONSOR As String = OPTIONAL_STR, _
                Optional ByVal strCONFIRMFLAG As String = OPTIONAL_STR, _
                Optional ByVal strATTR01 As String = OPTIONAL_STR, _
                Optional ByVal strATTR02 As String = OPTIONAL_STR, _
                Optional ByVal strATTR03 As String = OPTIONAL_STR, _
                Optional ByVal strATTR04 As String = OPTIONAL_STR, _
                Optional ByVal strATTR05 As String = OPTIONAL_STR, _
                Optional ByVal dblATTR06 As Double = OPTIONAL_NUM, _
                Optional ByVal dblATTR07 As Double = OPTIONAL_NUM, _
                Optional ByVal dblATTR08 As Double = OPTIONAL_NUM, _
                Optional ByVal dblATTR09 As Double = OPTIONAL_NUM, _
                Optional ByVal dblATTR10 As Double = OPTIONAL_NUM) As Integer

        Dim strSQL As String
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now
        Try
            strSQL = String.Format("UPDATE {0} SET {1} WHERE {2}", EntityName, _
                     BuildFields(",", _
                        GetFieldNameValue("YEARMON", strYEARMON), _
                        GetFieldNameValue("SEQ", dblSEQ), _
                        GetFieldNameValue("DEMANDDAY", strDEMANDDAY), _
                        GetFieldNameValue("CLIENTCODE", strCLIENTCODE), _
                        GetFieldNameValue("CLIENTSUBCODE", strCLIENTSUBCODE), _
                        GetFieldNameValue("TIMCODE", strTIMCODE), _
                        GetFieldNameValue("REAL_MED_CODE", strREAL_MED_CODE), _
                        GetFieldNameValue("MEDCODE", strMEDCODE), _
                        GetFieldNameValue("SUBSEQ", strSUBSEQ), _
                        GetFieldNameValue("DEPT_CD", strDEPT_CD), _
                        GetFieldNameValue("MEDGUBUN", strMEDGUBUN), _
                        GetFieldNameValue("REGIONGUBUN", strREGIONGUBUN), _
                        GetFieldNameValue("STD", strSTD), _
                        GetFieldNameValue("EXCLIENTCODE", strEXCLIENTCODE), _
                        GetFieldNameValue("MATTERCODE", strMATTERCODE), _
                        GetFieldNameValue("MATTERNAME", strMATTERNAME), _
                        GetFieldNameValue("INPUT_MEDCODE", strINPUT_MEDCODE), _
                        GetFieldNameValue("INPUT_MEDNAME", strINPUT_MEDNAME), _
                        GetFieldNameValue("INPUT_MEDFLAG", strINPUT_MEDFLAG), _
                        GetFieldNameValue("INPUT_AREAFLAG", strINPUT_AREAFLAG), _
                        GetFieldNameValue("PROGRAM", strPROGRAM), _
                        GetFieldNameValue("BRDMON", strBRDMON), _
                        GetFieldNameValue("BRDTUE", strBRDTUE), _
                        GetFieldNameValue("BRDWED", strBRDWED), _
                        GetFieldNameValue("BRDTHU", strBRDTHU), _
                        GetFieldNameValue("BRDFRI", strBRDFRI), _
                        GetFieldNameValue("BRDSAT", strBRDSAT), _
                        GetFieldNameValue("BRDSUN", strBRDSUN), _
                        GetFieldNameValue("INPUT_WEEK", strINPUT_WEEK), _
                        GetFieldNameValue("TYPHOUR", strTYPHOUR), _
                        GetFieldNameValue("BRDSTTIME", strBRDSTTIME), _
                        GetFieldNameValue("BRDEDTIME", strBRDEDTIME), _
                        GetFieldNameValue("ROLLSTDATE", strROLLSTDATE), _
                        GetFieldNameValue("ROLLEDDATE", strROLLEDDATE), _
                        GetFieldNameValue("TBRDSTDATE", strTBRDSTDATE), _
                        GetFieldNameValue("TBRDEDDATE", strTBRDEDDATE), _
                        GetFieldNameValue("CMLAN", dblCMLAN), _
                        GetFieldNameValue("CNT", dblCNT), _
                        GetFieldNameValue("PRICE", dblPRICE), _
                        GetFieldNameValue("AMT", dblAMT), _
                        GetFieldNameValue("BRDDIV", strBRDDIV), _
                        GetFieldNameValue("ADSTOCFLAG", strADSTOCFLAG), _
                        GetFieldNameValue("INPUT_AREAFLAGNAME", strINPUT_AREAFLAGNAME), _
                        GetFieldNameValue("ADLOCALFLAG", strADLOCALFLAG), _
                        GetFieldNameValue("INPUT_CLIENTCODE", strINPUT_CLIENTCODE), _
                        GetFieldNameValue("COMMI_RATE", dblCOMMI_RATE), _
                        GetFieldNameValue("COMMISSION", dblCOMMISSION), _
                        GetFieldNameValue("GFLAG", strGFLAG), _
                        GetFieldNameValue("VOCH_TYPE", strVOCH_TYPE), _
                        GetFieldNameValue("TRU_TAX_FLAG", strTRU_TAX_FLAG), _
                        GetFieldNameValue("COMMI_TAX_FLAG", strCOMMI_TAX_FLAG), _
                        GetFieldNameValue("TRU_TRANS_NO", strTRU_TRANS_NO), _
                        GetFieldNameValue("TRU_TAX_NO", strTRU_TAX_NO), _
                        GetFieldNameValue("TRU_VOCH_NO", strTRU_VOCH_NO), _
                        GetFieldNameValue("COMMI_TRANS_NO", strCOMMI_TRANS_NO), _
                        GetFieldNameValue("COMMI_TAX_NO", strCOMMI_TAX_NO), _
                        GetFieldNameValue("COMMI_VOCH_NO", strCOMMI_VOCH_NO), _
                        GetFieldNameValue("MEMO", strMEMO), _
                        GetFieldNameValue("SPONSOR", strSPONSOR), _
                        GetFieldNameValue("CONFIRMFLAG", strCONFIRMFLAG), _
                        GetFieldNameValue("ATTR01", strATTR01), _
                        GetFieldNameValue("ATTR02", strATTR02), _
                        GetFieldNameValue("ATTR03", strATTR03), _
                        GetFieldNameValue("ATTR04", strATTR04), _
                        GetFieldNameValue("ATTR05", strATTR05), _
                        GetFieldNameValue("ATTR06", dblATTR06), _
                        GetFieldNameValue("ATTR07", dblATTR07), _
                        GetFieldNameValue("ATTR08", dblATTR08), _
                        GetFieldNameValue("ATTR09", dblATTR09), _
                        GetFieldNameValue("ATTR10", dblATTR10), _
                        GetFieldNameValue("UUSER", mobjSCGLConfig.WRKUSR), _
                        GetFieldNameValue("UDATE", strNOW)), _
                     BuildFields("AND", _
                        GetFieldNameValue("YEARMON", strYEARMON), GetFieldNameValue("SEQ", dblSEQ)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".UpdateDo")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Update 처리
    '참고 : Key 조건과 Value Field가선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function update_CodeBatchUpdate(Optional ByVal strYEARMON As String = OPTIONAL_STR, _
            Optional ByVal dblSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strSUBSEQ As String = OPTIONAL_STR, _
            Optional ByVal strDEPT_CD As String = OPTIONAL_STR, _
            Optional ByVal strCLIENTSUBCODE As String = OPTIONAL_STR, _
            Optional ByVal dblMATTERCODE As Double = OPTIONAL_NUM, _
            Optional ByVal strEXCLIENTCODE As String = OPTIONAL_STR) As Integer

        Dim strSQL As String
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now
        Try
            strSQL = String.Format("UPDATE {0} SET {1} WHERE {2}", EntityName, _
                     BuildFields(",", _
                        GetFieldNameValue("SUBSEQ", strSUBSEQ), _
                        GetFieldNameValue("DEPT_CD", strDEPT_CD), _
                        GetFieldNameValue("CLIENTSUBCODE", strCLIENTSUBCODE), _
                        GetFieldNameValue("MATTERCODE", dblMATTERCODE), _
                        GetFieldNameValue("EXCLIENTCODE", strEXCLIENTCODE), _
                        GetFieldNameValue("UUSER", mobjSCGLConfig.WRKUSR), _
                        GetFieldNameValue("UDATE", strNOW)), _
                     BuildFields("AND", _
                        GetFieldNameValue("YEARMON", strYEARMON), GetFieldNameValue("SEQ", dblSEQ)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".UpdateDo")
        End Try
    End Function


    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Delete 처리
    '참고 : Key 조건이 선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function DeleteDo(Optional ByVal strYEARMON As String = OPTIONAL_STR, Optional ByVal dblSEQ As Double = OPTIONAL_NUM) As Integer
        Dim strSQL As String

        Try
            strSQL = String.Format("DELETE FROM {0} WHERE {1}", EntityName, _
                     BuildFields("AND", _
                                   GetFieldNameValue("YEARMON", strYEARMON), GetFieldNameValue("SEQ", dblSEQ)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".DeleteDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Select 처리
    '*****************************************************************
    Public Function SelectDo(ByRef intRowCnt As Integer, ByRef intColCnt As Integer, _
                            Optional ByVal strYEARMON As String = OPTIONAL_STR, _
                            Optional ByVal dblSEQ As Double = OPTIONAL_NUM, _
                            Optional ByVal strSelFields As String = "*", _
                            Optional ByVal intLimitRow As Integer = 0, _
                            Optional ByVal intSelMode As Integer = SELMODE.ARR, _
                            Optional ByVal blnBindingHeader As Boolean = False) As Object
        Dim strSQL As String
        Dim strKeyFields As String

        Try
            strKeyFields = BuildFields("AND", _
                                    GetFieldNameValue("YEARMON", strYEARMON), GetFieldNameValue("SEQ", dblSEQ))

            Return SelectDoExt(intRowCnt, intColCnt, strSelFields, strKeyFields, intLimitRow, intSelMode, blnBindingHeader)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".SeleteDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Delete 처리
    '참고 : Key 조건이 선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function Update_TruTrans(ByVal strTRANSYEARMON As String, _
                                    ByVal lngTrust_seq As Double, _
                                    ByVal strTRUTRANS As String) As Integer
        Dim strSQL As String
        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET TRU_TRANS_NO = '" & strTRUTRANS & "'"
            strSQL = strSQL & " WHERE YEARMON = '" & strTRANSYEARMON & "' AND SEQ = '" & lngTrust_seq & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Delete_Batch")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문 By KTY
    '반환 : 처리건수
    '기능 : 신탁테이블의 거래명세삭제시에 trans_trans_no 를 없애준다.
    '*****************************************************************
    Public Function TRANSDeleteUpdateDo(ByVal strTRANSYEARMON As String, _
                                        ByVal strTRANSNO As String) As Integer
        Dim strSQL As String
        Try

            strSQL = strSQL & "  UPDATE MD_ELECTRIC_MEDIUM "
            strSQL = strSQL & "  SET TRU_TRANS_NO = '' "
            strSQL = strSQL & "  FROM MD_ELECTRIC_MEDIUM"
            strSQL = strSQL & "  WHERE YEARMON + '-' + CAST(SEQ AS VARCHAR(10)) IN("
            strSQL = strSQL & "  	SELECT TRUST_YEARMON + '-' + CAST(TRUST_SEQ AS VARCHAR(10))"
            strSQL = strSQL & "  	FROM MD_ELEC_TRANS_DTL "
            strSQL = strSQL & "  	WHERE TRANSYEARMON = '" & strTRANSYEARMON & "'"
            strSQL = strSQL & "  	AND TRANSNO = '" & strTRANSNO & "'"
            strSQL = strSQL & "  )"

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".TRANSDeleteUpdateDo")
        End Try
    End Function

    Public Function Update_CommiTrans(ByVal strTRANSYEARMON As String, _
                                      ByVal lngTrust_seq As Double, _
                                      ByVal strTRUTRANS As String) As Integer
        'strYEARMON,strCLIENTCODE,strMEDNAME  strTRANSYEARMON, lngTrust_seq  strTRUTRANS
        Dim strSQL As String
        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET COMMI_TRANS_NO = '" & strTRUTRANS & "' "
            strSQL = strSQL & " WHERE YEARMON = '" & strTRANSYEARMON & "' AND SEQ = " & lngTrust_seq
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Delete_Batch")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문 By KTH
    '반환 : 처리건수
    '기능 : 신탁테이블의 거래명세삭제시에 commi_trans_no 를 없애준다.
    '*****************************************************************
    Public Function COMMIDeleteUpdateDo(ByVal strTRANSYEARMON As String, _
                                        ByVal strTRANSNO As String) As Integer
        Dim strSQL As String
        Try
            strSQL = strSQL & "  UPDATE MD_ELECTRIC_MEDIUM "
            strSQL = strSQL & "  SET COMMI_TRANS_NO = '' "
            strSQL = strSQL & "  FROM MD_ELECTRIC_MEDIUM"
            strSQL = strSQL & "  WHERE YEARMON + '-' + CAST(SEQ AS VARCHAR(10)) IN("
            strSQL = strSQL & "  	SELECT TRUST_YEARMON + '-' + CAST(TRUST_SEQ AS VARCHAR(10))"
            strSQL = strSQL & "  	FROM MD_ELECCOMMI_DTL "
            strSQL = strSQL & "  	WHERE TRANSYEARMON = '" & strTRANSYEARMON & "'"
            strSQL = strSQL & "  	AND TRANSNO = '" & strTRANSNO & "'"
            strSQL = strSQL & "  )"

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".COMMIDeleteUpdateDo")
        End Try


    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문 By KTH
    '반환 : 처리건수
    '기능 : 신탁테이블의 세금계산서 번호 업데이트
    '*****************************************************************
    Public Function Update_TruTax(ByVal strTRANSNO As String, _
                                  ByVal strTAXNO As String) As Integer
        'strTRANSNO, strTAXNO
        Dim strSQL As String
        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET TRU_TAX_NO = '" & strTAXNO & "'"
            strSQL = strSQL & "  WHERE TRU_TRANS_NO = '" & strTRANSNO & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Update_TruTax")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문 By KTH
    '반환 : 처리건수
    '기능 : 신탁테이블의 세금계산서 삭제시 번호 업데이트
    '*****************************************************************
    Public Function TruTaxDeleteUpdateDo(ByVal strTAXNO As String) As Integer
        Dim strSQL As String
        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET TRU_TAX_NO = ''"
            strSQL = strSQL & "  WHERE TRU_TAX_NO = '" & strTAXNO & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".TruTaxDeleteUpdateDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문 By KTH
    '반환 : 처리건수
    '기능 : 신탁테이블의 세금계산서 삭제시 번호 업데이트
    '*****************************************************************
    Public Function TruTaxDeleteUpdateDo2(ByVal strATTR05 As String) As Integer
        Dim strSQL As String
        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET TRU_TAX_NO = ''"
            strSQL = strSQL & "  WHERE TRU_TRANS_NO = '" & strATTR05 & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".TruTaxDeleteUpdateDo")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문 By KTH
    '반환 : 처리건수
    '기능 : 신탁에 수수료세금계산서 번호 업데이트
    '*****************************************************************
    Public Function Update_CommiTax(ByVal strTRANSNO As String, _
                                    ByVal strTAXNO As String) As Integer
        Dim strSQL As String
        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET COMMI_TAX_NO = '" & strTAXNO & "' "
            strSQL = strSQL & "  WHERE COMMI_TRANS_NO = '" & strTRANSNO & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".Update_CommiTax")
        End Try
    End Function

    '*****************************************************************
    '입력 : strSQL = SQL 문 By KTH
    '반환 : 처리건수
    '기능 : 신탁테이블의 세금계산서 삭제시 번호 업데이트
    '*****************************************************************
    Public Function CommiTaxDeleteUpdateDo(ByVal strTAXNO As String) As Integer

        Dim strSQL As String
        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET COMMI_TAX_NO = '' "
            strSQL = strSQL & "  WHERE COMMI_TAX_NO = '" & strTAXNO & "'"
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".CommiTaxDeleteUpdateDo")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Update 처리
    '참고 : Key 조건과 Value Field가선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function update_EXCUTION(Optional ByVal strYEARMON As String = OPTIONAL_STR, _
            Optional ByVal strINPUT_MEDFLAG As String = OPTIONAL_STR, _
            Optional ByVal strCLIENTCODE As String = OPTIONAL_STR, _
            Optional ByVal strREAL_MED_CODE As String = OPTIONAL_STR, _
            Optional ByVal strEXCLIENTCODE As String = OPTIONAL_STR, _
            Optional ByVal dblEXSUSURATE As Double = OPTIONAL_NUM, _
            Optional ByVal dblEXSUSU As Double = OPTIONAL_NUM, _
            Optional ByVal dblMCSUSU As Double = OPTIONAL_NUM) As Integer
        Dim strSQL As String
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now
        Try
            strSQL = String.Format("UPDATE MD_ELECTRIC_SUSUTEMP SET {1} WHERE {2}", EntityName, _
                     BuildFields(",", _
                        GetFieldNameValue("EXCLIENTCODE", strEXCLIENTCODE), _
                        GetFieldNameValue("EXSUSURATE", dblEXSUSURATE), _
                        GetFieldNameValue("EXSUSU", dblEXSUSU), _
                        GetFieldNameValue("MCSUSU", dblMCSUSU), _
                        GetFieldNameValue("EXUSER", mobjSCGLConfig.WRKUSR), _
                        GetFieldNameValue("EXDATE", strNOW)), _
                     BuildFields("AND", _
                        GetFieldNameValue("YEARMON", strYEARMON), GetFieldNameValue("INPUT_MEDFLAG", strINPUT_MEDFLAG), GetFieldNameValue("CLIENTCODE", strCLIENTCODE), GetFieldNameValue("REAL_MED_CODE", strREAL_MED_CODE)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".update_EXCUTION")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Update 처리
    '참고 : Key 조건과 Value Field가선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function update_EXCUTION_ASS(Optional ByVal strYEARMON As String = OPTIONAL_STR, _
            Optional ByVal dblSEQ As Double = OPTIONAL_NUM, _
            Optional ByVal strEXCLIENTCODE As String = OPTIONAL_STR, _
            Optional ByVal dblEXSUSURATE As Double = OPTIONAL_NUM, _
            Optional ByVal dblEXSUSU As Double = OPTIONAL_NUM, _
            Optional ByVal dblMCSUSU As Double = OPTIONAL_NUM) As Integer
        Dim strSQL As String
        Dim strNOW As String '데이트형의 처리는 변수를 받아 텍스트로 처리 한다.. 
        strNOW = Now
        Try
            strSQL = String.Format("UPDATE {0} SET {1} WHERE {2}", EntityName, _
                     BuildFields(",", _
                        GetFieldNameValue("EXCLIENTCODE", strEXCLIENTCODE), _
                        GetFieldNameValue("EXSUSURATE", dblEXSUSURATE), _
                        GetFieldNameValue("EXSUSU", dblEXSUSU), _
                        GetFieldNameValue("MCSUSU", dblMCSUSU), _
                        GetFieldNameValue("EXUSER", mobjSCGLConfig.WRKUSR), _
                        GetFieldNameValue("EXDATE", strNOW)), _
                     BuildFields("AND", _
                        GetFieldNameValue("YEARMON", strYEARMON), GetFieldNameValue("SEQ", dblSEQ)))

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".update_EXCUTION_ASS")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Delete 처리(대대행사 공백 및 NULL 로 업데이트 처리)
    '참고 : Key 조건이 선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    Public Function DeleteRtn_ELECEXCUTION_ASS(Optional ByVal strYEARMON As String = OPTIONAL_STR, _
                                                Optional ByVal dblSEQ As Double = OPTIONAL_NUM) As Integer
        Dim strSQL As String

        Try
            strSQL = "UPDATE MD_ELECTRIC_MEDIUM SET EXCLIENTCODE = '' , EXSUSURATE = NULL, EXSUSU = NULL,MCSUSU = NULL  WHERE YEARMON = '" & strYEARMON & "' AND SEQ =" & dblSEQ

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".DeleteRtn_PRINTEXCUTION")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : 해당 Entity에 Delete 처리(대대행사 공백 및 NULL 로 업데이트 처리)
    '참고 : Key 조건이 선택적임(OPTIONAL_STR/OPTIONAL_NUM/OPTIONAL_DTM)
    '*****************************************************************
    '(strYEARMON, strINPUT_MEDFLAG, strCLIENTCODE, strREAL_MED_CODE
    Public Function DeleteRtn_ELECEXCUTION(Optional ByVal strYEARMON As String = OPTIONAL_STR, _
                                            Optional ByVal strINPUT_MEDFLAG As String = OPTIONAL_STR, _
                                            Optional ByVal strCLIENTCODE As String = OPTIONAL_STR, _
                                            Optional ByVal strREAL_MED_CODE As String = OPTIONAL_STR) As Integer
        Dim strSQL As String

        Try
            strSQL = "UPDATE MD_ELECTRIC_SUSUTEMP SET EXCLIENTCODE = '' , EXSUSURATE = NULL, EXSUSU = NULL,MCSUSU = NULL WHERE YEARMON = '" & strYEARMON & "' AND INPUT_MEDFLAG ='" & strINPUT_MEDFLAG & "'"
            strSQL = strSQL & " AND CLIENTCODE = '" & strCLIENTCODE & "' AND REAL_MED_CODE = '" & strREAL_MED_CODE & "'"

            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".DeleteRtn_PRINTEXCUTION")
        End Try
    End Function
    '*****************************************************************
    '입력 : strSQL = SQL 문
    '반환 : 처리건수
    '기능 : strSQL 해당문을 그대로 처리
    '*****************************************************************
    Public Function ProceDureDo(ByVal strTEMPSQL As String) As Integer
        Dim strSQL As String
        Try
            strSQL = strTEMPSQL
            Return ProcEntity(strSQL)
        Catch err As Exception
            Throw RaiseSysErr(err, CLASS_NAME & ".ProceDureDo")
        End Try
    End Function
#End Region

#Region "객체 생성/해제"
    '*****************************************************************
    '입력 : strInfoXML = 공통기본정보에 대한 XML
    'objSCGLSql = DB 처리 객체 인스턴싱 변수    '반환 : 없음
    '기능 : DB 처리를 위한 공통기본정보 설정
    '*****************************************************************
    Public Sub New(Optional ByVal objSCGLConfig As SCGLUtil.cbSCGLConfig = Nothing, Optional ByVal strInfoXML As String = "")
        MyBase.SetConfig(objSCGLConfig, strInfoXML)
        MyBase.EntityName = "MD_ELECTRIC_MEDIUM"     'Entity Name 설정
    End Sub

    '해제 기능은 Base Class에서 구현되어 있음
#End Region
#End Region
End Class

'------->>엔티티 INSERT/UPDATE 샘플입니다. 반드시 자신의 환경에 맞추어서 변경하시기 바랍니다.
'=========================================================
'       'vntData Array를 사용할 때 Insert/Update 입니다.
'=========================================================
'        Dim intRtn As Integer
'        intRtn = mobjceMD_ELECTRIC_MEDIUM.InsertDo( _
'                                       GetElement(vntData,"YEARMON", intColCnt, intRow), _
'                                       GetElement(vntData,"SEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"SUBSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"CLIENTCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"MEDCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"REAL_MED_CODE", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDMON", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDTUE", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDWED", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDTHU", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDFRI", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDSAT", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDSUN", intColCnt, intRow), _
'                                       GetElement(vntData,"ADLOCALFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"PROGRAM", intColCnt, intRow), _
'                                       GetElement(vntData,"MBRDSTDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"MBRDEDDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDSTTIME", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDEDTIME", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_CLIENTCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"ROLLSTDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"TBRDSTDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"ROLLEDDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"DEPT_CD", intColCnt, intRow), _
'                                       GetElement(vntData,"STD", intColCnt, intRow), _
'                                       GetElement(vntData,"CMLAN", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TBRDEDDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"PROGNAME", intColCnt, intRow), _
'                                       GetElement(vntData,"CNT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"PRICE", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"AMT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"DISCUNO", intColCnt, intRow), _
'                                       GetElement(vntData,"L_UPJONG", intColCnt, intRow), _
'                                       GetElement(vntData,"M_UPJONG", intColCnt, intRow), _
'                                       GetElement(vntData,"S_UPJONG", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_MEDCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_MEDFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_YEAR", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_PROGSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_STOCSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_STDSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"STDPROGSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"PROGSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"ROLLSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"GFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDDIV", intColCnt, intRow), _
'                                       GetElement(vntData,"ADSTOCFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_AREAFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_PAREAFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"ADFORFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"ADTYPFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"DANFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"LOCALFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"TYPHOUR", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_WEEK", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_ADLOCALFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_RATE", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"COMMISSION", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TRU_TAX_FLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_TAX_FLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"TRU_TRANS_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"TRU_TAX_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"TRU_VOCH_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_TRANS_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_TAX_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_VOCH_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"NOTE", intColCnt, intRow), _
'                                       GetElement(vntData,"SPONSOR", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR01", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR02", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR03", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR04", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR05", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR06", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR07", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR08", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR09", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR10", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR11", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR12", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR13", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR14", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR15", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"CUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"CDATE", intColCnt, intRow, NULL_DTM, true ), _
'                                       GetElement(vntData,"UUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"UDATE", intColCnt, intRow, NULL_DTM, true ) _
'                                       )
'        Return intRtn

'        Dim intRtn As Integer
'        intRtn = mobjceMD_ELECTRIC_MEDIUM.UpdateDo( _
'                                       GetElement(vntData,"YEARMON", intColCnt, intRow), _
'                                       GetElement(vntData,"SEQ", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"SUBSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"CLIENTCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"MEDCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"REAL_MED_CODE", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDMON", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDTUE", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDWED", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDTHU", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDFRI", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDSAT", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDSUN", intColCnt, intRow), _
'                                       GetElement(vntData,"ADLOCALFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"PROGRAM", intColCnt, intRow), _
'                                       GetElement(vntData,"MBRDSTDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"MBRDEDDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDSTTIME", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDEDTIME", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_CLIENTCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"ROLLSTDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"TBRDSTDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"ROLLEDDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"DEPT_CD", intColCnt, intRow), _
'                                       GetElement(vntData,"STD", intColCnt, intRow), _
'                                       GetElement(vntData,"CMLAN", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TBRDEDDATE", intColCnt, intRow), _
'                                       GetElement(vntData,"PROGNAME", intColCnt, intRow), _
'                                       GetElement(vntData,"CNT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"PRICE", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"AMT", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"DISCUNO", intColCnt, intRow), _
'                                       GetElement(vntData,"L_UPJONG", intColCnt, intRow), _
'                                       GetElement(vntData,"M_UPJONG", intColCnt, intRow), _
'                                       GetElement(vntData,"S_UPJONG", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_MEDCODE", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_MEDFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_YEAR", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_PROGSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_STOCSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"KO_STDSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"STDPROGSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"PROGSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"ROLLSEQ", intColCnt, intRow), _
'                                       GetElement(vntData,"GFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"BRDDIV", intColCnt, intRow), _
'                                       GetElement(vntData,"ADSTOCFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_AREAFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_PAREAFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"ADFORFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"ADTYPFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"DANFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"LOCALFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"TYPHOUR", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_WEEK", intColCnt, intRow), _
'                                       GetElement(vntData,"INPUT_ADLOCALFLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_RATE", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"COMMISSION", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"TRU_TAX_FLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_TAX_FLAG", intColCnt, intRow), _
'                                       GetElement(vntData,"TRU_TRANS_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"TRU_TAX_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"TRU_VOCH_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_TRANS_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_TAX_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"COMMI_VOCH_NO", intColCnt, intRow), _
'                                       GetElement(vntData,"NOTE", intColCnt, intRow), _
'                                       GetElement(vntData,"SPONSOR", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR01", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR02", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR03", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR04", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR05", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR06", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR07", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR08", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR09", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR10", intColCnt, intRow), _
'                                       GetElement(vntData,"ATTR11", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR12", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR13", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR14", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"ATTR15", intColCnt, intRow, NULL_NUM, true ), _
'                                       GetElement(vntData,"CUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"CDATE", intColCnt, intRow, NULL_DTM, true ), _
'                                       GetElement(vntData,"UUSER", intColCnt, intRow), _
'                                       GetElement(vntData,"UDATE", intColCnt, intRow, NULL_DTM, true ) _
'                                       )
'        Return intRtn


'=========================================================
'       'XmlData 를 사용할 때 Insert/Update 입니다.
'=========================================================
'        Dim intRtn As Integer
'        intRtn = mobjceMD_ELECTRIC_MEDIUM.InsertDo( _
'                                       XMLGetElement(xmlRoot,"YEARMON"), _
'                                       XMLGetElement(xmlRoot,"SEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"SUBSEQ"), _
'                                       XMLGetElement(xmlRoot,"CLIENTCODE"), _
'                                       XMLGetElement(xmlRoot,"MEDCODE"), _
'                                       XMLGetElement(xmlRoot,"REAL_MED_CODE"), _
'                                       XMLGetElement(xmlRoot,"BRDMON"), _
'                                       XMLGetElement(xmlRoot,"BRDTUE"), _
'                                       XMLGetElement(xmlRoot,"BRDWED"), _
'                                       XMLGetElement(xmlRoot,"BRDTHU"), _
'                                       XMLGetElement(xmlRoot,"BRDFRI"), _
'                                       XMLGetElement(xmlRoot,"BRDSAT"), _
'                                       XMLGetElement(xmlRoot,"BRDSUN"), _
'                                       XMLGetElement(xmlRoot,"ADLOCALFLAG"), _
'                                       XMLGetElement(xmlRoot,"PROGRAM"), _
'                                       XMLGetElement(xmlRoot,"MBRDSTDATE"), _
'                                       XMLGetElement(xmlRoot,"MBRDEDDATE"), _
'                                       XMLGetElement(xmlRoot,"BRDSTTIME"), _
'                                       XMLGetElement(xmlRoot,"BRDEDTIME"), _
'                                       XMLGetElement(xmlRoot,"INPUT_CLIENTCODE"), _
'                                       XMLGetElement(xmlRoot,"ROLLSTDATE"), _
'                                       XMLGetElement(xmlRoot,"TBRDSTDATE"), _
'                                       XMLGetElement(xmlRoot,"ROLLEDDATE"), _
'                                       XMLGetElement(xmlRoot,"DEPT_CD"), _
'                                       XMLGetElement(xmlRoot,"STD"), _
'                                       XMLGetElement(xmlRoot,"CMLAN", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TBRDEDDATE"), _
'                                       XMLGetElement(xmlRoot,"PROGNAME"), _
'                                       XMLGetElement(xmlRoot,"CNT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"PRICE", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"AMT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"DISCUNO"), _
'                                       XMLGetElement(xmlRoot,"L_UPJONG"), _
'                                       XMLGetElement(xmlRoot,"M_UPJONG"), _
'                                       XMLGetElement(xmlRoot,"S_UPJONG"), _
'                                       XMLGetElement(xmlRoot,"INPUT_MEDCODE"), _
'                                       XMLGetElement(xmlRoot,"INPUT_MEDFLAG"), _
'                                       XMLGetElement(xmlRoot,"KO_YEAR"), _
'                                       XMLGetElement(xmlRoot,"KO_PROGSEQ"), _
'                                       XMLGetElement(xmlRoot,"KO_STOCSEQ"), _
'                                       XMLGetElement(xmlRoot,"KO_STDSEQ"), _
'                                       XMLGetElement(xmlRoot,"STDPROGSEQ"), _
'                                       XMLGetElement(xmlRoot,"PROGSEQ"), _
'                                       XMLGetElement(xmlRoot,"ROLLSEQ"), _
'                                       XMLGetElement(xmlRoot,"GFLAG"), _
'                                       XMLGetElement(xmlRoot,"BRDDIV"), _
'                                       XMLGetElement(xmlRoot,"ADSTOCFLAG"), _
'                                       XMLGetElement(xmlRoot,"INPUT_AREAFLAG"), _
'                                       XMLGetElement(xmlRoot,"INPUT_PAREAFLAG"), _
'                                       XMLGetElement(xmlRoot,"ADFORFLAG"), _
'                                       XMLGetElement(xmlRoot,"ADTYPFLAG"), _
'                                       XMLGetElement(xmlRoot,"DANFLAG"), _
'                                       XMLGetElement(xmlRoot,"LOCALFLAG"), _
'                                       XMLGetElement(xmlRoot,"TYPHOUR"), _
'                                       XMLGetElement(xmlRoot,"INPUT_WEEK"), _
'                                       XMLGetElement(xmlRoot,"INPUT_ADLOCALFLAG"), _
'                                       XMLGetElement(xmlRoot,"COMMI_RATE", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"COMMISSION", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TRU_TAX_FLAG"), _
'                                       XMLGetElement(xmlRoot,"COMMI_TAX_FLAG"), _
'                                       XMLGetElement(xmlRoot,"TRU_TRANS_NO"), _
'                                       XMLGetElement(xmlRoot,"TRU_TAX_NO"), _
'                                       XMLGetElement(xmlRoot,"TRU_VOCH_NO"), _
'                                       XMLGetElement(xmlRoot,"COMMI_TRANS_NO"), _
'                                       XMLGetElement(xmlRoot,"COMMI_TAX_NO"), _
'                                       XMLGetElement(xmlRoot,"COMMI_VOCH_NO"), _
'                                       XMLGetElement(xmlRoot,"NOTE"), _
'                                       XMLGetElement(xmlRoot,"SPONSOR"), _
'                                       XMLGetElement(xmlRoot,"ATTR01"), _
'                                       XMLGetElement(xmlRoot,"ATTR02"), _
'                                       XMLGetElement(xmlRoot,"ATTR03"), _
'                                       XMLGetElement(xmlRoot,"ATTR04"), _
'                                       XMLGetElement(xmlRoot,"ATTR05"), _
'                                       XMLGetElement(xmlRoot,"ATTR06"), _
'                                       XMLGetElement(xmlRoot,"ATTR07"), _
'                                       XMLGetElement(xmlRoot,"ATTR08"), _
'                                       XMLGetElement(xmlRoot,"ATTR09"), _
'                                       XMLGetElement(xmlRoot,"ATTR10"), _
'                                       XMLGetElement(xmlRoot,"ATTR11", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR12", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR13", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR14", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR15", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"CUSER"), _
'                                       XMLGetElement(xmlRoot,"CDATE", NULL_DTM, true ), _
'                                       XMLGetElement(xmlRoot,"UUSER"), _
'                                       XMLGetElement(xmlRoot,"UDATE", NULL_DTM, true ) _
'                                       )
'        Return intRtn

'        Dim intRtn As Integer
'        intRtn = mobjceMD_ELECTRIC_MEDIUM.UpdateDo( _
'                                       XMLGetElement(xmlRoot,"YEARMON"), _
'                                       XMLGetElement(xmlRoot,"SEQ", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"SUBSEQ"), _
'                                       XMLGetElement(xmlRoot,"CLIENTCODE"), _
'                                       XMLGetElement(xmlRoot,"MEDCODE"), _
'                                       XMLGetElement(xmlRoot,"REAL_MED_CODE"), _
'                                       XMLGetElement(xmlRoot,"BRDMON"), _
'                                       XMLGetElement(xmlRoot,"BRDTUE"), _
'                                       XMLGetElement(xmlRoot,"BRDWED"), _
'                                       XMLGetElement(xmlRoot,"BRDTHU"), _
'                                       XMLGetElement(xmlRoot,"BRDFRI"), _
'                                       XMLGetElement(xmlRoot,"BRDSAT"), _
'                                       XMLGetElement(xmlRoot,"BRDSUN"), _
'                                       XMLGetElement(xmlRoot,"ADLOCALFLAG"), _
'                                       XMLGetElement(xmlRoot,"PROGRAM"), _
'                                       XMLGetElement(xmlRoot,"MBRDSTDATE"), _
'                                       XMLGetElement(xmlRoot,"MBRDEDDATE"), _
'                                       XMLGetElement(xmlRoot,"BRDSTTIME"), _
'                                       XMLGetElement(xmlRoot,"BRDEDTIME"), _
'                                       XMLGetElement(xmlRoot,"INPUT_CLIENTCODE"), _
'                                       XMLGetElement(xmlRoot,"ROLLSTDATE"), _
'                                       XMLGetElement(xmlRoot,"TBRDSTDATE"), _
'                                       XMLGetElement(xmlRoot,"ROLLEDDATE"), _
'                                       XMLGetElement(xmlRoot,"DEPT_CD"), _
'                                       XMLGetElement(xmlRoot,"STD"), _
'                                       XMLGetElement(xmlRoot,"CMLAN", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TBRDEDDATE"), _
'                                       XMLGetElement(xmlRoot,"PROGNAME"), _
'                                       XMLGetElement(xmlRoot,"CNT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"PRICE", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"AMT", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"DISCUNO"), _
'                                       XMLGetElement(xmlRoot,"L_UPJONG"), _
'                                       XMLGetElement(xmlRoot,"M_UPJONG"), _
'                                       XMLGetElement(xmlRoot,"S_UPJONG"), _
'                                       XMLGetElement(xmlRoot,"INPUT_MEDCODE"), _
'                                       XMLGetElement(xmlRoot,"INPUT_MEDFLAG"), _
'                                       XMLGetElement(xmlRoot,"KO_YEAR"), _
'                                       XMLGetElement(xmlRoot,"KO_PROGSEQ"), _
'                                       XMLGetElement(xmlRoot,"KO_STOCSEQ"), _
'                                       XMLGetElement(xmlRoot,"KO_STDSEQ"), _
'                                       XMLGetElement(xmlRoot,"STDPROGSEQ"), _
'                                       XMLGetElement(xmlRoot,"PROGSEQ"), _
'                                       XMLGetElement(xmlRoot,"ROLLSEQ"), _
'                                       XMLGetElement(xmlRoot,"GFLAG"), _
'                                       XMLGetElement(xmlRoot,"BRDDIV"), _
'                                       XMLGetElement(xmlRoot,"ADSTOCFLAG"), _
'                                       XMLGetElement(xmlRoot,"INPUT_AREAFLAG"), _
'                                       XMLGetElement(xmlRoot,"INPUT_PAREAFLAG"), _
'                                       XMLGetElement(xmlRoot,"ADFORFLAG"), _
'                                       XMLGetElement(xmlRoot,"ADTYPFLAG"), _
'                                       XMLGetElement(xmlRoot,"DANFLAG"), _
'                                       XMLGetElement(xmlRoot,"LOCALFLAG"), _
'                                       XMLGetElement(xmlRoot,"TYPHOUR"), _
'                                       XMLGetElement(xmlRoot,"INPUT_WEEK"), _
'                                       XMLGetElement(xmlRoot,"INPUT_ADLOCALFLAG"), _
'                                       XMLGetElement(xmlRoot,"COMMI_RATE", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"COMMISSION", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"TRU_TAX_FLAG"), _
'                                       XMLGetElement(xmlRoot,"COMMI_TAX_FLAG"), _
'                                       XMLGetElement(xmlRoot,"TRU_TRANS_NO"), _
'                                       XMLGetElement(xmlRoot,"TRU_TAX_NO"), _
'                                       XMLGetElement(xmlRoot,"TRU_VOCH_NO"), _
'                                       XMLGetElement(xmlRoot,"COMMI_TRANS_NO"), _
'                                       XMLGetElement(xmlRoot,"COMMI_TAX_NO"), _
'                                       XMLGetElement(xmlRoot,"COMMI_VOCH_NO"), _
'                                       XMLGetElement(xmlRoot,"NOTE"), _
'                                       XMLGetElement(xmlRoot,"SPONSOR"), _
'                                       XMLGetElement(xmlRoot,"ATTR01"), _
'                                       XMLGetElement(xmlRoot,"ATTR02"), _
'                                       XMLGetElement(xmlRoot,"ATTR03"), _
'                                       XMLGetElement(xmlRoot,"ATTR04"), _
'                                       XMLGetElement(xmlRoot,"ATTR05"), _
'                                       XMLGetElement(xmlRoot,"ATTR06"), _
'                                       XMLGetElement(xmlRoot,"ATTR07"), _
'                                       XMLGetElement(xmlRoot,"ATTR08"), _
'                                       XMLGetElement(xmlRoot,"ATTR09"), _
'                                       XMLGetElement(xmlRoot,"ATTR10"), _
'                                       XMLGetElement(xmlRoot,"ATTR11", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR12", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR13", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR14", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"ATTR15", NULL_NUM, true ), _
'                                       XMLGetElement(xmlRoot,"CUSER"), _
'                                       XMLGetElement(xmlRoot,"CDATE", NULL_DTM, true ), _
'                                       XMLGetElement(xmlRoot,"UUSER"), _
'                                       XMLGetElement(xmlRoot,"UDATE", NULL_DTM, true ) _
'                                       )
'        Return intRtn


