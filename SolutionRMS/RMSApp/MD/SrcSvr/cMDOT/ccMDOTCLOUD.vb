'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 컨트롤 클래스 메이커 - 한화 S&C
'시스템구분    : 솔루션명 /시스템명/Server Control Class
'실행   환경    : COM+ Service Server Package
'프로그램명    : ccMDCMPRINTREG.vb
'기         능    : - 기능을 명시 합니다.
'특이  사항     : - 특이사항에 대해 표현
'                     -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2004-03-30 오전 10:32:13 By MakeSFARV.2.0.0
'            2) 2004-03-30 오전 10:32:13 By 작성자명을 씁니다.
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports eMDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트

Public Class ccMDOTCLOUD
    Inherits ccControl

#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccMDOTCLOUD"
    Private mobjceMD_CLOUD_AMT As eMDCO.ceMD_CLOUD_AMT
    Private mobjceMD_CLOUD_OUT As eMDCO.ceMD_CLOUD_OUT
    Private mobjceMD_CLOUD_CGV As eMDCO.ceMD_CLOUD_CGV
#End Region

#Region "GROUP BLOCK : Property 선언"
#End Region

#Region "GROUP BLOCK : Event 선언"
    '********************************************************
    ' GetDataType()
    '********************************************************
    Public Function GetDataType_SEARCH(ByVal strInfoXML As String, _
                                       ByRef intRowCnt As Integer, _
                                       ByRef intColCnt As Integer, _
                                       ByRef strCLASS_CODE As String) As Object

        Dim strSQL As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        strSQL = "SELECT '' CODE,'전체' CODE_NAME UNION ALL "
        strSQL = strSQL & " SELECT "
        strSQL = strSQL & " CODE, CODE_NAME "
        strSQL = strSQL & " FROM SC_CODE "
        strSQL = strSQL & " WHERE CLASS_CODE = '" & strCLASS_CODE & "' "
        strSQL = strSQL & " ORDER BY CODE "

        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function GetDataType(ByVal strInfoXML As String, _
                                ByRef intRowCnt As Integer, _
                                ByRef intColCnt As Integer, _
                                ByRef strCLASS_CODE As String) As Object

        Dim strSQL As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        strSQL = " SELECT "
        strSQL = strSQL & " CODE, CODE_NAME "
        strSQL = strSQL & " FROM SC_CODE "
        strSQL = strSQL & " WHERE CLASS_CODE = '" & strCLASS_CODE & "' "
        strSQL = strSQL & " ORDER BY CODE "

        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 공개 Method"
    Public Function SelectRtn_HDR(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strYEARMON As String, _
                                  ByVal strCLIENTCODE As String, _
                                  ByVal strCONT_NAME As String, _
                                  ByVal strCONT_TYPE As String) As Object     'XML  데이터 조회시

        Dim strSQL As String
        Dim strFormet, strWhere As String
        Dim Con1, Con2, Con3, Con4 As String
        Dim vntData As Object

        With mobjSCGLConfig
            Try
                SetConfig(strInfoXML)   '기본정보 설정

                Con1 = "" : Con2 = "" : Con3 = "" : Con4 = ""

                If strYEARMON <> "" Then Con1 = String.Format(" AND ('{0}' BETWEEN substring(A.TBRDSTDATE,1,6) AND substring(A.TBRDEDDATE,1,6))", strYEARMON)
                If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (A.CLIENTCODE = '{0}')", strCLIENTCODE)
                If strCONT_NAME <> "" Then Con3 = String.Format(" AND (A.CONT_NAME LIKE '%{0}%')", strCONT_NAME)
                If strCONT_TYPE <> "" Then Con4 = String.Format(" AND (A.CONT_TYPE = '{0}')", strCONT_TYPE)

                strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)

                strFormet = strFormet & " SELECT"
                strFormet = strFormet & " 0 CHK,"
                strFormet = strFormet & " '" & strYEARMON & "' AS YEARMON,"
                strFormet = strFormet & " B.SEQ,"
                strFormet = strFormet & " A.GUBUN,"
                strFormet = strFormet & " A.CONT_TYPE,"
                strFormet = strFormet & " CASE ISNULL(B.CLIENTCODE,'') WHEN '' THEN A.CLIENTCODE ELSE B.CLIENTCODE END CLIENTCODE,"
                strFormet = strFormet & " CASE ISNULL(B.CLIENTCODE,'') WHEN '' THEN DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) "
                strFormet = strFormet & " ELSE DBO.SC_GET_HIGHCUSTNAME_FUN(B.CLIENTCODE) END CLIENTNAME,"
                strFormet = strFormet & " A.CONT_CODE,"
                strFormet = strFormet & " A.CONT_NAME,"
                strFormet = strFormet & " A.TBRDSTDATE,"
                strFormet = strFormet & " A.TBRDEDDATE,"
                strFormet = strFormet & " A.TOTAL_AMT,"
                strFormet = strFormet & " DBO.MD_GET_CLOUDTAX_AMT(A.CONT_CODE) TAX_AMT,"
                strFormet = strFormet & " ISNULL(B.AMT,0) AMT,"
                strFormet = strFormet & " CASE ISNULL(B.CLIENTCODE,'') WHEN '' THEN A.TIM_RATE ELSE B.TIM_RATE END TIM_RATE,"
                strFormet = strFormet & " ISNULL(B.TIM_AMT,0) TIM_AMT,"
                strFormet = strFormet & " CASE ISNULL(B.EXCLIENTCODE,'') WHEN '' THEN A.EXCLIENTCODE ELSE B.EXCLIENTCODE END EXCLIENTCODE,"
                strFormet = strFormet & " CASE ISNULL(B.EXCLIENTCODE,'') WHEN '' THEN DBO.SC_GET_HIGHCUSTNAME_FUN(A.EXCLIENTCODE) "
                strFormet = strFormet & " ELSE DBO.SC_GET_HIGHCUSTNAME_FUN(B.EXCLIENTCODE) END EXCLIENTNAME,"
                strFormet = strFormet & " CASE ISNULL(B.CLIENTCODE,'') WHEN '' THEN isnull(A.EX_RATE,0) ELSE isnull(B.EX_RATE,0) END EX_RATE,"
                strFormet = strFormet & " ISNULL(B.EX_AMT,0) EX_AMT,"
                strFormet = strFormet & " CASE ISNULL(B.CLIENTCODE,'') WHEN '' THEN A.CGV_RATE ELSE B.CGV_RATE END CGV_RATE,"
                strFormet = strFormet & " ISNULL(B.CGV_AMT,0) CGV_AMT,"
                strFormet = strFormet & " ISNULL(B.MC_AMT,0) MC_AMT,"
                strFormet = strFormet & " CASE ISNULL(B.CLIENTCODE,'') WHEN '' THEN A.MEMO ELSE B.MEMO END MEMO,"
                strFormet = strFormet & " ISNULL(B.COMMI_TRANS_NO,'') COMMI_TRANS_NO"
                strFormet = strFormet & " FROM MD_CLOUD_CONTRACT A "
                strFormet = strFormet & " LEFT JOIN MD_CLOUD_AMT B ON A.CONT_CODE = B.CONT_CODE AND B.YEARMON = '" & strYEARMON & "'"
                strFormet = strFormet & " WHERE 1=1 {0} "
                strFormet = strFormet & " ORDER BY A.CONT_CODE DESC, CLIENTNAME"

                strSQL = String.Format(strFormet, strWhere)

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_HDR")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_AMT(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strYEARMON As String, _
                                  ByVal strCONT_CODE As String) As Object     'XML  데이터 조회시

        Dim strSQL As String
        Dim strFormet, strWhere As String
        Dim Con1, Con2 As String
        Dim vntData As Object
        Dim strCNT

        With mobjSCGLConfig
            Try
                SetConfig(strInfoXML)   '기본정보 설정

                .mobjSCGLSql.SQLConnect(.DBConnStr)

                Con1 = "" : Con2 = ""

                If strYEARMON <> "" Then Con1 = String.Format(" AND (YEARMON = '{0}')", strYEARMON)
                If strCONT_CODE <> "" Then Con2 = String.Format(" AND (CONT_CODE = '{0}')", strCONT_CODE)

                strWhere = BuildFields(" ", Con1, Con2)

                strFormet = strFormet & " SELECT"
                strFormet = strFormet & " 0 CHK, "
                strFormet = strFormet & " YEARMON,"
                strFormet = strFormet & " SEQ, DEMANDDAY,"
                strFormet = strFormet & " CONT_CODE,"
                strFormet = strFormet & " CLIENTCODE,"
                strFormet = strFormet & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
                strFormet = strFormet & " DEPT_CD,"
                strFormet = strFormet & " MCRATE,"
                strFormet = strFormet & " isnull(AMT,0) AMT,"
                strFormet = strFormet & " CGV_RATE,"
                strFormet = strFormet & " ISNULL(CGV_AMT,0) CGV_AMT,"
                strFormet = strFormet & " COMMI_TRANS_NO,"
                strFormet = strFormet & " COMMI_TAX_NO,"
                strFormet = strFormet & " COMMI_VOCH_NO,"
                strFormet = strFormet & " MEMO"
                strFormet = strFormet & " FROM MD_CLOUD_AMT"
                strFormet = strFormet & " WHERE 1=1 {0} "
                strFormet = strFormet & " ORDER BY YEARMON, SEQ"

                strSQL = String.Format(strFormet, strWhere)

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_AMT")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    Public Function SelectRtn_OUT(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strYEARMON As String, _
                                  ByVal strCONT_CODE As String) As Object     'XML  데이터 조회시

        Dim strSQL As String
        Dim strFormet, strWhere As String
        Dim Con1, Con2 As String
        Dim vntData As Object
        Dim strCNT

        With mobjSCGLConfig
            Try
                SetConfig(strInfoXML)   '기본정보 설정

                .mobjSCGLSql.SQLConnect(.DBConnStr)

                Con1 = "" : Con2 = ""

                If strYEARMON <> "" Then Con1 = String.Format(" AND (YEARMON = '{0}')", strYEARMON)
                If strCONT_CODE <> "" Then Con2 = String.Format(" AND (CONT_CODE = '{0}')", strCONT_CODE)

                strWhere = BuildFields(" ", Con1, Con2)

                strFormet = strFormet & " SELECT "
                strFormet = strFormet & " 0 CHK,"
                strFormet = strFormet & " YEARMON, SEQ,"
                strFormet = strFormet & " CONT_CODE,"
                strFormet = strFormet & " DEPT_CD,"
                strFormet = strFormet & " CASE LEN(DEPT_CD) WHEN 6 THEN DBO.SC_GET_HIGHCUSTNAME_FUN(DEPT_CD) ELSE DBO.SC_DEPT_NAME_FUN(DEPT_CD) END  DEPT_NAME,"
                strFormet = strFormet & " RATE,"
                strFormet = strFormet & " ISNULL(AMT,0) AMT,"
                strFormet = strFormet & " MEMO"
                strFormet = strFormet & " FROM MD_CLOUD_OUT"
                strFormet = strFormet & " WHERE 1=1 {0} "
                strFormet = strFormet & " ORDER BY YEARMON, SEQ"

                strSQL = String.Format(strFormet, strWhere)

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_OUT")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_CGV(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strYEARMON As String, _
                                  ByVal strCONT_CODE As String) As Object     'XML  데이터 조회시

        Dim strSQL As String
        Dim strFormet, strWhere As String
        Dim Con1, Con2 As String
        Dim vntData As Object
        Dim strCNT

        With mobjSCGLConfig
            Try
                SetConfig(strInfoXML)   '기본정보 설정

                .mobjSCGLSql.SQLConnect(.DBConnStr)

                Con1 = "" : Con2 = ""

                If strYEARMON <> "" Then Con1 = String.Format(" AND (YEARMON = '{0}')", strYEARMON)
                If strCONT_CODE <> "" Then Con2 = String.Format(" AND (CONT_CODE = '{0}')", strCONT_CODE)

                strWhere = BuildFields(" ", Con1, Con2)

                strFormet = strFormet & " SELECT"
                strFormet = strFormet & " 0 CHK,"
                strFormet = strFormet & " YEARMON, SEQ,"
                strFormet = strFormet & " CONT_CODE,"
                strFormet = strFormet & " medcode,"
                strFormet = strFormet & " dbo.SC_GET_HIGHCUSTNAME_FUN(medcode) medname,"
                strFormet = strFormet & " real_med_code,"
                strFormet = strFormet & " DBO.SC_GET_HIGHCUSTNAME_FUN(real_med_code) real_med_name,"
                strFormet = strFormet & " ISNULL(OUT_AMT,0) OUT_AMT,"
                strFormet = strFormet & " MEMO"
                strFormet = strFormet & " FROM MD_CLOUD_CGV"
                strFormet = strFormet & " WHERE 1=1 {0} "
                strFormet = strFormet & " ORDER BY YEARMON, SEQ"


                strSQL = String.Format(strFormet, strWhere)

                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CGV")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    'CGV 의 모든 지점 명을 뿌린다.
    Public Function SelectRtn_CGVEmpty(ByVal strInfoXML As String, _
                                       ByRef intRowCnt As Integer, _
                                       ByRef intColCnt As Integer, _
                                       ByVal strYEARMON As String, _
                                       ByVal strCONT_CODE As String) As Object     'XML  데이터 조회시

        Dim strSQL As String
        Dim vntData As Object

        With mobjSCGLConfig
            Try
                SetConfig(strInfoXML)   '기본정보 설정

                .mobjSCGLSql.SQLConnect(.DBConnStr)

                strSQL = " select "
                strSQL = strSQL & " 0 chk,"
                strSQL = strSQL & " '" & strYEARMON & "' yearmon, '' seq ,"
                strSQL = strSQL & " '" & strCONT_CODE & "' CONT_CODE,"
                strSQL = strSQL & " MEDCODE, "
                strSQL = strSQL & " DBO.SC_GET_HIGHCUSTNAME_FUN(MEDCODE) MEDNAME, "
                strSQL = strSQL & " REAL_MED_CODE, "
                strSQL = strSQL & " DBO.SC_GET_HIGHCUSTNAME_FUN(REAL_MED_CODE) REAL_MED_NAME ,"
                strSQL = strSQL & " 0 amt, '' memo"
                strSQL = strSQL & " from MD_CLOUD_CUST"
                strSQL = strSQL & " where USE_FLAG = 1"

                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CGVEmpty")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    'CGV 지점을 조회하여 있는지 확인한다.
    Public Function SelectRtn_CGVCHK(ByVal strInfoXML As String, _
                                     ByRef intRowCnt As Integer, _
                                     ByRef intColCnt As Integer, _
                                     ByVal strYEARMON As String, _
                                     ByVal strCONT_CODE As String) As Object     'XML  데이터 조회시

        Dim strSQL As String
        Dim vntData As Object

        With mobjSCGLConfig
            Try
                SetConfig(strInfoXML)   '기본정보 설정

                .mobjSCGLSql.SQLConnect(.DBConnStr)

                strSQL = strSQL & " SELECT SEQ"
                strSQL = strSQL & " FROM MD_CLOUD_CGV"
                strSQL = strSQL & " WHERE 1=1"
                strSQL = strSQL & " AND YEARMON = '" & strYEARMON & "'"
                strSQL = strSQL & " AND CONT_CODE = '" & strCONT_CODE & "'"

                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CGVCHK")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_SEQAMT(ByVal strYEARMON As String) As String

        Dim strSQL, strFormat, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "select ISNULL(Max(SEQ),0) +1 From MD_CLOUD_AMT WHERE YEARMON = '" & strYEARMON & "'"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SEQ")
            Finally
            End Try
        End With
    End Function

    Public Function SelectRtn_SEQOUT(ByVal strYEARMON As String) As String

        Dim strSQL, strFormat, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "select ISNULL(Max(SEQ),0) +1 From MD_CLOUD_OUT WHERE YEARMON = '" & strYEARMON & "'"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SEQ")
            Finally
            End Try
        End With
    End Function

    Public Function SelectRtn_SEQCGV(ByVal strYEARMON As String) As String

        Dim strSQL, strFormat, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "select ISNULL(Max(SEQ),0) +1 From MD_CLOUD_CGV WHERE YEARMON = '" & strYEARMON & "'"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SEQ")
            Finally
            End Try
        End With
    End Function

    ' ============== 청약 데이터 저장
    Public Function ProcessRtn_AMT(ByVal strInfoXML As String, _
                                   ByVal vntData As Object) As Object

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strSEQ
        Dim strYEARMON

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_CLOUD_AMT = New ceMD_CLOUD_AMT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    For i = 1 To intRows
                        strSEQ = ""
                        strYEARMON = GetElement(vntData, "YEARMON", intColCnt, i, OPTIONAL_STR)

                        If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                            strSEQ = SelectRtn_SEQAMT(strYEARMON)
                            intRtn = InsertRtn_MD_CLOUD_AMT(vntData, intColCnt, i, strYEARMON, strSEQ)
                        Else
                            strSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_STR)
                            intRtn = UpdateRtn_MD_CLOUD_AMT(vntData, intColCnt, i, strYEARMON, strSEQ)
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_AMT")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_CLOUD_AMT.Dispose()
            End Try
        End With
    End Function

    ' ============== 사내수익 그리드 저장 
    Public Function ProcessRtn_OUT(ByVal strInfoXML As String, _
                                   ByVal vntData As Object) As Object

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strSEQ, strSEQ1
        Dim strYEARMON

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_CLOUD_OUT = New ceMD_CLOUD_OUT(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    For i = 1 To intRows
                        strSEQ = ""
                        strYEARMON = GetElement(vntData, "YEARMON", intColCnt, i, OPTIONAL_STR)

                        If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                            strSEQ = SelectRtn_SEQOUT(strYEARMON)
                            intRtn = InsertRtn_MD_CLOUD_OUT(vntData, intColCnt, i, strYEARMON, strSEQ)
                        Else
                            strSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_STR)
                            intRtn = UpdateRtn_MD_CLOUD_OUT(vntData, intColCnt, i, strYEARMON, strSEQ)
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_OUT")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_CLOUD_OUT.Dispose()
            End Try
        End With
    End Function

    Public Function ProcessRtn_CGV(ByVal strInfoXML As String, _
                                   ByVal vntData As Object) As Object

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strSEQ, strSEQ1
        Dim strYEARMON

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_CLOUD_CGV = New ceMD_CLOUD_CGV(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    For i = 1 To intRows
                        strSEQ = ""
                        strYEARMON = GetElement(vntData, "YEARMON", intColCnt, i, OPTIONAL_STR)

                        If GetElement(vntData, "SEQ", intColCnt, i, NULL_NUM, True) = -999999 Then
                            strSEQ = SelectRtn_SEQCGV(strYEARMON)
                            intRtn = InsertRtn_MD_CLOUD_CGV(vntData, intColCnt, i, strYEARMON, strSEQ)
                        Else
                            strSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_STR)
                            intRtn = UpdateRtn_MD_CLOUD_CGV(vntData, intColCnt, i, strYEARMON, strSEQ)
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_CGV")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_CLOUD_CGV.Dispose()
            End Try
        End With
    End Function

    ' =============== 청약 데이터 삭제
    Public Function DeleteRtn_AMT(ByVal strInfoXML As String, _
                                  ByVal strYEARMON As String, _
                                  ByVal strSEQ As Integer, _
                                  ByVal strCONT_CODE As String) As Integer

        Dim intRtn, intRtn2, intRtn3 As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjceMD_CLOUD_AMT = New ceMD_CLOUD_AMT(mobjSCGLConfig)
                mobjceMD_CLOUD_OUT = New ceMD_CLOUD_OUT(mobjSCGLConfig)
                mobjceMD_CLOUD_CGV = New ceMD_CLOUD_CGV(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                '청약데이터 삭제 
                intRtn = mobjceMD_CLOUD_AMT.DeleteDo(strYEARMON, strSEQ)
                '사내수익 삭제
                intRtn = mobjceMD_CLOUD_OUT.DeleteDo_ALL(strYEARMON, strCONT_CODE)
                'CGV 내역 삭제
                intRtn = mobjceMD_CLOUD_CGV.DeleteDo_ALL(strYEARMON, strCONT_CODE)


                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_AMT")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjceMD_CLOUD_AMT.Dispose()
                mobjceMD_CLOUD_OUT.Dispose()
                mobjceMD_CLOUD_CGV.Dispose()
            End Try
        End With
    End Function

    ' =============== DeleteRtn_OUT
    Public Function DeleteRtn_OUT(ByVal strInfoXML As String, _
                                  ByVal strYEARMON As String, _
                                  ByVal strSEQ As Integer) As Integer

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjceMD_CLOUD_OUT = New ceMD_CLOUD_OUT(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjceMD_CLOUD_OUT.DeleteDo(strYEARMON, strSEQ)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_OUT")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjceMD_CLOUD_OUT.Dispose()
            End Try
        End With
    End Function

    ' =============== DeleteRtn_CGV
    Public Function DeleteRtn_CGV(ByVal strInfoXML As String, _
                                  ByVal strYEARMON As String, _
                                  ByVal strSEQ As Integer) As Integer

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjceMD_CLOUD_CGV = New ceMD_CLOUD_CGV(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjceMD_CLOUD_CGV.DeleteDo(strYEARMON, strSEQ)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_CGV")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjceMD_CLOUD_CGV.Dispose()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 비공개 Method"
    Private Function InsertRtn_MD_CLOUD_AMT(ByVal vntData As Object, _
                                            ByVal intColCnt As Integer, _
                                            ByVal intRow As Integer, _
                                            ByRef strYEARMON As String, _
                                            ByRef dblSEQ As Integer) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_CLOUD_AMT.InsertDo( _
                                       strYEARMON, _
                                       dblSEQ, _
                                       GetElement(vntData, "CONT_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "GUBUN", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "EXCLIENTCODE", intColCnt, intRow), _
                                       "00006132", _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "TIM_RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "TIM_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "EX_RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "EX_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "CGV_RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "CGV_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "MC_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "COMMI_TRANS_NO", intColCnt, intRow), _
                                       GetElement(vntData, "COMMI_TAX_NO", intColCnt, intRow), _
                                       GetElement(vntData, "COMMI_VOCH_NO", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_USER", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_DATE", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow))
        Return intRtn
    End Function

    Private Function InsertRtn_MD_CLOUD_OUT(ByVal vntData As Object, _
                                            ByVal intColCnt As Integer, _
                                            ByVal intRow As Integer, _
                                            ByRef strYEARMON As String, _
                                            ByRef dblSEQ As Integer) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_CLOUD_OUT.InsertDo( _
                                       strYEARMON, _
                                       dblSEQ, _
                                       GetElement(vntData, "CONT_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "DEPT_CD", intColCnt, intRow), _
                                       GetElement(vntData, "RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow))
        Return intRtn
    End Function

    Private Function InsertRtn_MD_CLOUD_CGV(ByVal vntData As Object, _
                                           ByVal intColCnt As Integer, _
                                           ByVal intRow As Integer, _
                                           ByRef strYEARMON As String, _
                                           ByRef dblSEQ As Integer) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_CLOUD_CGV.InsertDo( _
                                       strYEARMON, _
                                       dblSEQ, _
                                       GetElement(vntData, "CONT_CODE", intColCnt, intRow), _
                                       "00006132", _
                                       GetElement(vntData, "OUT_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "MEDCODE", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow))
        Return intRtn
    End Function


    Private Function UpdateRtn_MD_CLOUD_AMT(ByVal vntData As Object, _
                                            ByVal intColCnt As Integer, _
                                            ByVal intRow As Integer, _
                                            ByRef strYEARMON As String, _
                                            ByRef dblSEQ As Integer) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_CLOUD_AMT.UpdateDo( _
                                   strYEARMON, _
                                       dblSEQ, _
                                       GetElement(vntData, "CONT_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "GUBUN", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "EXCLIENTCODE", intColCnt, intRow), _
                                       "00006132", _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "TIM_RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "TIM_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "EX_RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "EX_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "CGV_RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "CGV_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "MC_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "COMMI_TRANS_NO", intColCnt, intRow), _
                                       GetElement(vntData, "COMMI_TAX_NO", intColCnt, intRow), _
                                       GetElement(vntData, "COMMI_VOCH_NO", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_USER", intColCnt, intRow), _
                                       GetElement(vntData, "CONFIRM_DATE", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow))
        Return intRtn
    End Function

    Private Function UpdateRtn_MD_CLOUD_OUT(ByVal vntData As Object, _
                                            ByVal intColCnt As Integer, _
                                            ByVal intRow As Integer, _
                                            ByRef strYEARMON As String, _
                                            ByRef dblSEQ As Integer) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_CLOUD_OUT.UpdateDo( _
                                       strYEARMON, _
                                       dblSEQ, _
                                       GetElement(vntData, "CONT_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "DEPT_CD", intColCnt, intRow), _
                                       GetElement(vntData, "RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow))
        Return intRtn
    End Function

    Private Function UpdateRtn_MD_CLOUD_CGV(ByVal vntData As Object, _
                                            ByVal intColCnt As Integer, _
                                            ByVal intRow As Integer, _
                                            ByRef strYEARMON As String, _
                                            ByRef dblSEQ As Integer) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_CLOUD_CGV.UpdateDo( _
                                       strYEARMON, _
                                       dblSEQ, _
                                       GetElement(vntData, "CONT_CODE", intColCnt, intRow), _
                                       "00006132", _
                                       GetElement(vntData, "OUT_AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "MEDCODE", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow))
        Return intRtn
    End Function

#End Region
End Class