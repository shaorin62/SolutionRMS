'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 컨트롤 클래스 메이커 - 한화 S&C
'시스템구분    : 솔루션명 /시스템명/Server Control Class
'실행   환경    : COM+ Service Server Package
'프로그램명    : ccMDCMPRINTREG.vb
'기         능    : - 기능을 명시 합니다.
'특이  사항     : - 특이사항에 대해 표현
'                     -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2004-03-30 오전 10:32:13 By MakeSFARV.2.0.0
'            2) 2004-03-30 오전 10:32:13 By 작성자명을 씁니다.
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports eMDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트

Public Class ccMDETELECTRICLIST
    Inherits ccControl

#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccMDETELECTRICLIST"                  '자신의 클래스명
    Private mobjceMD_ELECTRIC_COMMIT As eMDCO.ceMD_ELECTRIC_COMMIT            '사용할 Entity 변수 선언
    Private mobjceMD_ELECTRIC_PRESUSU As eMDCO.ceMD_ELECTRIC_PRESUSU           '사용할 Entity 변수 선언
    Private mobjceMD_ELECTRIC_SUSUTEMP As eMDCO.ceMD_ELECTRIC_SUSUTEMP
    'Private Const .DBConnStr = "Provider=SQLOLEDB;Data Source=10.110.10.86;Initial Catalog=MCDEV;DSN=MCDEV;UID=devadmin;Pwd=password" '커넥션Setting
#End Region

#Region "GROUP BLOCK : Property 선언"
#End Region

#Region "GROUP BLOCK : Event 선언"

    '********************************************************
    ' GetDataType()  매체종류 콤보 select 처리
    '********************************************************
    Public Function GetDataType(ByVal strInfoXML As String, _
                                ByRef intRowCnt As Integer, ByRef intColCnt As Integer) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = 'MP_KIND' " & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '********************************************************
    ' GetDataType_All()  매체종류 전체포함 검색 콤보 select 처리
    '********************************************************
    Public Function GetDataType_All(ByVal strInfoXML As String, _
                                ByRef intRowCnt As Integer, ByRef intColCnt As Integer) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = " SELECT '', '매체구분-전체' CODE_NAME FROM DUAL UNION ALL SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = 'MP_KIND' "


        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '********************************************************
    ' GetDataTypeChange()  게재면 콤보 select 처리
    '********************************************************
    Public Function GetDataTypeChange(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByRef strMED_FLAG As String) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = '{1}' " & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields, strMED_FLAG)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 공개 Method"
    '=============== 승인취소조회
    Public Function GetClient(ByVal strInfoXML As String, _
                              ByRef intRowCnt As Integer, _
                              ByRef intColCnt As Integer, _
                              ByRef strCODE As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strSelFields
        Dim intRtn

        intRowCnt = 0
        intColCnt = 0

        SetConfig(strInfoXML)

        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체

            If Len(strCODE) > 8 Then
                strSQL = "SELECT HIGHCUSTCODE FROM SC_CUST_HDR WHERE SBSCUSTCODE ='" & strCODE & "'"
            Else
                strSQL = "SELECT HIGHCUSTCODE FROM SC_CUST_HDR WHERE KOBACOCUSTCODE ='" & strCODE & "'"
            End If

            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".GetClient")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '=============== 승인취소조회
    Public Function SelectRtn_CANCEL(ByVal strInfoXML As String, _
                                     ByRef intRowCnt As Integer, _
                                     ByRef intColCnt As Integer, _
                                     ByRef strYEARMON As String, _
                                     ByRef strGUBUN As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strSelFields
        Dim intRtn

        SetConfig(strInfoXML)

        If strYEARMON <> "" Then strWhere = String.Format(" AND (TRANSYEARMON = '{0}')", strYEARMON)

        If strGUBUN = "KOBACO" Then
            strFormat = " SELECT TRANSYEARMON FROM MD_ELECCOMMI_HDR"
            strFormat = strFormat & " where 1=1 "
            strFormat = strFormat & " AND ISNULL(attr03,'') <> 'Y' "
            strFormat = strFormat & " AND REAL_MED_CODE <> 'B01092'"
            strFormat = strFormat & " GROUP BY TRANSYEARMON"
            strFormat = strFormat & " HAVING 1=1 {0}"
        Else
            '미디어 크리에이티브 인것 
            strFormat = strFormat & " SELECT "
            strFormat = strFormat & " TRANSYEARMON "
            strFormat = strFormat & " FROM MD_ELECCOMMI_HDR "
            strFormat = strFormat & " WHERE 1=1 "
            strFormat = strFormat & " AND ISNULL(attr03,'') <> 'Y' "
            strFormat = strFormat & " AND REAL_MED_CODE = 'B01092'"
            strFormat = strFormat & " GROUP BY TRANSYEARMON "
            strFormat = strFormat & " HAVING 1=1 "
            strFormat = strFormat & " {0}"


        End If

        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CANCEL")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    '=============== 승인전승인여부조회
    Public Function SelectRtn_CONFIRM(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByVal strYEARMON As String, _
                                      ByVal strGUBUN As String) As Object

        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim intRtn

        SetConfig(strInfoXML)


        strFormat = strFormat & " SELECT "
        strFormat = strFormat & " YEARMON "
        strFormat = strFormat & " FROM MD_ELECTRIC_SUSUTEMP"
        strFormat = strFormat & " WHERE YEARMON = '" & strYEARMON & "'"
        strFormat = strFormat & " AND ISNULL(ATTR05,'') = '" & strGUBUN & "'"

        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CONFIRM")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    '=============== 승인조회 [미생성내역조회]
    Public Function SelectRtn(ByVal strInfoXML As String, _
                              ByRef intRowCnt As Integer, _
                              ByRef intColCnt As Integer, _
                              ByRef strYEARMON As String, _
                              ByRef strCLIENTNAME As String, _
                              ByRef strGFLAG As String) As Object
        'strYEARMON, strCLIENTNAME,strGFLAG
        Dim strCols As String           '컬럼변수
        Dim strWhere As String          'Where조건 변수
        Dim strFormat As String         'SQL Format 변수
        Dim strSQL As String            'SQL 변수
        Dim vntData As Object           'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String        'XML  Return 변수(XML  을 사용할 때 선언)
        Dim strSelFields
        Dim intCnt
        Dim intRtn, intRtn2
        Dim strCOMMONSQL As String      '전파 공통분조회
        Dim strCOMMISQL As String       '전파 수수료 부분조회
        Dim strTRUSQL As String         '전파 위수탁 부분조회
        Dim strTRUSUMSQL As String      '전파 위수탁소계 조회
        Dim strCOMMISUMSQL As String    '전파 수수료 소계 조회
        Dim strTRUSQLFLAG As String     '전파 위수탁 부분조회
        Dim strTRUSUMSQLFLAG As String  '전파 위수탁소계 조회
        Dim Con1, Con2, Con3, Con4, Con5 As String

        SetConfig(strInfoXML)
        strCOMMONSQL = " SELECT"
        strCOMMONSQL = strCOMMONSQL & "         			A.AMT,A.CLIENTCODE,A.REAL_MED_CODE,"
        strCOMMONSQL = strCOMMONSQL & "         			B.CNT,B.SCNT,B.MCNT,B.LCNT,B.XLCNT,"
        strCOMMONSQL = strCOMMONSQL & "         			A.INPUT_MEDFLAG,"
        strCOMMONSQL = strCOMMONSQL & "         			CASE WHEN A.INPUT_MEDFLAG = '01' THEN"
        strCOMMONSQL = strCOMMONSQL & "         				CASE WHEN B.CNT <= 200000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN A.REAL_MED_CODE = 'B00107' THEN "
        strCOMMONSQL = strCOMMONSQL & "							SCNT-MINUCNT"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "							FLOOR(B.SCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "							END"
        strCOMMONSQL = strCOMMONSQL & "         				WHEN B.CNT > 200000000 AND B.CNT <= 800000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN A.REAL_MED_CODE = 'B00107' THEN "
        strCOMMONSQL = strCOMMONSQL & "							MCNT-MINUCNT"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "							FLOOR(B.MCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "							END"
        strCOMMONSQL = strCOMMONSQL & "         				ELSE"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN A.REAL_MED_CODE = 'B00107' THEN "
        strCOMMONSQL = strCOMMONSQL & "							LCNT-MINUCNT"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "							FLOOR(B.LCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "							END"
        strCOMMONSQL = strCOMMONSQL & "						 END"
        strCOMMONSQL = strCOMMONSQL & "         			ELSE "
        strCOMMONSQL = strCOMMONSQL & "						CASE WHEN A.REAL_MED_CODE ='B00107' THEN"
        strCOMMONSQL = strCOMMONSQL & "						XLCNT-MINUCNT"
        strCOMMONSQL = strCOMMONSQL & "						ELSE"
        strCOMMONSQL = strCOMMONSQL & "						FLOOR(B.XLCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "						END"
        strCOMMONSQL = strCOMMONSQL & "					END SUSU,"
        strCOMMONSQL = strCOMMONSQL & "         			CASE WHEN A.INPUT_MEDFLAG = '01' THEN"
        strCOMMONSQL = strCOMMONSQL & "         				 CASE WHEN B.CNT <= 200000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "         				 12"
        strCOMMONSQL = strCOMMONSQL & "         				 WHEN B.CNT >200000000 AND B.CNT <= 800000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "         				 11"
        strCOMMONSQL = strCOMMONSQL & "         				 ELSE 9 END"
        strCOMMONSQL = strCOMMONSQL & "         			ELSE 13 END SUSURATE,"
        strCOMMONSQL = strCOMMONSQL & "         			MINUCNT,"
        strCOMMONSQL = strCOMMONSQL & "         			A.GFLAG,"
        strCOMMONSQL = strCOMMONSQL & "         			A.DEPTCD"
        strCOMMONSQL = strCOMMONSQL & "         		FROM"
        strCOMMONSQL = strCOMMONSQL & "         		("
        strCOMMONSQL = strCOMMONSQL & "         		SELECT"
        strCOMMONSQL = strCOMMONSQL & "         		YEARMON,"
        strCOMMONSQL = strCOMMONSQL & "         		CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         		REAL_MED_CODE,"
        strCOMMONSQL = strCOMMONSQL & "         		SUM(AMT) AMT,"
        strCOMMONSQL = strCOMMONSQL & "				CASE INPUT_MEDFLAG WHEN '03' THEN '02'"
        strCOMMONSQL = strCOMMONSQL & "				WHEN '20' THEN '10'"
        strCOMMONSQL = strCOMMONSQL & "				ELSE INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "                END AS INPUT_MEDFLAG,"
        strCOMMONSQL = strCOMMONSQL & "         		DENSE_RANK() OVER (ORDER BY CLIENTCODE,REAL_MED_CODE DESC) TRANSRANK,"
        strCOMMONSQL = strCOMMONSQL & "         		GFLAG,"
        strCOMMONSQL = strCOMMONSQL & "         		DBO.SC_SEQCODE_DEPTCD_FUN(SUBSEQ) DEPTCD"
        strCOMMONSQL = strCOMMONSQL & "         		FROM MD_ELECTRIC_MEDIUM"
        strCOMMONSQL = strCOMMONSQL & "         		WHERE ISNULL(MEDCODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         		AND ISNULL(REAL_MED_CODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         		AND ISNULL(TRU_TRANS_NO,'') = '' "
        strCOMMONSQL = strCOMMONSQL & "         		AND ISNULL(COMMI_TRANS_NO,'') =''"
        strCOMMONSQL = strCOMMONSQL & "         		AND (ISNULL(SPONSOR,'') = '' OR SPONSOR <> 'Y')"
        strCOMMONSQL = strCOMMONSQL & "         		AND YEARMON = '" & strYEARMON & "'"
        strCOMMONSQL = strCOMMONSQL & "         		AND (AMT <> 0 AND AMT IS NOT NULL)"
        strCOMMONSQL = strCOMMONSQL & "         		GROUP BY YEARMON,CLIENTCODE,REAL_MED_CODE,INPUT_MEDFLAG,GFLAG,SUBSEQ"
        strCOMMONSQL = strCOMMONSQL & "         		) A LEFT JOIN"
        strCOMMONSQL = strCOMMONSQL & "         		("
        strCOMMONSQL = strCOMMONSQL & "         		SELECT"
        strCOMMONSQL = strCOMMONSQL & "         		CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         		SUM(AMT) CNT,"
        strCOMMONSQL = strCOMMONSQL & "         		FLOOR((SUM(AMT)*0.13)) AS XLCNT,"
        strCOMMONSQL = strCOMMONSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strCOMMONSQL = strCOMMONSQL & "					0 "
        strCOMMONSQL = strCOMMONSQL & "                ELSE "
        strCOMMONSQL = strCOMMONSQL & "					CASE WHEN SUM(AMT) <= 200000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "					FLOOR(SUM(AMT)*0.12) END"
        strCOMMONSQL = strCOMMONSQL & "				END AS SCNT,"
        strCOMMONSQL = strCOMMONSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN"
        strCOMMONSQL = strCOMMONSQL & "					0"
        strCOMMONSQL = strCOMMONSQL & "				ELSE"
        strCOMMONSQL = strCOMMONSQL & "					CASE WHEN SUM(AMT) > 200000000 AND SUM(AMT) <= 800000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "					24000000 + FLOOR((SUM(AMT)-(200000000))*0.11) END"
        strCOMMONSQL = strCOMMONSQL & "				END AS MCNT,"
        strCOMMONSQL = strCOMMONSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strCOMMONSQL = strCOMMONSQL & "					0"
        strCOMMONSQL = strCOMMONSQL & "				ELSE"
        strCOMMONSQL = strCOMMONSQL & "					CASE WHEN SUM(AMT) > 800000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "					24000000 + 66000000 + FLOOR((SUM(AMT)-800000000)*0.09) END"
        strCOMMONSQL = strCOMMONSQL & "				END AS LCNT,"
        strCOMMONSQL = strCOMMONSQL & "         	    INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         			   FROM"
        strCOMMONSQL = strCOMMONSQL & "         			   ("
        strCOMMONSQL = strCOMMONSQL & "         				   SELECT"
        strCOMMONSQL = strCOMMONSQL & "         				   YEARMON,"
        strCOMMONSQL = strCOMMONSQL & "         				   CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         				   REAL_MED_CODE,"
        strCOMMONSQL = strCOMMONSQL & "         				   SUM(AMT) AMT,"
        strCOMMONSQL = strCOMMONSQL & "         				   CASE INPUT_MEDFLAG WHEN '03' THEN '02'"
        strCOMMONSQL = strCOMMONSQL & "						       WHEN '20' THEN '10'"
        strCOMMONSQL = strCOMMONSQL & "						       ELSE INPUT_MEDFLAG "
        strCOMMONSQL = strCOMMONSQL & "                            END AS INPUT_MEDFLAG,"
        strCOMMONSQL = strCOMMONSQL & "         				   DENSE_RANK() OVER (ORDER BY CLIENTCODE,REAL_MED_CODE DESC) TRANSRANK"
        strCOMMONSQL = strCOMMONSQL & "         				   FROM MD_ELECTRIC_MEDIUM"
        strCOMMONSQL = strCOMMONSQL & "         				   WHERE ISNULL(MEDCODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         				   AND ISNULL(REAL_MED_CODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         				   AND ISNULL(TRU_TRANS_NO,'') =''"
        strCOMMONSQL = strCOMMONSQL & "         				   AND ISNULL(COMMI_TRANS_NO,'') =''"
        strCOMMONSQL = strCOMMONSQL & "         				   AND (ISNULL(SPONSOR,'') = '' OR SPONSOR <> 'Y')"
        strCOMMONSQL = strCOMMONSQL & "         				   AND YEARMON = '" & strYEARMON & "'"
        strCOMMONSQL = strCOMMONSQL & "         				   AND (AMT <> 0 AND AMT IS NOT NULL)"
        strCOMMONSQL = strCOMMONSQL & "         				   GROUP BY YEARMON,CLIENTCODE,REAL_MED_CODE,INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         			   ) DATA"
        strCOMMONSQL = strCOMMONSQL & "         		GROUP BY CLIENTCODE,INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         		) B ON A.CLIENTCODE = B.CLIENTCODE AND A.INPUT_MEDFLAG = B.INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         		LEFT JOIN"
        strCOMMONSQL = strCOMMONSQL & "         		("
        strCOMMONSQL = strCOMMONSQL & "         		SELECT"
        strCOMMONSQL = strCOMMONSQL & "         		CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         		SUM(SUSU) MINUCNT,"
        strCOMMONSQL = strCOMMONSQL & "         		INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         		FROM"
        strCOMMONSQL = strCOMMONSQL & "         		("
        strCOMMONSQL = strCOMMONSQL & "         		 	SELECT"
        strCOMMONSQL = strCOMMONSQL & "         			A.AMT AMT,"
        strCOMMONSQL = strCOMMONSQL & "         			A.CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         			A.REAL_MED_CODE,"
        strCOMMONSQL = strCOMMONSQL & "         			B.CNT CNT,"
        strCOMMONSQL = strCOMMONSQL & "         			B.SCNT SCNT,"
        strCOMMONSQL = strCOMMONSQL & "         			B.MCNT MCNT,"
        strCOMMONSQL = strCOMMONSQL & "         			B.LCNT LCNT,"
        strCOMMONSQL = strCOMMONSQL & "         			A.INPUT_MEDFLAG,"
        strCOMMONSQL = strCOMMONSQL & "					CASE WHEN A.INPUT_MEDFLAG = '01' THEN"
        strCOMMONSQL = strCOMMONSQL & "         				 CASE WHEN B.CNT <= 200000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN A.REAL_MED_CODE = 'B00107' THEN "
        strCOMMONSQL = strCOMMONSQL & "							0"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "							FLOOR(B.SCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "							END"
        strCOMMONSQL = strCOMMONSQL & "         				WHEN B.CNT > 200000000 AND B.CNT <= 800000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN A.REAL_MED_CODE = 'B00107' THEN "
        strCOMMONSQL = strCOMMONSQL & "							0"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "							FLOOR(B.MCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "							END"
        strCOMMONSQL = strCOMMONSQL & "         				ELSE"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN A.REAL_MED_CODE = 'B00107' THEN "
        strCOMMONSQL = strCOMMONSQL & "							0"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "							FLOOR(B.LCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "							END"
        strCOMMONSQL = strCOMMONSQL & "						 END"
        strCOMMONSQL = strCOMMONSQL & "         			ELSE "
        strCOMMONSQL = strCOMMONSQL & "						CASE WHEN A.REAL_MED_CODE ='B00107' THEN"
        strCOMMONSQL = strCOMMONSQL & "						0"
        strCOMMONSQL = strCOMMONSQL & "						ELSE"
        strCOMMONSQL = strCOMMONSQL & "						FLOOR(B.XLCNT*(A.AMT/B.CNT))"
        strCOMMONSQL = strCOMMONSQL & "						END "
        strCOMMONSQL = strCOMMONSQL & "					END SUSU"
        strCOMMONSQL = strCOMMONSQL & "         			FROM"
        strCOMMONSQL = strCOMMONSQL & "         				("
        strCOMMONSQL = strCOMMONSQL & "         				 	SELECT"
        strCOMMONSQL = strCOMMONSQL & "         					SUM(AMT) AMT,"
        strCOMMONSQL = strCOMMONSQL & "         					CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         					REAL_MED_CODE,"
        strCOMMONSQL = strCOMMONSQL & "         					INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         					FROM"
        strCOMMONSQL = strCOMMONSQL & "         					(	"
        strCOMMONSQL = strCOMMONSQL & "         						 SELECT"
        strCOMMONSQL = strCOMMONSQL & "         						 YEARMON,"
        strCOMMONSQL = strCOMMONSQL & "         						 CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         						 REAL_MED_CODE,"
        strCOMMONSQL = strCOMMONSQL & "         						 SUM(AMT) AMT,"
        strCOMMONSQL = strCOMMONSQL & "         						 CASE INPUT_MEDFLAG WHEN '03' THEN '02'"
        strCOMMONSQL = strCOMMONSQL & "							         WHEN '20' THEN '10'"
        strCOMMONSQL = strCOMMONSQL & "							         ELSE INPUT_MEDFLAG  "
        strCOMMONSQL = strCOMMONSQL & "							         END AS INPUT_MEDFLAG,"
        strCOMMONSQL = strCOMMONSQL & "         						 DENSE_RANK() OVER (ORDER BY CLIENTCODE,REAL_MED_CODE DESC) TRANSRANK"
        strCOMMONSQL = strCOMMONSQL & "         						 FROM MD_ELECTRIC_MEDIUM"
        strCOMMONSQL = strCOMMONSQL & "         				         WHERE ISNULL(MEDCODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         				         AND ISNULL(REAL_MED_CODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         				         AND ISNULL(TRU_TRANS_NO,'') =''"
        strCOMMONSQL = strCOMMONSQL & "         				         AND ISNULL(COMMI_TRANS_NO,'') =''"
        strCOMMONSQL = strCOMMONSQL & "         				         AND (ISNULL(SPONSOR,'') = '' OR SPONSOR <> 'Y')"
        strCOMMONSQL = strCOMMONSQL & "         						 AND YEARMON = '" & strYEARMON & "'"
        strCOMMONSQL = strCOMMONSQL & "         						 AND (AMT <> 0 AND AMT IS NOT NULL)"
        strCOMMONSQL = strCOMMONSQL & "         						 GROUP BY YEARMON,CLIENTCODE,REAL_MED_CODE,INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         					) DATA"
        strCOMMONSQL = strCOMMONSQL & "         					GROUP BY CLIENTCODE,REAL_MED_CODE,INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         				) A"
        strCOMMONSQL = strCOMMONSQL & "         				LEFT JOIN"
        strCOMMONSQL = strCOMMONSQL & "         				("
        strCOMMONSQL = strCOMMONSQL & "         				 	SELECT"
        strCOMMONSQL = strCOMMONSQL & "         					CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         					SUM(AMT) CNT,"
        strCOMMONSQL = strCOMMONSQL & "							FLOOR((SUM(AMT)*0.13)) AS XLCNT,"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strCOMMONSQL = strCOMMONSQL & "								0 "
        strCOMMONSQL = strCOMMONSQL & "							ELSE "
        strCOMMONSQL = strCOMMONSQL & "								CASE WHEN SUM(AMT) <= 200000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "								FLOOR(SUM(AMT)*0.12) END"
        strCOMMONSQL = strCOMMONSQL & "							END AS SCNT,"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strCOMMONSQL = strCOMMONSQL & "								0"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "								CASE WHEN SUM(AMT) > 200000000 AND SUM(AMT) <= 800000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "								24000000 + FLOOR((SUM(AMT)-(200000000))*0.11) END"
        strCOMMONSQL = strCOMMONSQL & "							END AS MCNT,"
        strCOMMONSQL = strCOMMONSQL & "							CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strCOMMONSQL = strCOMMONSQL & "								0"
        strCOMMONSQL = strCOMMONSQL & "							ELSE"
        strCOMMONSQL = strCOMMONSQL & "								CASE WHEN SUM(AMT) > 800000000 THEN"
        strCOMMONSQL = strCOMMONSQL & "								24000000 + 66000000 + FLOOR((SUM(AMT)-800000000)*0.09) END"
        strCOMMONSQL = strCOMMONSQL & "							END AS LCNT,"
        strCOMMONSQL = strCOMMONSQL & "         						   INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         						   FROM"
        strCOMMONSQL = strCOMMONSQL & "         						   ("
        strCOMMONSQL = strCOMMONSQL & "         							   SELECT"
        strCOMMONSQL = strCOMMONSQL & "         							   YEARMON,"
        strCOMMONSQL = strCOMMONSQL & "         							   CLIENTCODE,"
        strCOMMONSQL = strCOMMONSQL & "         							   REAL_MED_CODE,"
        strCOMMONSQL = strCOMMONSQL & "         							   SUM(AMT) AMT,"
        strCOMMONSQL = strCOMMONSQL & "         							   CASE INPUT_MEDFLAG WHEN '03' THEN '02'"
        strCOMMONSQL = strCOMMONSQL & "									       WHEN '20' THEN '10'"
        strCOMMONSQL = strCOMMONSQL & "									       ELSE INPUT_MEDFLAG  "
        strCOMMONSQL = strCOMMONSQL & "									       END AS INPUT_MEDFLAG,"
        strCOMMONSQL = strCOMMONSQL & "         							   DENSE_RANK() OVER (ORDER BY CLIENTCODE,REAL_MED_CODE DESC) TRANSRANK"
        strCOMMONSQL = strCOMMONSQL & "         							   FROM MD_ELECTRIC_MEDIUM"
        strCOMMONSQL = strCOMMONSQL & "         				               WHERE ISNULL(MEDCODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         				               AND ISNULL(REAL_MED_CODE,'') <> ''"
        strCOMMONSQL = strCOMMONSQL & "         				               AND ISNULL(TRU_TRANS_NO,'') =''"
        strCOMMONSQL = strCOMMONSQL & "         				               AND ISNULL(COMMI_TRANS_NO,'') =''"
        strCOMMONSQL = strCOMMONSQL & "         				               AND (ISNULL(SPONSOR,'') = '' OR SPONSOR <> 'Y')"
        strCOMMONSQL = strCOMMONSQL & "         							   AND YEARMON = '" & strYEARMON & "'"
        strCOMMONSQL = strCOMMONSQL & "         							   AND (AMT <> 0 AND AMT IS NOT NULL)"
        strCOMMONSQL = strCOMMONSQL & "         							   GROUP BY YEARMON,CLIENTCODE,REAL_MED_CODE,INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         						   ) DATA"
        strCOMMONSQL = strCOMMONSQL & "         					GROUP BY CLIENTCODE,INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         				) B ON A.CLIENTCODE = B.CLIENTCODE AND A.INPUT_MEDFLAG = B.INPUT_MEDFLAG"
        strCOMMONSQL = strCOMMONSQL & "         		) DATA"
        strCOMMONSQL = strCOMMONSQL & "         		GROUP BY CLIENTCODE,INPUT_MEDFLAG	"
        strCOMMONSQL = strCOMMONSQL & "         		) C ON A.CLIENTCODE = C.CLIENTCODE AND A.INPUT_MEDFLAG = C.INPUT_MEDFLAG"

        '=====위수탁
        strTRUSQL = " SELECT"
        strTRUSQL = strTRUSQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strTRUSQL = strTRUSQL & " 	INPUT_MEDFLAG,"
        strTRUSQL = strTRUSQL & " 	CASE INPUT_MEDFLAG WHEN '01' THEN 'TV인정'"
        strTRUSQL = strTRUSQL & " 	WHEN '02' THEN 'RD인정'"
        strTRUSQL = strTRUSQL & " 	WHEN '10' THEN 'DMB인정' END AS INPUT_MEDNAME,"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
        strTRUSQL = strTRUSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
        strTRUSQL = strTRUSQL & " 	'1' GUBUN,"
        strTRUSQL = strTRUSQL & " 	'1' TOTGUBUN"
        strTRUSQL = strTRUSQL & " 	FROM"
        strTRUSQL = strTRUSQL & " 	(" & strCOMMONSQL
        strTRUSQL = strTRUSQL & " 	) DATA WHERE DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE)  LIKE '%" & strCLIENTNAME & "%'"
        strTRUSQL = strTRUSQL & " 	GROUP BY CLIENTCODE,INPUT_MEDFLAG"
        '=====수수료
        strCOMMISQL = " SELECT"
        strCOMMISQL = strCOMMISQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strCOMMISQL = strCOMMISQL & " 	INPUT_MEDFLAG,"
        strCOMMISQL = strCOMMISQL & " 	CASE INPUT_MEDFLAG WHEN '01' THEN 'TV수수료'"
        strCOMMISQL = strCOMMISQL & " 	WHEN '02' THEN 'RD수수료'"
        strCOMMISQL = strCOMMISQL & " 	WHEN '10' THEN 'DMB수수료' END AS INPUT_MEDNAME,"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
        strCOMMISQL = strCOMMISQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
        strCOMMISQL = strCOMMISQL & " 	'2' GUBUN,"
        strCOMMISQL = strCOMMISQL & " 	'1' TOTGUBUN"
        strCOMMISQL = strCOMMISQL & " 	FROM"
        strCOMMISQL = strCOMMISQL & " 	(" & strCOMMONSQL
        strCOMMISQL = strCOMMISQL & " 	) DATA WHERE DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE)  LIKE '%" & strCLIENTNAME & "%'"
        strCOMMISQL = strCOMMISQL & " 	GROUP BY CLIENTCODE,INPUT_MEDFLAG"
        '=====위수탁계
        strTRUSUMSQL = " SELECT"
        strTRUSUMSQL = strTRUSUMSQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strTRUSUMSQL = strTRUSUMSQL & " 	'' INPUT_MEDFLAG,"
        strTRUSUMSQL = strTRUSUMSQL & " 	'신탁계' INPUT_MEDNAME,"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
        strTRUSUMSQL = strTRUSUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
        strTRUSUMSQL = strTRUSUMSQL & " 	'3' GUBUN,"
        strTRUSUMSQL = strTRUSUMSQL & " 	'1' TOTGUBUN"
        strTRUSUMSQL = strTRUSUMSQL & " 	FROM"
        strTRUSUMSQL = strTRUSUMSQL & " 	(" & strCOMMONSQL
        strTRUSUMSQL = strTRUSUMSQL & " 	) DATA WHERE DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE)  LIKE '%" & strCLIENTNAME & "%'"
        strTRUSUMSQL = strTRUSUMSQL & " 	GROUP BY CLIENTCODE"
        '=====수수료계
        strCOMMISUMSQL = " SELECT"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	'' INPUT_MEDFLAG,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	'수수료계' INPUT_MEDNAME,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	'4' GUBUN,"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	'1' TOTGUBUN"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	FROM"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	(" & strCOMMONSQL
        strCOMMISUMSQL = strCOMMISUMSQL & " 	) DATA WHERE DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE)  LIKE '%" & strCLIENTNAME & "%'"
        strCOMMISUMSQL = strCOMMISUMSQL & " 	GROUP BY CLIENTCODE"
        '=====위수탁 공동,이월 추가
        strTRUSQLFLAG = " SELECT"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	INPUT_MEDFLAG,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	CASE INPUT_MEDFLAG WHEN '01' THEN 'TV인정'"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	WHEN '02' THEN 'RD인정'"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	WHEN '10' THEN 'DMB인정' END AS INPUT_MEDNAME,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	'1' GUBUN,"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	'1' TOTGUBUN,GFLAG"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	FROM"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	(" & strCOMMONSQL
        strTRUSQLFLAG = strTRUSQLFLAG & " 	) DATA"
        strTRUSQLFLAG = strTRUSQLFLAG & " 	GROUP BY CLIENTCODE,INPUT_MEDFLAG,GFLAG"

        '=====위수탁계 공동이월추가
        strTRUSUMSQLFLAG = " SELECT"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	'' INPUT_MEDFLAG,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	'신탁계' INPUT_MEDNAME,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	'3' GUBUN,"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	'1' TOTGUBUN,GFLAG"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	FROM"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	(" & strCOMMONSQL
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	) DATA"
        strTRUSUMSQLFLAG = strTRUSUMSQLFLAG & " 	GROUP BY CLIENTCODE,GFLAG"
        If strGFLAG = "A" Then
            If strCLIENTNAME = "" Then
                strSQL = " SELECT"
                strSQL = strSQL & " CLIENTNAME,INPUT_MEDFLAG,INPUT_MEDNAME,"
                strSQL = strSQL & " R0,R1,R2,R3,R4,R5,R6,GUBUN,TOTGUBUN"
                strSQL = strSQL & " FROM"
                strSQL = strSQL & " ("
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
                strSQL = strSQL & " 	INPUT_MEDFLAG,"
                strSQL = strSQL & " 	CASE INPUT_MEDFLAG WHEN '01' THEN 'TV인정'"
                strSQL = strSQL & " 	WHEN '02' THEN 'RD인정'"
                strSQL = strSQL & " 	WHEN '10' THEN 'DMB인정' END AS INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
                strSQL = strSQL & " 	'1' GUBUN,"
                strSQL = strSQL & " 	'1' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	GROUP BY CLIENTCODE,INPUT_MEDFLAG"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
                strSQL = strSQL & " 	INPUT_MEDFLAG,"
                strSQL = strSQL & " 	CASE INPUT_MEDFLAG WHEN '01' THEN 'TV수수료'"
                strSQL = strSQL & " 	WHEN '02' THEN 'RD수수료'"
                strSQL = strSQL & " 	WHEN '10' THEN 'DMB수수료' END AS INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
                strSQL = strSQL & " 	'2' GUBUN,"
                strSQL = strSQL & " 	'1' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	GROUP BY CLIENTCODE,INPUT_MEDFLAG"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'신탁계' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
                strSQL = strSQL & " 	'3' GUBUN,"
                strSQL = strSQL & " 	'1' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	GROUP BY CLIENTCODE"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'수수료계' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
                strSQL = strSQL & " 	'4' GUBUN,"
                strSQL = strSQL & " 	'1' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	GROUP BY CLIENTCODE"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'TV인정' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
                strSQL = strSQL & " 	'1' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	WHERE INPUT_MEDFLAG = '01'"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'TV수수료' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
                strSQL = strSQL & " 	'2' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	WHERE INPUT_MEDFLAG = '01'"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'RADIO인정' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
                strSQL = strSQL & " 	'3' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	WHERE INPUT_MEDFLAG = '02'"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'RD수수료' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
                strSQL = strSQL & " 	'4' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	WHERE INPUT_MEDFLAG = '02'"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'DMB인정' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
                strSQL = strSQL & " 	'5' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	WHERE INPUT_MEDFLAG = '10'"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'DMB수수료' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
                strSQL = strSQL & " 	'6' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	WHERE INPUT_MEDFLAG = '10'"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'신탁계' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN AMT ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN AMT ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN AMT ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN AMT ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN AMT ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN AMT ELSE 0 END) R6,"
                strSQL = strSQL & " 	'7' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " 	UNION ALL"
                strSQL = strSQL & " 	SELECT"
                strSQL = strSQL & " 	'총계' CLIENTNAME,"
                strSQL = strSQL & " 	'' INPUT_MEDFLAG,"
                strSQL = strSQL & " 	'수수료계' INPUT_MEDNAME,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) +"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R0,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00107' THEN SUSU ELSE 0 END) R1,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00111' THEN SUSU ELSE 0 END) R2,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00109' THEN SUSU ELSE 0 END) R3,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00110' THEN SUSU ELSE 0 END) R4,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00108' THEN SUSU ELSE 0 END) R5,"
                strSQL = strSQL & " 	SUM(CASE REAL_MED_CODE WHEN 'B00112' THEN SUSU ELSE 0 END) R6,"
                strSQL = strSQL & " 	'8' GUBUN,"
                strSQL = strSQL & " 	'2' TOTGUBUN"
                strSQL = strSQL & " 	FROM"
                strSQL = strSQL & " 	("
                strSQL = strSQL & strCOMMONSQL
                strSQL = strSQL & " 	) DATA"
                strSQL = strSQL & " ) TOTALDATA"
                strSQL = strSQL & " ORDER BY TOTGUBUN,CLIENTNAME,GUBUN"
            Else
                strSQL = " SELECT"
                strSQL = strSQL & " CLIENTNAME,INPUT_MEDFLAG,INPUT_MEDNAME,"
                strSQL = strSQL & " R0,R1,R2,R3,R4,R5,R6,GUBUN,TOTGUBUN"
                strSQL = strSQL & " FROM"
                strSQL = strSQL & " ("
                strSQL = strSQL & strTRUSQL
                strSQL = strSQL & " UNION ALL "
                strSQL = strSQL & strCOMMISQL
                strSQL = strSQL & " UNION ALL "
                strSQL = strSQL & strTRUSUMSQL
                strSQL = strSQL & " UNION ALL "
                strSQL = strSQL & strCOMMISUMSQL
                strSQL = strSQL & " ) TOTALDATA "
                strSQL = strSQL & " ORDER BY TOTGUBUN,CLIENTNAME,GUBUN"
            End If
        ElseIf strGFLAG = "G" Then
            strSQL = " SELECT"
            strSQL = strSQL & " CLIENTNAME,INPUT_MEDFLAG,INPUT_MEDNAME,"
            strSQL = strSQL & " R0,R1,R2,R3,R4,R5,R6,GUBUN,TOTGUBUN"
            strSQL = strSQL & " FROM"
            strSQL = strSQL & " (" & strTRUSQLFLAG
            strSQL = strSQL & " UNION ALL " & strTRUSUMSQLFLAG
            strSQL = strSQL & " ) TOTALDATA"
            strSQL = strSQL & " WHERE GFLAG = 'G' "
            strSQL = strSQL & " ORDER BY TOTGUBUN,CLIENTNAME,GUBUN"

        ElseIf strGFLAG = "N" Then
            strSQL = " SELECT"
            strSQL = strSQL & " CLIENTNAME,INPUT_MEDFLAG,INPUT_MEDNAME,"
            strSQL = strSQL & " R0,R1,R2,R3,R4,R5,R6,GUBUN,TOTGUBUN"
            strSQL = strSQL & " FROM"
            strSQL = strSQL & " (" & strTRUSQLFLAG
            strSQL = strSQL & " UNION ALL " & strTRUSUMSQLFLAG
            strSQL = strSQL & " ) TOTALDATA"
            strSQL = strSQL & " WHERE GFLAG <> 'G' AND ISNULL(GFLAG,'') <> ''"
            strSQL = strSQL & " ORDER BY TOTGUBUN,CLIENTNAME,GUBUN"
        End If



        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            'strSQL = String.Format(strFormat, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    ' =============== DeleteRtn Sample Code
    Public Function DeleteRtn(ByVal strInfoXML As String, _
                              ByVal strYEARMON As String, _
                              ByVal mstrGUBUN As String) As Integer   '데이터 DELETE

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )
        Dim strCANCELSQL As String
        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                '   mobjceMD_ELECTRIC_COMMIT = New ceMD_ELECTRIC_COMMIT(mobjSCGLConfig)
                mobjceMD_ELECTRIC_SUSUTEMP = New ceMD_ELECTRIC_SUSUTEMP(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출

                '수수료율 필요가 없어져서 생성 삭제하지 않는다. _ 201201 월 부터
                '  intRtn = mobjceMD_ELECTRIC_COMMIT.DeleteDo(strYEARMON)

                strCANCELSQL = " DELETE FROM MD_ELECTRIC_SUSUTEMP "
                strCANCELSQL = strCANCELSQL & " WHERE YEARMON ='" & strYEARMON & "'"
                strCANCELSQL = strCANCELSQL & " AND ATTR05 = '" & mstrGUBUN & "'"

                intRtn = mobjceMD_ELECTRIC_SUSUTEMP.SUSUTEMPDeleteDo(strCANCELSQL)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                'mobjceMD_ELECTRIC_COMMIT.Dispose()
                mobjceMD_ELECTRIC_SUSUTEMP.Dispose()
            End Try
        End With
    End Function

    ' =============절대비율 생성
    Public Function SelectRtn_ABS(ByVal strYEARMON, _
                                  ByVal strGUBUN) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String
        'SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보 Config 개체

            Try
                If strGUBUN = "KOBACO" Then
                    strSQL = " SELECT "
                    strSQL = strSQL & " (AMT1.AMT/AMT2.SUSU) ABSVALUE "
                    strSQL = strSQL & " FROM"
                    strSQL = strSQL & " ("
                    strSQL = strSQL & "     SELECT TOT AMT FROM MD_ELECTRIC_PRESUSU"
                    strSQL = strSQL & "     WHERE DIVFLAG = '총계' AND MGBN = '신탁계'"
                    strSQL = strSQL & "     AND YEARMON = '" & strYEARMON & "'"
                    strSQL = strSQL & "     AND ISNULL(ATTR01,'') = '' "
                    strSQL = strSQL & " ) AMT1,"
                    strSQL = strSQL & " ("
                    strSQL = strSQL & "     SELECT TOT SUSU FROM MD_ELECTRIC_PRESUSU"
                    strSQL = strSQL & "     WHERE DIVFLAG = '총계' AND MGBN = '수수료계'"
                    strSQL = strSQL & "     AND YEARMON = '" & strYEARMON & "'"
                    strSQL = strSQL & "     AND ISNULL(ATTR01,'') = '' "
                    strSQL = strSQL & " ) AMT2"
                Else
                    strSQL = " SELECT "
                    strSQL = strSQL & " (AMT1.AMT/AMT2.SUSU) ABSVALUE "
                    strSQL = strSQL & " FROM"
                    strSQL = strSQL & " ("
                    strSQL = strSQL & "     SELECT TOT AMT FROM MD_ELECTRIC_PRESUSU"
                    strSQL = strSQL & "     WHERE DIVFLAG = '총계' AND MGBN = '신탁계'"
                    strSQL = strSQL & "     AND YEARMON = '" & strYEARMON & "'"
                    strSQL = strSQL & "     AND ISNULL(ATTR01,'') <> '' "
                    strSQL = strSQL & " ) AMT1,"
                    strSQL = strSQL & " ("
                    strSQL = strSQL & "     SELECT TOT SUSU FROM MD_ELECTRIC_PRESUSU"
                    strSQL = strSQL & "     WHERE DIVFLAG = '총계' AND MGBN = '수수료계'"
                    strSQL = strSQL & "     AND YEARMON = '" & strYEARMON & "'"
                    strSQL = strSQL & "     AND ISNULL(ATTR01,'') <> '' "
                    strSQL = strSQL & " ) AMT2"
                End If


                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)

                Return strRtn
            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ABS")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '데이터를 확정합니다.
    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal strMasterXML As String, _
                               ByVal vntData As Object, _
                               ByRef strYEARMON As String, _
                               ByRef strGUBUN As String) As Integer  '매체 구분   '코바코 ' SBS

        Dim intRtn As Integer '결과값 변수  
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim strDEPTCD As String
        Dim strSUSUSQL As String
        Dim strABSVALUE As Double
        Dim strFLAG

        SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                strFLAG = ""
                'XML Element 변수 선언 (strMasterXML을 변환)
                Dim xmlRoot As XmlElement
                xmlRoot = XMLGetRoot(strMasterXML) 'XML 데이터

                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리
                mobjceMD_ELECTRIC_COMMIT = New ceMD_ELECTRIC_COMMIT(mobjSCGLConfig)
                mobjceMD_ELECTRIC_SUSUTEMP = New ceMD_ELECTRIC_SUSUTEMP(mobjSCGLConfig)

                '년월,및 절대비율값 과 확정플레그를 저장
                If strGUBUN = "KOBACO" Then
                    '비율이 필요가 없어져서 계산하지 않는다.
                    'strABSVALUE = SelectRtn_ABS(strYEARMON, strGUBUN)
                    strABSVALUE = 0
                    strFLAG = strGUBUN
                Else
                    'strABSVALUE = SelectRtn_ABS(strYEARMON, strGUBUN) 'SBS 절대값 비율과 확정 플래그 
                    strABSVALUE = 0
                    strFLAG = strGUBUN
                End If

                Select Case GetFlagMode(XMLGetElement(xmlRoot, meDATA_FLAG))
                    Case meINS_TRANS
                        '비율은 저장하지 않는다 필요가 없어져서...
                        'intRtn = InsertRtn_MD_ELECTRIC_COMMIT(xmlRoot, strYEARMON, strABSVALUE, strFLAG)
                End Select

                'B01092 '미디어
                'B00108 '한국방송광고공사

                If strGUBUN = "KOBACO" Then
                    '자!!! 스크롤 압박 들어갑니다.~~
                    '수수료 SUSUTEMP INSERT
                    strSUSUSQL = " INSERT INTO MD_ELECTRIC_SUSUTEMP"
                    strSUSUSQL = strSUSUSQL & " (YEARMON,INPUT_MEDFLAG,CLIENTCODE,REAL_MED_CODE,AMT,SUSURATE,SUSU,TRANSRANK,ATTR05,ATTR06)"
                    strSUSUSQL = strSUSUSQL & " SELECT "
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CASE GBN2 WHEN 'TV' THEN '01'"
                    strSUSUSQL = strSUSUSQL & " WHEN 'RADIO' THEN '02'"
                    strSUSUSQL = strSUSUSQL & " WHEN 'DMBTV' THEN '10'"
                    strSUSUSQL = strSUSUSQL & " WHEN 'DMBRADIO' THEN '20'"
                    strSUSUSQL = strSUSUSQL & " END AS INPUT_MEDFLAG,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " AMT,"
                    strSUSUSQL = strSUSUSQL & " SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUSU,"
                    strSUSUSQL = strSUSUSQL & " DENSE_RANK() OVER (ORDER BY REAL_MED_CODE ) TRANSRANK, "
                    strSUSUSQL = strSUSUSQL & " '" & strGUBUN & "' ATTR05,"
                    strSUSUSQL = strSUSUSQL & " gubun ATTR06"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT"
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     GBN2,"
                    strSUSUSQL = strSUSUSQL & "     'B00107' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & "     SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & "     (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & "     SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & "     0 gubun"
                    strSUSUSQL = strSUSUSQL & "     FROM"
                    strSUSUSQL = strSUSUSQL & "     ("
                    strSUSUSQL = strSUSUSQL & "         SELECT "
                    strSUSUSQL = strSUSUSQL & "         YEARMON,"
                    strSUSUSQL = strSUSUSQL & "         CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "         'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "         CASE DIVFLAG+MGBN WHEN '지상파TV인정' THEN M140 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "         CASE DIVFLAG+MGBN WHEN '지상파TV수수료' THEN M140 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "         FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "         AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & "     ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON, CLIENTCODE, GBN2 "
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00108' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV인정' THEN M141 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV수수료' THEN M141 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON, CLIENTCODE, GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00109' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV인정' THEN M142 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV수수료' THEN M142 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON, CLIENTCODE,GBN2 "
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00110' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " from"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV인정' THEN M143 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV수수료' THEN M143 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00111' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV인정' THEN M144 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV수수료' THEN M144 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00112' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV인정' THEN M145 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파TV수수료' THEN M145 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00107' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'RADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD인정' THEN M140 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD수수료' THEN M140 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00108' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'RADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD인정' THEN M141 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD수수료' THEN M141 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,CLIENTCODE, GBN2 "
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00109' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     yearmon,"
                    strSUSUSQL = strSUSUSQL & "     clientcode,"
                    strSUSUSQL = strSUSUSQL & "     'RADIO' gbn2,"
                    strSUSUSQL = strSUSUSQL & "     case divflag+mgbn when '지상파RD인정' then M142 else 0 end amt,"
                    strSUSUSQL = strSUSUSQL & "     case divflag+mgbn when '지상파RD수수료' then M142 else 0 end susu"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00110' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'RADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD인정' THEN M143 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD수수료' THEN M143 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00111' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'RADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD인정' THEN M144 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD수수료' THEN M144 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00112' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'RADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD인정' THEN M145 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파RD수수료' THEN M145 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL "
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00107' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV인정' THEN M140 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV수수료' THEN M140 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON, CLIENTCODE,GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00108' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV인정' THEN M141 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV수수료' THEN M141 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00109' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV인정' THEN M142 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV수수료' THEN M142 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00110' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV인정' THEN M143 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV수수료' THEN M143 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00111' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV인정' THEN M144 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV수수료' THEN M144 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00112' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV인정' THEN M145 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBTV수수료' THEN M145 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00107' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD인정' THEN M140 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD수수료' THEN M140 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00108' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD인정' THEN M141 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD수수료' THEN M141 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00109' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD인정' THEN M142 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD수수료' THEN M142 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,CLIENTCODE,GBN2 "
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00110' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD인정' THEN M143 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD수수료' THEN M143 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00111' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD인정' THEN M144 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD수수료' THEN M144 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00112' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 0 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD인정' THEN M145 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMBRD수수료' THEN M145 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"

                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00107' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접인정' THEN M140 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접수수료' THEN M140 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) data"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00108' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접인정' THEN M141 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접수수료' THEN M141 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00109' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접인정' THEN M142 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접수수료' THEN M142 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00110' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접인정' THEN M143 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접수수료' THEN M143 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00111' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접인정' THEN M144 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접수수료' THEN M144 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00112' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접인정' THEN M145 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파가상/간접수수료' THEN M145 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"

                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00107' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접인정' THEN M140 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접수수료' THEN M140 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00108' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접인정' THEN M141 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접수수료' THEN M141 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00109' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접인정' THEN M142 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접수수료' THEN M142 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00110' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접인정' THEN M143 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접수수료' THEN M143 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00111' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접인정' THEN M144 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접수수료' THEN M144 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " UNION ALL"
                    strSUSUSQL = strSUSUSQL & " SELECT"
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2,"
                    strSUSUSQL = strSUSUSQL & " 'B00112' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " (SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 1 gubun"
                    strSUSUSQL = strSUSUSQL & " FROM"
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & "     SELECT "
                    strSUSUSQL = strSUSUSQL & "     YEARMON,"
                    strSUSUSQL = strSUSUSQL & "     CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & "     'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접인정' THEN M145 ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & "     CASE DIVFLAG+MGBN WHEN '지상파DMB가상/간접수수료' THEN M145 ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & "     FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & "     AND ISNULL(ATTR01,'') = ''"
                    strSUSUSQL = strSUSUSQL & " ) DATA"
                    strSUSUSQL = strSUSUSQL & " GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " GBN2"
                    strSUSUSQL = strSUSUSQL & " ) DATAALL"
                    strSUSUSQL = strSUSUSQL & " WHERE AMT != 0 AND SUSURATE != 0 AND SUSU != 0"
                    strSUSUSQL = strSUSUSQL & " ORDER BY TRANSRANK,REAL_MED_CODE,CLIENTCODE,INPUT_MEDFLAG"

                Else
                    'SBS 미디어랩사
                    strSUSUSQL = strSUSUSQL & " INSERT INTO MD_ELECTRIC_SUSUTEMP"
                    strSUSUSQL = strSUSUSQL & " (YEARMON,INPUT_MEDFLAG,CLIENTCODE,REAL_MED_CODE,AMT,SUSURATE,SUSU,TRANSRANK,ATTR05,ATTR06)"
                    strSUSUSQL = strSUSUSQL & " SELECT "
                    strSUSUSQL = strSUSUSQL & " YEARMON,"
                    strSUSUSQL = strSUSUSQL & " CASE GBN2 WHEN 'TV' THEN '01'"
                    strSUSUSQL = strSUSUSQL & " WHEN 'RADIO' THEN '02'"
                    strSUSUSQL = strSUSUSQL & " WHEN 'DMBTV' THEN '10'"
                    strSUSUSQL = strSUSUSQL & " WHEN 'DMBRADIO' THEN '20'"
                    strSUSUSQL = strSUSUSQL & " END AS INPUT_MEDFLAG,"
                    strSUSUSQL = strSUSUSQL & " CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " AMT,"
                    strSUSUSQL = strSUSUSQL & " SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " SUSU,"
                    strSUSUSQL = strSUSUSQL & " DENSE_RANK() OVER (ORDER BY REAL_MED_CODE ) TRANSRANK, '" & strGUBUN & "' ATTR05,"
                    strSUSUSQL = strSUSUSQL & " gubun ATTR06"
                    strSUSUSQL = strSUSUSQL & " FROM "
                    strSUSUSQL = strSUSUSQL & " ("
                    strSUSUSQL = strSUSUSQL & " 	SELECT"
                    strSUSUSQL = strSUSUSQL & " 	YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 	CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 	GBN2,"
                    strSUSUSQL = strSUSUSQL & " 	'B01092' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " 	CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " 	(SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 	0 gubun"
                    strSUSUSQL = strSUSUSQL & " 	FROM"
                    strSUSUSQL = strSUSUSQL & " 	("
                    strSUSUSQL = strSUSUSQL & " 		SELECT "
                    strSUSUSQL = strSUSUSQL & " 		YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 		CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 		'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파TV구매' THEN TOT ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파TV수수료' THEN TOT ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & " 		FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & " 		AND ISNULL(ATTR01,'') <> ''"
                    strSUSUSQL = strSUSUSQL & " 	) data"
                    strSUSUSQL = strSUSUSQL & " 	GROUP BY YEARMON, CLIENTCODE, GBN2"

                    strSUSUSQL = strSUSUSQL & " 	UNION ALL"
                    strSUSUSQL = strSUSUSQL & " 	SELECT"
                    strSUSUSQL = strSUSUSQL & " 	YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 	CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 	GBN2,"
                    strSUSUSQL = strSUSUSQL & " 	'B01092' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " 	CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " 	(SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 	0 gubun"
                    strSUSUSQL = strSUSUSQL & " 	FROM"
                    strSUSUSQL = strSUSUSQL & " 	("
                    strSUSUSQL = strSUSUSQL & " 		SELECT "
                    strSUSUSQL = strSUSUSQL & " 		YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 		CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 		'RADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파RD구매' THEN TOT ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파RD수수료' THEN TOT ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & " 		FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & " 		AND ISNULL(ATTR01,0) <> ''"
                    strSUSUSQL = strSUSUSQL & " 	) DATA"
                    strSUSUSQL = strSUSUSQL & " 	GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 	CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 	GBN2"
                    strSUSUSQL = strSUSUSQL & " "
                    strSUSUSQL = strSUSUSQL & " 	UNION ALL"
                    strSUSUSQL = strSUSUSQL & " 	SELECT"
                    strSUSUSQL = strSUSUSQL & " 	YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 	CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 	GBN2,"
                    strSUSUSQL = strSUSUSQL & " 	'B01092' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " 	CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " 	(SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 	0 gubun"
                    strSUSUSQL = strSUSUSQL & " 	FROM"
                    strSUSUSQL = strSUSUSQL & " 	("
                    strSUSUSQL = strSUSUSQL & " 		SELECT "
                    strSUSUSQL = strSUSUSQL & " 		YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 		CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 		'DMBTV' GBN2,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파DMBTV구매' THEN TOT ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파DMBTV수수료' THEN TOT ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & " 		FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & " 		AND ISNULL(ATTR01,0) <> ''"
                    strSUSUSQL = strSUSUSQL & " 	) DATA"
                    strSUSUSQL = strSUSUSQL & " 	GROUP BY YEARMON,CLIENTCODE,GBN2"
                    strSUSUSQL = strSUSUSQL & " "
                    strSUSUSQL = strSUSUSQL & " 	UNION ALL"
                    strSUSUSQL = strSUSUSQL & " 	SELECT"
                    strSUSUSQL = strSUSUSQL & " 	YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 	CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 	GBN2,"
                    strSUSUSQL = strSUSUSQL & " 	'B01092' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " 	CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " 	(SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 	0 gubun"
                    strSUSUSQL = strSUSUSQL & " 	FROM"
                    strSUSUSQL = strSUSUSQL & " 	("
                    strSUSUSQL = strSUSUSQL & " 		SELECT "
                    strSUSUSQL = strSUSUSQL & " 		YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 		CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 		'DMBRADIO' GBN2,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파DMBRD구매' THEN TOT ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파DMBRD수수료' THEN TOT ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & " 		FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & " 		AND ISNULL(ATTR01,0) <> ''"
                    strSUSUSQL = strSUSUSQL & "  	) DATA"
                    strSUSUSQL = strSUSUSQL & " 	GROUP BY YEARMON,CLIENTCODE,GBN2"

                    strSUSUSQL = strSUSUSQL & " 	UNION ALL"
                    strSUSUSQL = strSUSUSQL & " 	SELECT"
                    strSUSUSQL = strSUSUSQL & " 	YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 	CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 	GBN2,"
                    strSUSUSQL = strSUSUSQL & " 	'B01092' REAL_MED_CODE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(AMT) AMT,"
                    strSUSUSQL = strSUSUSQL & " 	CASE SUM(AMT) WHEN 0 THEN 0 ELSE"
                    strSUSUSQL = strSUSUSQL & " 	(SUM(SUSU)/SUM(AMT))*100 END AS SUSURATE,"
                    strSUSUSQL = strSUSUSQL & " 	SUM(SUSU) SUSU,"
                    strSUSUSQL = strSUSUSQL & " 	1 gubun"
                    strSUSUSQL = strSUSUSQL & " 	FROM"
                    strSUSUSQL = strSUSUSQL & " 	("
                    strSUSUSQL = strSUSUSQL & " 		SELECT "
                    strSUSUSQL = strSUSUSQL & " 		YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 		CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 		'TV' GBN2,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파가상/간접구매' THEN TOT ELSE 0 END AMT,"
                    strSUSUSQL = strSUSUSQL & " 		CASE DIVFLAG+MGBN WHEN '지상파가상/간접수수료' THEN TOT ELSE 0 END SUSU"
                    strSUSUSQL = strSUSUSQL & " 		FROM MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "' AND ISNULL(CLIENTCODE,'') <> ''"
                    strSUSUSQL = strSUSUSQL & " 		AND ISNULL(ATTR01,0) <> ''"
                    strSUSUSQL = strSUSUSQL & " 	) DATA"
                    strSUSUSQL = strSUSUSQL & " 	GROUP BY YEARMON,"
                    strSUSUSQL = strSUSUSQL & " 	CLIENTCODE,"
                    strSUSUSQL = strSUSUSQL & " 	GBN2"
                    strSUSUSQL = strSUSUSQL & " )DATAALL"
                    strSUSUSQL = strSUSUSQL & " WHERE AMT != 0 AND SUSURATE != 0 AND SUSU != 0"
                    strSUSUSQL = strSUSUSQL & " ORDER BY TRANSRANK,REAL_MED_CODE,CLIENTCODE,INPUT_MEDFLAG "

                End If

                intRtn = mobjceMD_ELECTRIC_SUSUTEMP.SUSUTEMPInsertDo(strSUSUSQL)

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_ELECTRIC_COMMIT.Dispose()
                mobjceMD_ELECTRIC_SUSUTEMP.Dispose()
            End Try
        End With
    End Function
    ' ============== ProcessRtn PRESUSU 투입
    Public Function ProcessRtn_PRESUSU(ByVal strInfoXML As String, _
                                       ByVal vntData As Object, _
                                       ByVal strYEARMON As String, _
                                       ByVal strATTR01 As String) As Integer     '데이터 INSERT/UPDATE
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strSEQ

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                If IsArray(vntData) Then

                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_ELECTRIC_PRESUSU = New ceMD_ELECTRIC_PRESUSU(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력
                    intRtn = mobjceMD_ELECTRIC_PRESUSU.DeleteDo(strYEARMON, strATTR01)

                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)

                    For i = 1 To intRows
                        strSEQ = 0
                        strSEQ = SelectRtn_SEQ(strYEARMON)
                        intRtn = Insert_PRESUSU(vntData, intColCnt, i, strSEQ, strATTR01)
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRows
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_MATTER")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_ELECTRIC_PRESUSU.Dispose()
            End Try
        End With
    End Function

    Public Function SelectRtn_SEQ(ByRef strYEARMON As String) As String
        '여기부터 단순조회
        Dim strSQL, strFormat, strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = "select ISNULL(Max(SEQ),0) +1 From MD_ELECTRIC_PRESUSU WHERE YEARMON = '" & strYEARMON & "'"
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)

                Return strRtn

            Catch err As Exception
                ' 오류 전송
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn")
            Finally
            End Try
        End With
        '여기까지 단순조회
    End Function

    '=============== 수수료투입 화면 조회
    Public Function SelectRtn_PRESUSU(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByVal strYEARMON As String, _
                                      ByVal strCLIENTCODE As String, _
                                      ByVal strCLINETNAME As String, _
                                      ByVal strGUBUN As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strSelFields, strSelFields2
        Dim intRtn
        Dim Con1, Con2, Con3, Con4 As String

        Con1 = "" : Con2 = "" : Con3 = "" : Con4 = ""

        SetConfig(strInfoXML)

        If strYEARMON <> "" Then Con1 = String.Format(" AND (YEARMON =  '{0}')", strYEARMON)
        If strCLINETNAME <> "" Then Con2 = String.Format(" AND (DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) LIKE  '%{0}%')", strCLINETNAME)
        If strCLIENTCODE <> "" Then Con3 = String.Format(" AND (CLIENTCODE =  '{0}')", strCLIENTCODE)


        If strGUBUN = "KOBACO" Then
            Con4 = " AND (isnull(attr01,'')  <> 'SBS')"
        Else
            Con4 = " AND (isnull(attr01,'')  = 'SBS')"
        End If

        strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)

        If strGUBUN = "KOBACO" Then
            strSelFields = " YEARMON,SEQ, "
            strSelFields = strSelFields & "	DIVFLAG, "
            strSelFields = strSelFields & "	CLIENTCODE, "
            strSelFields = strSelFields & "	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
            strSelFields = strSelFields & "	MGBN,TOT,M140,M144,M142,M141,M143,M145 "
        Else
            strSelFields = " YEARMON,SEQ, "
            strSelFields = strSelFields & "	DIVFLAG, "
            strSelFields = strSelFields & "	CLIENTCODE, "
            strSelFields = strSelFields & "	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
            strSelFields = strSelFields & "	MGBN,TOT"
        End If

        strFormat = "SELECT {0} FROM MD_ELECTRIC_PRESUSU WHERE 1=1 {2} and DIVFLAG <> '총계' ORDER BY CLIENTCODE, DIVFLAG"


        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strSelFields, strSelFields2, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_PRESUSU")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 비공개 Method"
    Private Function InsertRtn_MD_ELECTRIC_COMMIT(ByVal xmlRoot As XmlElement, _
                                                  ByRef strYEARMON As String, _
                                                  ByVal strABSVALUE As Double, _
                                                  ByVal strFLAG As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjceMD_ELECTRIC_COMMIT.InsertDo( _
                                       strYEARMON, _
                                       "G", _
                                       strABSVALUE, _
                                       strFLAG, _
                                       XMLGetElement(xmlRoot, "ATTR02"), _
                                       XMLGetElement(xmlRoot, "ATTR03"), _
                                       XMLGetElement(xmlRoot, "ATTR04"), _
                                       XMLGetElement(xmlRoot, "ATTR05"), _
                                       XMLGetElement(xmlRoot, "ATTR06", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR07", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR08", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR09", NULL_NUM, True), _
                                       XMLGetElement(xmlRoot, "ATTR10", NULL_NUM, True))
        Return intRtn
    End Function
    Private Function Insert_PRESUSU(ByVal vntData As Object, _
                                    ByVal intColCnt As Integer, _
                                    ByVal intRow As Integer, _
                                    ByVal strSEQ As Double, _
                                    ByVal strATTR01 As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjceMD_ELECTRIC_PRESUSU.InsertDo( _
                                       GetElement(vntData, "YEARMON", intColCnt, intRow), _
                                       strSEQ, _
                                       GetElement(vntData, "DIVFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "MGBN", intColCnt, intRow), _
                                       GetElement(vntData, "TOT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "M140", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "M144", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "M142", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "M141", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "M143", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "M145", intColCnt, intRow, NULL_NUM, True), _
                                       strATTR01)
    End Function
#End Region
End Class