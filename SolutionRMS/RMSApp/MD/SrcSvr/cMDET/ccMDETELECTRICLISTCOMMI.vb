'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 컨트롤 클래스 메이커 - 한화 S&C
'시스템구분    : 솔루션명 /시스템명/Server Control Class
'실행   환경    : COM+ Service Server Package
'프로그램명    : ccMDCMPRINTREG.vb
'기         능    : - 기능을 명시 합니다.
'특이  사항     : - 특이사항에 대해 표현
'                     -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2004-03-30 오전 10:32:13 By MakeSFARV.2.0.0
'            2) 2004-03-30 오전 10:32:13 By 작성자명을 씁니다.
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports eMDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트

Public Class ccMDETELECTRICLISTCOMMI
    Inherits ccControl

#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccMDETELECTRICLISTCOMMI"                  '자신의 클래스명
    Private mobjceMD_ELECTRIC_SUSUTEMP As eMDCO.ceMD_ELECTRIC_SUSUTEMP
    'Private Const .DBConnStr = "Provider=SQLOLEDB;Data Source=10.110.10.86;Initial Catalog=MCDEV;DSN=MCDEV;UID=devadmin;Pwd=password" '커넥션Setting
#End Region

#Region "GROUP BLOCK : Property 선언"
#End Region

#Region "GROUP BLOCK : Event 선언"

    '********************************************************
    ' GetDataType()  매체종류 콤보 select 처리
    '********************************************************
    Public Function GetDataType(ByVal strInfoXML As String, _
                                ByRef intRowCnt As Integer, ByRef intColCnt As Integer) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = 'MP_KIND' " & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '********************************************************
    ' GetDataType_All()  매체종류 전체포함 검색 콤보 select 처리
    '********************************************************
    Public Function GetDataType_All(ByVal strInfoXML As String, _
                                ByRef intRowCnt As Integer, ByRef intColCnt As Integer) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = " SELECT '', '매체구분-전체' CODE_NAME FROM DUAL UNION ALL SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = 'MP_KIND' "


        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '********************************************************
    ' GetDataTypeChange()  게재면 콤보 select 처리
    '********************************************************
    Public Function GetDataTypeChange(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByRef strMED_FLAG As String) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = '{1}' " & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields, strMED_FLAG)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 공개 Method"

    '=============== 승인취소조회
    Public Function SelectRtn_CANCEL(ByVal strInfoXML As String, _
                                     ByRef intRowCnt As Integer, _
                                     ByRef intColCnt As Integer, _
                                     ByRef strYEARMON As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strSelFields
        Dim intRtn

        SetConfig(strInfoXML)

        If strYEARMON <> "" Then strWhere = String.Format(" AND (TRANSYEARMON = '{0}')", strYEARMON)


        strFormat = " SELECT TRANSYEARMON FROM MD_ELEC_TRANS_HDR"
        strFormat = strFormat & " GROUP BY TRANSYEARMON"
        strFormat = strFormat & " HAVING 1=1 {0}"

        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CANCEL")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    '=============== 승인전승인여부조회
    Public Function SelectRtn_CONFIRM(ByVal strInfoXML As String, _
                              ByRef intRowCnt As Integer, _
                              ByRef intColCnt As Integer, _
                              ByRef strYEARMON As String) As Object

        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strSelFields
        Dim intRtn

        SetConfig(strInfoXML)

        If strYEARMON <> "" Then strWhere = String.Format(" AND (YEARMON = '{0}')", strYEARMON)

        strSelFields = "YEARMON"

        strFormat = "SELECT {0} FROM MD_ELECTRIC_SUSUTEMP WHERE 1=1 {1} GROUP BY YEARMON"

        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            strSQL = String.Format(strFormat, strSelFields, strWhere)
            Try
                ' DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)

                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_CONFIRM")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    '==========승인 확정전 조회
    Public Function SelectRtn_SUSU(ByVal strInfoXML As String, _
                                   ByRef intRowCnt As Integer, _
                                   ByRef intColCnt As Integer, _
                                   ByRef strYEARMON As String) As Object

        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim strSelFields
        Dim intCnt
        Dim intRtn, intRtn2
        Dim Con1, Con2, Con3 As String
        Dim strGFLAGSQL
        SetConfig(strInfoXML)


        strSQL = " SELECT"
        strSQL = strSQL & "   YEARMON,"
        strSQL = strSQL & "   DBO.SC_GET_HIGHCOMPANYNAME_FUN(REAL_MED_CODE) REAL_MED_NAME,"
        strSQL = strSQL & "   DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
        strSQL = strSQL & "   INPUT_MEDFLAG,"
        strSQL = strSQL & "		      CASE INPUT_MEDFLAG  WHEN '01' THEN 'TV'"
        strSQL = strSQL & "                                       WHEN '02' THEN 'RADIO'"
        strSQL = strSQL & "					  WHEN '10' THEN 'DMB' END INPUT_MEDNAME,    "
        strSQL = strSQL & "   SUM(AMT) AMT,SUSURATE, SUM(SUSU) SUSU, "
        strSQL = strSQL & "   CLIENTCODE,REAL_MED_CODE,DEPTCD,"
        strSQL = strSQL & "   DENSE_RANK() OVER (ORDER BY REAL_MED_CODE) TRANSRANK,"
        strSQL = strSQL & "   '' SAVESET"
        strSQL = strSQL & "  FROM"
        strSQL = strSQL & "  ("
        strSQL = strSQL & "  	SELECT"
        strSQL = strSQL & " 	A.YEARMON,"
        strSQL = strSQL & " 	A.AMT,A.CLIENTCODE,A.REAL_MED_CODE,"
        strSQL = strSQL & " 	B.CNT,B.SCNT,B.MCNT,B.LCNT,B.XLCNT,"
        strSQL = strSQL & " 	A.INPUT_MEDFLAG,"
        strSQL = strSQL & " 	CASE WHEN A.INPUT_MEDFLAG = '01' THEN"
        strSQL = strSQL & " 		 CASE WHEN B.CNT <= 200000000 THEN"
        strSQL = strSQL & "				 CASE A.REAL_MED_CODE WHEN 'B00140' THEN SCNT-MINUCNT ELSE FLOOR(B.SCNT*(A.AMT/B.CNT)) END  "
        strSQL = strSQL & " 		 WHEN B.CNT > 200000000 AND B.CNT <= 800000000 THEN"
        strSQL = strSQL & "				 CASE A.REAL_MED_CODE WHEN 'B00140' THEN MCNT-MINUCNT ELSE FLOOR(B.MCNT*(A.AMT/B.CNT)) END  "
        strSQL = strSQL & " 		 ELSE"
        strSQL = strSQL & "				 CASE A.REAL_MED_CODE WHEN 'B00140' THEN LCNT-MINUCNT ELSE FLOOR(B.LCNT*(A.AMT/B.CNT)) END  END "
        strSQL = strSQL & " 	ELSE "
        strSQL = strSQL & "			     CASE A.REAL_MED_CODE WHEN 'B00140' THEN XLCNT-MINUCNT ELSE FLOOR(B.XLCNT*(A.AMT/B.CNT)) END END SUSU, "
        strSQL = strSQL & " 	CASE WHEN A.INPUT_MEDFLAG = '01' THEN"
        strSQL = strSQL & " 		 CASE WHEN B.CNT <= 200000000 THEN"
        strSQL = strSQL & " 		 12"
        strSQL = strSQL & " 		 WHEN B.CNT >200000000 AND B.CNT <= 800000000 THEN"
        strSQL = strSQL & " 		 11"
        strSQL = strSQL & " 		 ELSE 9.3 END"
        strSQL = strSQL & " 	ELSE 13 END SUSURATE,"
        strSQL = strSQL & " 	MINUCNT,"
        strSQL = strSQL & " 	A.DEPTCD"
        strSQL = strSQL & "  	FROM"
        strSQL = strSQL & "  	("
        strSQL = strSQL & " 	 	SELECT"
        strSQL = strSQL & " 	 	YEARMON,"
        strSQL = strSQL & " 	 	CLIENTCODE,"
        strSQL = strSQL & " 	 	REAL_MED_CODE,"
        strSQL = strSQL & " 	 	SUM(AMT) AMT,"
        strSQL = strSQL & "                                CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END AS INPUT_MEDFLAG,"
        strSQL = strSQL & " 	 	DBO.SC_SEQCODE_DEPTCD_FUN(DBO.SC_CUSTCODE_SEQCODE_FUN(CLIENTCODE)) DEPTCD"
        strSQL = strSQL & " 	 	FROM MD_ELECTRIC_MEDIUM"
        strSQL = strSQL & " 	 	WHERE MEDCODE IS NOT NULL"
        strSQL = strSQL & " 	 	AND REAL_MED_CODE IS NOT NULL"
        strSQL = strSQL & " 	 	AND COMMI_TRANS_NO IS NULL"
        strSQL = strSQL & " 	 	AND (SPONSOR IS NULL OR SPONSOR <> 'Y')"
        strSQL = strSQL & " 	 	AND YEARMON = '" & strYEARMON & "'"
        strSQL = strSQL & " 	 	AND (AMT <> 0 AND AMT IS NOT NULL)"
        strSQL = strSQL & " 	 	GROUP BY YEARMON,CLIENTCODE,REAL_MED_CODE,CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END"
        strSQL = strSQL & "  	) A LEFT JOIN"
        strSQL = strSQL & "  	("
        strSQL = strSQL & " 	 	SELECT"
        strSQL = strSQL & " 	 	CLIENTCODE,"
        strSQL = strSQL & " 	 	SUM(AMT) CNT,"
        strSQL = strSQL & " 	 	FLOOR((SUM(AMT)*0.13)) AS XLCNT,"
        strSQL = strSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strSQL = strSQL & "				0"
        strSQL = strSQL & "        			ELSE "
        strSQL = strSQL & "					CASE WHEN SUM(AMT) <= 200000000 THEN"
        strSQL = strSQL & "					FLOOR(SUM(AMT)*0.12) END"
        strSQL = strSQL & "				END AS SCNT,"
        strSQL = strSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strSQL = strSQL & "				0"
        strSQL = strSQL & "				ELSE"
        strSQL = strSQL & "					CASE WHEN SUM(AMT) > 200000000 AND SUM(AMT) <= 800000000 THEN"
        strSQL = strSQL & "					24000000 + FLOOR((SUM(AMT)-(200000000))*0.11) END"
        strSQL = strSQL & "				END AS MCNT,"
        strSQL = strSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strSQL = strSQL & "				0"
        strSQL = strSQL & "				ELSE"
        strSQL = strSQL & "					CASE WHEN SUM(AMT) > 800000000 THEN"
        strSQL = strSQL & "					24000000 + 66000000 + FLOOR((SUM(AMT)-800000000)*0.093) END"
        strSQL = strSQL & "				END AS LCNT,"
        strSQL = strSQL & " 	 		   INPUT_MEDFLAG"
        strSQL = strSQL & " 	 		   FROM"
        strSQL = strSQL & " 	 		   ("
        strSQL = strSQL & " 	 			   SELECT"
        strSQL = strSQL & " 	 			   CLIENTCODE,"
        strSQL = strSQL & " 	 			   REAL_MED_CODE,"
        strSQL = strSQL & " 	 			   SUM(AMT) AMT,"
        strSQL = strSQL & "						   CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END AS INPUT_MEDFLAG"
        strSQL = strSQL & " 	 			   FROM MD_ELECTRIC_MEDIUM"
        strSQL = strSQL & " 	 			   WHERE MEDCODE IS NOT NULL"
        strSQL = strSQL & " 	 			   AND REAL_MED_CODE IS NOT NULL"
        strSQL = strSQL & " 	 			   AND COMMI_TRANS_NO IS NULL"
        strSQL = strSQL & " 	 			   AND (SPONSOR IS NULL OR SPONSOR <> 'Y')"
        strSQL = strSQL & " 	 			   AND YEARMON = '" & strYEARMON & "'"
        strSQL = strSQL & " 	 			   AND (AMT <> 0 AND AMT IS NOT NULL)"
        strSQL = strSQL & " 	 			   GROUP BY CLIENTCODE,REAL_MED_CODE,CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END"
        strSQL = strSQL & " 	 		   ) DATA"
        strSQL = strSQL & " 	 	GROUP BY CLIENTCODE,INPUT_MEDFLAG"
        strSQL = strSQL & "  	) B ON A.CLIENTCODE = B.CLIENTCODE AND A.INPUT_MEDFLAG = B.INPUT_MEDFLAG"
        strSQL = strSQL & "  	LEFT JOIN"
        strSQL = strSQL & "  	("
        strSQL = strSQL & " 	 	SELECT"
        strSQL = strSQL & " 	 	CLIENTCODE,"
        strSQL = strSQL & " 	 	SUM(SUSU) MINUCNT,"
        strSQL = strSQL & " 	 	INPUT_MEDFLAG"
        strSQL = strSQL & " 	 	FROM"
        strSQL = strSQL & " 	 	("
        strSQL = strSQL & " 	 	 	SELECT"
        strSQL = strSQL & " 	 		A.AMT AMT,"
        strSQL = strSQL & " 	 		A.CLIENTCODE,"
        strSQL = strSQL & " 	 		A.REAL_MED_CODE,"
        strSQL = strSQL & " 	 		B.CNT CNT,"
        strSQL = strSQL & " 	 		B.SCNT SCNT,"
        strSQL = strSQL & " 	 		B.MCNT MCNT,"
        strSQL = strSQL & " 	 		B.LCNT LCNT,"
        strSQL = strSQL & " 	 		A.INPUT_MEDFLAG,"
        strSQL = strSQL & " 	CASE WHEN A.INPUT_MEDFLAG = '01' THEN"
        strSQL = strSQL & " 		 CASE WHEN B.CNT <= 200000000 THEN"
        strSQL = strSQL & "				 CASE A.REAL_MED_CODE WHEN 'B00140' THEN 0 ELSE FLOOR(B.SCNT*(A.AMT/B.CNT)) END  "
        strSQL = strSQL & " 		 WHEN B.CNT > 200000000 AND B.CNT <= 800000000 THEN"
        strSQL = strSQL & "				 CASE A.REAL_MED_CODE WHEN 'B00140' THEN 0 ELSE FLOOR(B.MCNT*(A.AMT/B.CNT)) END  "
        strSQL = strSQL & " 		 WHEN B.CNT > 800000000 THEN "
        strSQL = strSQL & "				 CASE A.REAL_MED_CODE WHEN 'B00140' THEN 0 ELSE FLOOR(B.LCNT*(A.AMT/B.CNT)) END  END "
        strSQL = strSQL & "     ELSE "
        strSQL = strSQL & "			     CASE A.REAL_MED_CODE WHEN 'B00140' THEN 0 ELSE FLOOR(B.XLCNT*(A.AMT/B.CNT)) END END SUSU "
        strSQL = strSQL & " 	 		FROM"
        strSQL = strSQL & " 	 			("
        strSQL = strSQL & " 	 			 	SELECT"
        strSQL = strSQL & " 	 				SUM(AMT) AMT,"
        strSQL = strSQL & " 	 				CLIENTCODE,"
        strSQL = strSQL & " 	 				REAL_MED_CODE,"
        strSQL = strSQL & " 	 				INPUT_MEDFLAG"
        strSQL = strSQL & " 	 				FROM"
        strSQL = strSQL & " 	 				(	"
        strSQL = strSQL & " 	 					 SELECT"
        strSQL = strSQL & " 	 					 YEARMON,"
        strSQL = strSQL & " 	 					 CLIENTCODE,"
        strSQL = strSQL & " 	 					 REAL_MED_CODE,"
        strSQL = strSQL & " 	 					 SUM(AMT) AMT,"
        strSQL = strSQL & "								 CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END AS INPUT_MEDFLAG"
        strSQL = strSQL & " 	 					 FROM MD_ELECTRIC_MEDIUM"
        strSQL = strSQL & " 	 					 WHERE MEDCODE IS NOT NULL"
        strSQL = strSQL & " 	 					 AND REAL_MED_CODE IS NOT NULL"
        strSQL = strSQL & " 	 					 AND COMMI_TRANS_NO IS NULL"
        strSQL = strSQL & " 	 					 AND (SPONSOR IS NULL OR SPONSOR <> 'Y')"
        strSQL = strSQL & " 	 					 AND YEARMON = '" & strYEARMON & "'"
        strSQL = strSQL & " 	 					 AND (AMT <> 0 AND AMT IS NOT NULL)"
        strSQL = strSQL & " 	 					 GROUP BY YEARMON,CLIENTCODE,REAL_MED_CODE,CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END"
        strSQL = strSQL & " 	 				) DATA"
        strSQL = strSQL & " 	 				GROUP BY CLIENTCODE,REAL_MED_CODE,INPUT_MEDFLAG"
        strSQL = strSQL & " 	 			) A"
        strSQL = strSQL & " 	 			LEFT JOIN"
        strSQL = strSQL & " 	 			("
        strSQL = strSQL & " 	 			 	SELECT"
        strSQL = strSQL & " 	 				CLIENTCODE,"
        strSQL = strSQL & " 	 				SUM(AMT) CNT,"
        strSQL = strSQL & " 	 				FLOOR((SUM(AMT)*0.13)) AS XLCNT,"
        strSQL = strSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strSQL = strSQL & "				0"
        strSQL = strSQL & "        			ELSE "
        strSQL = strSQL & "					CASE WHEN SUM(AMT) <= 200000000 THEN"
        strSQL = strSQL & "					FLOOR(SUM(AMT)*0.12) END"
        strSQL = strSQL & "				END AS SCNT,"
        strSQL = strSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strSQL = strSQL & "				0"
        strSQL = strSQL & "				ELSE"
        strSQL = strSQL & "					CASE WHEN SUM(AMT) > 200000000 AND SUM(AMT) <= 800000000 THEN"
        strSQL = strSQL & "					24000000 + FLOOR((SUM(AMT)-(200000000))*0.11) END"
        strSQL = strSQL & "				END AS MCNT,"
        strSQL = strSQL & "				CASE WHEN ISNULL(SUM(AMT),0) = 0 THEN "
        strSQL = strSQL & "				0"
        strSQL = strSQL & "				ELSE"
        strSQL = strSQL & "					CASE WHEN SUM(AMT) > 800000000 THEN"
        strSQL = strSQL & "					24000000 + 66000000 + FLOOR((SUM(AMT)-800000000)*0.093) END"
        strSQL = strSQL & "				END AS LCNT,"
        strSQL = strSQL & " 	 					   INPUT_MEDFLAG"
        strSQL = strSQL & " 	 					   FROM"
        strSQL = strSQL & " 	 					   ("
        strSQL = strSQL & " 	 						   SELECT"
        strSQL = strSQL & " 	 						   CLIENTCODE,"
        strSQL = strSQL & " 	 						   REAL_MED_CODE,"
        strSQL = strSQL & " 	 						   SUM(AMT) AMT,"
        strSQL = strSQL & "									   CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END AS INPUT_MEDFLAG "
        strSQL = strSQL & " 	 						   FROM MD_ELECTRIC_MEDIUM"
        strSQL = strSQL & " 	 						   WHERE MEDCODE IS NOT NULL"
        strSQL = strSQL & " 	 						   AND REAL_MED_CODE IS NOT NULL"
        strSQL = strSQL & " 	 						   AND COMMI_TRANS_NO IS NULL"
        strSQL = strSQL & " 	 						   AND (SPONSOR IS NULL OR SPONSOR <> 'Y')"
        strSQL = strSQL & " 	 						   AND YEARMON = '" & strYEARMON & "'"
        strSQL = strSQL & " 	 						   AND (AMT <> 0 AND AMT IS NOT NULL)"
        strSQL = strSQL & " 	 						   GROUP BY YEARMON,CLIENTCODE,REAL_MED_CODE,CASE INPUT_MEDFLAG WHEN '03' THEN '02' WHEN '20' THEN '10' ELSE INPUT_MEDFLAG END "
        strSQL = strSQL & " 	 					   ) DATA"
        strSQL = strSQL & " 	 				GROUP BY CLIENTCODE,INPUT_MEDFLAG"
        strSQL = strSQL & " 	 			) B ON A.CLIENTCODE = B.CLIENTCODE AND A.INPUT_MEDFLAG = B.INPUT_MEDFLAG"
        strSQL = strSQL & " 	 	) DATA"
        strSQL = strSQL & " 	 	  GROUP BY CLIENTCODE,INPUT_MEDFLAG"
        strSQL = strSQL & "  	) C ON A.CLIENTCODE = C.CLIENTCODE AND A.INPUT_MEDFLAG = C.INPUT_MEDFLAG"
        strSQL = strSQL & "  ) NOSPONSORDATA"
        strSQL = strSQL & "    GROUP BY"
        strSQL = strSQL & "    YEARMON,"
        strSQL = strSQL & "    REAL_MED_CODE,"
        strSQL = strSQL & "    CLIENTCODE, "
        strSQL = strSQL & "    INPUT_MEDFLAG,"
        strSQL = strSQL & "    SUSURATE, "
        strSQL = strSQL & "    DEPTCD,SUSURATE"
        strSQL = strSQL & "  ORDER BY REAL_MED_CODE,DBO.MD_GET_KOBABOCUSTCODE_FUN(clientcode),INPUT_MEDFLAG"




        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            'strSQL = String.Format(strFormat, strWhere)
            Try
                'DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_SUSU")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
    '======승인확정후 조회
    Public Function SelectRtn_ENDSUSU(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByRef strYEARMON As String) As Object
        Dim strCols As String         '컬럼변수
        Dim strWhere As String       'Where조건 변수
        Dim strFormat As String      'SQL Format 변수
        Dim strSQL As String          'SQL 변수
        Dim vntData As Object        'Array Return 변수(Array 를사용할 때 선언)
        Dim strXMLData As String    'XML  Return 변수(XML  을 사용할 때 선언)
        Dim strSelFields
        Dim intCnt
        Dim intRtn, intRtn2
        Dim Con1, Con2, Con3 As String
        Dim strGFLAGSQL
        SetConfig(strInfoXML)

        strSQL = "  SELECT"
        strSQL = strSQL & "   YEARMON,"
        strSQL = strSQL & "   DBO.SC_GET_HIGHCUSTNAME_FUN(REAL_MED_CODE) REAL_MED_NAME,"
        strSQL = strSQL & "   DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
        strSQL = strSQL & "   INPUT_MEDFLAG,"
        strSQL = strSQL & "   CASE INPUT_MEDFLAG WHEN '01' THEN 'TV' WHEN '02' THEN 'RADIO' WHEN '10' THEN 'DMD' END AS INPUT_MEDNAME,"
        strSQL = strSQL & "   AMT,SUSURATE, SUSU, "
        strSQL = strSQL & "   CLIENTCODE,REAL_MED_CODE,"
        strSQL = strSQL & "   ATTR03 DEPTCD,"
        strSQL = strSQL & "   DENSE_RANK() OVER (ORDER BY REAL_MED_CODE) TRANSRANK,'' SAVESET"
        strSQL = strSQL & "  FROM MD_ELECTRIC_SUSUTEMP"
        strSQL = strSQL & "  WHERE YEARMON = '" & strYEARMON & "'"
        '기본정보 Setting
        With mobjSCGLConfig '기본정보 Config 개체
            'strSQL = String.Format(strFormat, strWhere)
            Try
                'DB 접속
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                ' ------ Array 데이터 조회 (True 일때 헤더정보 포함 조회(Sheet Data Binding 할 경우 사용), False 일때 데이터만 조회)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                ' 오류 전송
                '.mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_ENDSUSU")
            Finally
                ' DB 접속 종료
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' =============== DeleteRtn Sample Code
    Public Function DeleteRtn(ByVal strInfoXML As String, ByRef strYEARMON As String) As Integer   '데이터 DELETE

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjceMD_ELECTRIC_SUSUTEMP = New eMDCO.ceMD_ELECTRIC_SUSUTEMP(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjceMD_ELECTRIC_SUSUTEMP.DeleteDo(strYEARMON)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjceMD_ELECTRIC_SUSUTEMP.Dispose()
            End Try
        End With
    End Function
    ' ============== ProcessRtn (Master & Detail) Sample Code 
    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal strMasterXML As String, _
                               ByVal vntData As Object, _
                               ByRef strYEARMON As String) As Integer  '데이터 INSERT/UPDATE 인수는 마지막에만 ByVal 이며 중간 경유는 ByRef

        Dim intRtn As Integer '결과값 변수  
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim strDEPTCD As String
        SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'XML Element 변수 선언 (strMasterXML을 변환)
                Dim xmlRoot As XmlElement
                xmlRoot = XMLGetRoot(strMasterXML) 'XML 데이터

                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리
                mobjceMD_ELECTRIC_SUSUTEMP = New eMDCO.ceMD_ELECTRIC_SUSUTEMP(mobjSCGLConfig)

                Select Case GetFlagMode(XMLGetElement(xmlRoot, meDATA_FLAG))
                    Case meINS_TRANS
                        If IsArray(vntData) Then
                            intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                            For i = 1 To intRows
                                strDEPTCD = GetElement(vntData, "DEPTCD", intColCnt, i, OPTIONAL_STR)
                                intRtn = InsertRtn_MD_ELECTRIC_SUSUTEMP(vntData, intColCnt, i, strDEPTCD)
                            Next
                        End If
                End Select


                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_ELECTRIC_SUSUTEMP.Dispose()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 비공개 Method"

    Private Function InsertRtn_MD_ELECTRIC_SUSUTEMP(ByVal vntData As Object, _
                                                 ByVal intColCnt As Integer, _
                                                 ByVal intRow As Integer, _
                                                 ByVal strDEPTCD As String) As Integer
        Dim intRtn As Integer
        intRtn = mobjceMD_ELECTRIC_SUSUTEMP.InsertDo( _
                                       GetElement(vntData, "YEARMON", intColCnt, intRow), _
                                       GetElement(vntData, "INPUT_MEDFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "SUSURATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "SUSU", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "TRANSRANK", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       strDEPTCD, _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function
#End Region
End Class