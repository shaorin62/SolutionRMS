'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 컨트롤 클래스 메이커 - 한화 S&C
'시스템구분    : 솔루션명 /시스템명/Server Control Class
'실행   환경    : COM+ Service Server Package
'프로그램명    : ccMDCMPRINTREG.vb
'기         능    : - 기능을 명시 합니다.
'특이  사항     : - 특이사항에 대해 표현
'                     -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 2004-03-30 오전 10:32:13 By MakeSFARV.2.0.0
'                  2) 2004-03-30 오전 10:32:13 By 작성자명을 씁니다.
'****************************************************************************************

Imports System.Xml                        ' XML처리
Imports SCGLControl                       ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr            '오류처리 클래스
Imports SCGLUtil.cbSCGLXml           'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil            '기타유틸리티 클래스
Imports eMDCO '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트

Public Class ccMDETELECTRICTRUTAX
    Inherits ccControl

#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccMDETELECTRICTRUTAX"                  '자신의 클래스명
    Private mobjceMD_TRUTAX_HDR As eMDCO.ceMD_TRUTAX_HDR
    Private mobjceMD_TRUTAX_DTL As eMDCO.ceMD_TRUTAX_DTL
    Private mobjceMD_TRUTAXGENERAL_HDR As eMDCO.ceMD_TRUTAXGENERAL_HDR
    Private mobjceMD_TRUTAXOUTLIST_HDR As eMDCO.ceMD_TRUTAXOUTLIST_HDR

    Private mobjceMD_ELECTRIC_MEDIUM As eMDCO.ceMD_ELECTRIC_MEDIUM
    Private mobjceMD_ELEC_TRANS_DTL As eMDCO.ceMD_ELEC_TRANS_DTL
    Private mobjceMD_ELEC_TRANS_HDR As eMDCO.ceMD_ELEC_TRANS_HDR
    Private mobjceMD_TAXELEC_TEMP As eMDCO.ceMD_TAXELEC_TEMP
    Private mobjceMD_MODIFYTRANS_TEMP As eMDCO.ceMD_MODIFYTRANS_TEMP
    'Private Const .DBConnStr = "Provider=SQLOLEDB;Data Source=10.110.10.86;Initial Catalog=MCDEV;DSN=MCDEV;UID=devadmin;Pwd=password" '커넥션Setting
#End Region

#Region "GROUP BLOCK : Property 선언"
#End Region

#Region "GROUP BLOCK : Event 선언"
    '반올림함수
    Public Function gRound(ByVal xNumber As Double, ByVal xPosition As Double) As Double
        Dim intX, intPositionNum
        If IsNumeric(xNumber) And IsNumeric(xPosition) Then
            intPositionNum = 10 ^ xPosition
            intX = Int(xNumber * intPositionNum + 0.5) / intPositionNum
            gRound = intX
        Else
            gRound = xNumber
        End If
    End Function
#End Region

#Region "GROUP BLOCK : Event 선언"
    Public Function Get_COMBOVOCH_VALUE(ByVal strInfoXML As String, _
                                        ByRef intRowCnt As Integer, _
                                        ByRef intColCnt As Integer) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정

        '조회 필드 설정
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = 'MD_VOCH_TYPE' " & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetDataType")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 공개 Method"
    Public Function Get_ELEC_TAXBUILD(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByVal strYEARMON As String, _
                                      ByVal strCLIENTCODE As String, _
                                      ByVal strCLIENTNAME As String, _
                                      ByVal strVOCH_TYPE As String, _
                                      ByVal strGUBUN As String) As Object


        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1 As String
        Dim Con2 As String
        Dim Con3 As String
        Dim Con4 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = ""
            Con2 = ""
            Con3 = ""
            Con4 = ""

            If strYEARMON <> "" Then Con1 = String.Format(" AND (TRANSYEARMON = '{0}')", strYEARMON)
            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (CLIENTCODE = '{0}')", strCLIENTCODE)
            If strCLIENTNAME <> "" Then Con3 = String.Format(" AND (DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) like '%{0}%')", strCLIENTNAME)
            If strCLIENTCODE <> "" Then Con4 = String.Format(" AND (CLIENTCODE = '{0}')", strCLIENTCODE)

            If strVOCH_TYPE <> "" Then
                Con4 = " AND VOCH_TYPE IN(" & strVOCH_TYPE & ")"
            End If

            strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)

            strFormat = " SELECT "
            strFormat = strFormat & "  VOCH_TYPE VOCH_TYPE_OLD,"
            strFormat = strFormat & "  VOCH_TYPE,"
            strFormat = strFormat & " 0 CHK,"
            strFormat = strFormat & " '' TAXMANAGE,"
            strFormat = strFormat & " DEMANDDAY, "
            strFormat = strFormat & " CLIENTCODE, DBO.SC_GET_HIGHCOMPANYNAME_FUN(CLIENTCODE) CLIENTNAME,"
            strFormat = strFormat & " DBO.SC_GET_BUSINO_FUN(CLIENTCODE) CLIENTBISNO, "
            strFormat = strFormat & " REAL_MED_CODE, DBO.SC_GET_HIGHCOMPANYNAME_FUN(REAL_MED_CODE) REAL_MED_NAME, "
            strFormat = strFormat & " DBO.SC_GET_BUSINO_FUN(REAL_MED_CODE) REAL_MED_BISNO, "
            strFormat = strFormat & "  ISNULL(AMT,0) AMT, ISNULL(VAT,0) VAT, amt SUMAMT, "
            If strGUBUN = "taxdiv" Then
                strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) + ' 공중파 대행광고료' SUMM,"
            ElseIf strGUBUN = "taxgroup" Then
                strFormat = strFormat & "'공중파 대행광고료' SUMM,"
            End If
            strFormat = strFormat & "  CAST(DATEPART(YEAR,GETDATE()) AS VARCHAR(4))  + RIGHT('00' + CAST(DATEPART(MONTH,GETDATE()) AS VARCHAR(2)), 2)+RIGHT('00' + CAST(DATEPART(DAY,GETDATE()) AS VARCHAR(2)), 2) PRINTDAY, "
            strFormat = strFormat & "  '' VOCHNO, "
            strFormat = strFormat & "  TRANSYEARMON,"
            strFormat = strFormat & "  TRANSNO,"
            strFormat = strFormat & "  DEPT_CD, DBO.SC_DEPT_NAME_FUN(DEPT_CD) DEPT_NAME,"
            strFormat = strFormat & "  DBO.SC_GET_ACCUSTCODE_FUN(CLIENTCODE) CLIENTACCODE,"
            strFormat = strFormat & "  DBO.SC_GET_ACCUSTCODE_FUN(REAL_MED_CODE) REAL_MED_ACCODE,"
            strFormat = strFormat & "  'A' MEDFLAG,"
            strFormat = strFormat & "  SUBSTRING(DEMANDDAY,1,6) TAXYEARMON,"
            strFormat = strFormat & "  '' RANKTRANS, "
            strFormat = strFormat & "  VOCH_TYPE,"
            strFormat = strFormat & "  DBO.SC_GET_CUSTOWNER_FUN(CLIENTCODE) CLIENTOWNER, "
            strFormat = strFormat & "  DBO.SC_GET_ADDRESS1_FUN(CLIENTCODE) CLIENTADDR1, "
            strFormat = strFormat & "  DBO.SC_GET_ADDRESS2_FUN(CLIENTCODE) CLIENTADDR2, "
            strFormat = strFormat & "  DBO.SC_GET_CUSTOWNER_FUN(REAL_MED_CODE) REAL_MEDOWNER, "
            strFormat = strFormat & "  DBO.SC_GET_ADDRESS1_FUN(REAL_MED_CODE) REAL_MEDADDR1, "
            strFormat = strFormat & "  DBO.SC_GET_ADDRESS2_FUN(REAL_MED_CODE) REAL_MEDADDR2, "
            strFormat = strFormat & "  DENSE_RANK() OVER (ORDER BY dbo.SC_GET_BUSINO_FUN(REAL_MED_CODE),dbo.SC_GET_BUSINO_FUN(CLIENTCODE)) RANKTRANS "
            strFormat = strFormat & "  FROM MD_ELEC_TRANS_HDR "
            strFormat = strFormat & "  WHERE 1=1 {0} "
            strFormat = strFormat & "  AND ISNULL(REAL_TAXNO,'') ='' "
            strFormat = strFormat & "  AND ISNULL(CONFIRMFLAG,0) = 1 "
            strFormat = strFormat & "  ORDER BY CLIENTBISNO,REAL_MED_BISNO, DEMANDDAY, AMT, TRANSNO"

            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetJOBSEQList")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With

    End Function

    Public Function Get_ELEC_TAX(ByVal strInfoXML As String, _
                                 ByRef intRowCnt As Integer, _
                                 ByRef intColCnt As Integer, _
                                 ByVal strYEARMON As String, _
                                 ByVal strCLIENTCODE As String, _
                                 ByVal strCLIENTNAME As String, _
                                 ByVal strVOCH_TYPE As String) As Object

        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1 As String
        Dim Con2 As String
        Dim Con3 As String
        Dim Con4 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = ""
            Con2 = ""
            Con3 = ""
            Con4 = ""

            If strYEARMON <> "" Then Con1 = String.Format(" AND (TAXYEARMON = '{0}')", strYEARMON)
            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (CLIENTCODE = '{0}')", strCLIENTCODE)
            If strCLIENTNAME <> "" Then Con3 = String.Format(" AND (DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) like '%{0}%')", strCLIENTNAME)
            If strCLIENTCODE <> "" Then Con4 = String.Format(" AND (CLIENTCODE = '{0}')", strCLIENTCODE)

            If strVOCH_TYPE <> "" Then
                Con4 = " AND ISNULL(VOCH_TYPE,'0') IN(" & strVOCH_TYPE & ") "
            End If

            strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)

            strFormat = "  SELECT "
            strFormat = strFormat & "  CASE WHEN DBO.MD_TAXVOCH_TYPE_CHANGE_FUN(TAXYEARMON, TAXNO) >=1 THEN ''"
            strFormat = strFormat & "  ELSE VOCH_TYPE END  VOCH_TYPE_OLD,"
            strFormat = strFormat & "  VOCH_TYPE,"
            strFormat = strFormat & "  0 CHK,"
            strFormat = strFormat & "  TAXYEARMON,"
            strFormat = strFormat & "  TAXNO,"
            strFormat = strFormat & "  TAXYEARMON + '-' + MJFLAG + '-' + DBO.LPAD(TAXNO,4,'0') TAXMANAGE,"
            strFormat = strFormat & "  '' TRANSYEARMON,"
            strFormat = strFormat & "  NULL TRANSNO,"
            strFormat = strFormat & "  NULL SEQ,"
            strFormat = strFormat & "  CLIENTNAME,"
            strFormat = strFormat & "  REAL_MED_NAME,"
            strFormat = strFormat & "  AMT,"
            strFormat = strFormat & "  VAT,"
            strFormat = strFormat & "  AMT + VAT SUMAMT,"
            strFormat = strFormat & "  DEMANDDAY,"
            strFormat = strFormat & "  SUMM,"
            strFormat = strFormat & "  PRINTDAY,"
            strFormat = strFormat & "  DBO.SC_DEPT_NAME_FUN(DEPT_CD) DEPT_NAME,"
            strFormat = strFormat & "  CLIENTCODE,"
            strFormat = strFormat & "  CLIENTACCODE,"
            strFormat = strFormat & "  CLIENTBISNO,"
            strFormat = strFormat & "  REAL_MED_CODE,"
            strFormat = strFormat & "  REAL_MED_ACCODE,"
            strFormat = strFormat & "  REAL_MED_BISNO,"
            strFormat = strFormat & "  DEPT_CD, "
            strFormat = strFormat & "  MEDFLAG, "
            strFormat = strFormat & "  VOCHNO "
            strFormat = strFormat & "  FROM MD_TRUTAX_HDR "
            strFormat = strFormat & "  WHERE MEDFLAG = 'A' {0} and isnull(attr10,0) <> 999999 ORDER BY TAXYEARMON,TAXNO "
            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetJOBSEQList")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With

    End Function

    Public Function Get_ELEC_TAXALL(ByVal strInfoXML As String, _
                                    ByRef intRowCnt As Integer, _
                                    ByRef intColCnt As Integer, _
                                    ByVal strYEARMON As String, _
                                    ByVal strCLIENTCODE As String, _
                                    ByVal strCLIENTNAME As String, _
                                    ByVal strVOCH_TYPE As String, _
                                    ByVal strGUBUN As String) As Object
        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1 As String
        Dim Con2 As String
        Dim Con3 As String
        Dim Con4 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = ""
            Con2 = ""
            Con3 = ""
            Con4 = ""

            If strYEARMON <> "" Then Con1 = String.Format(" AND (TRANSYEARMON = '{0}')", strYEARMON)
            If strCLIENTCODE <> "" Then Con2 = String.Format(" AND (CLIENTCODE = '{0}')", strCLIENTCODE)
            If strCLIENTNAME <> "" Then Con3 = String.Format(" AND (DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) like '%{0}%')", strCLIENTNAME)
            If strCLIENTCODE <> "" Then Con4 = String.Format(" AND (CLIENTCODE = '{0}')", strCLIENTCODE)

            If strVOCH_TYPE <> "" Then
                Con4 = " AND ISNULL(VOCH_TYPE,'0') IN(" & strVOCH_TYPE & ") "
            End If

            strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)

            strFormat = " SELECT "
            strFormat = strFormat & "  VOCH_TYPE VOCH_TYPE_OLD,"
            strFormat = strFormat & "  CASE ISNULL(CAST(TAXNO AS NVARCHAR(10)), 'NULL') "
            strFormat = strFormat & "  WHEN 'NULL' THEN VOCH_TYPE "
            strFormat = strFormat & "  ELSE DBO.MD_TAXVOCH_TYPE_FUN(TRANSYEARMON +'-'+CAST(TRANSNO AS NVARCHAR(10))+'-'+CAST(SEQ AS NVARCHAR(10)),'B') END VOCH_TYPE,"
            strFormat = strFormat & "  Case ISNULL(ATTR05,'')  WHEN '' THEN '미완료' ELSE '완료' END AS CHK,"
            strFormat = strFormat & "  REAL_TAXNO, "
            strFormat = strFormat & "  '' TAXMANAGE,"
            strFormat = strFormat & "  TRANSYEARMON,"
            strFormat = strFormat & "  TRANSNO,"
            strFormat = strFormat & "  NULL SEQ,"
            strFormat = strFormat & "  DBO.SC_GET_HIGHCOMPANYNAME_FUN(CLIENTCODE) CLIENTNAME,"
            strFormat = strFormat & "  DBO.SC_GET_HIGHCOMPANYNAME_FUN(REAL_MED_CODE) REAL_MED_NAME,"
            strFormat = strFormat & "  AMT,"
            strFormat = strFormat & "  VAT, "
            strFormat = strFormat & "  AMT + VAT SUMAMT,"
            strFormat = strFormat & "  NULL COMMI_RATE,"
            strFormat = strFormat & "  NULL COMMISSION,"
            strFormat = strFormat & "  DEMANDDAY,"
            If strGUBUN = "taxdiv" Then
                strFormat = strFormat & " DBO.SC_GET_HIGHCOMPANYNAME_FUN(CLIENTCODE) + ' 공중파 대행광고료' SUMM,"
            ElseIf strGUBUN = "taxgroup" Then
                strFormat = strFormat & "'공중파 대행광고료' SUMM,"
            End If
            strFormat = strFormat & "  CAST(DATEPART(YEAR,GETDATE()) AS VARCHAR(4))  + RIGHT('00' + CAST(DATEPART(MONTH,GETDATE()) AS VARCHAR(2)), 2)+RIGHT('00' + CAST(DATEPART(DAY,GETDATE()) AS VARCHAR(2)), 2) PRINTDAY,"
            strFormat = strFormat & "  DBO.SC_DEPT_NAME_FUN(DEPT_CD) DEPT_NAME,"
            strFormat = strFormat & "  CLIENTCODE,"
            strFormat = strFormat & "  DBO.SC_GET_ACCUSTCODE_FUN(CLIENTCODE) CLIENTACCODE,"
            strFormat = strFormat & "  DBO.SC_GET_BUSINO_FUN(CLIENTCODE) CLIENTBISNO,"
            strFormat = strFormat & "  REAL_MED_CODE,"
            strFormat = strFormat & "  DBO.SC_GET_ACCUSTCODE_FUN(REAL_MED_CODE) REAL_MED_ACCODE,"
            strFormat = strFormat & "  DBO.SC_GET_BUSINO_FUN(REAL_MED_CODE) REAL_MED_BISNO,"
            strFormat = strFormat & "  DEPT_CD, "
            strFormat = strFormat & "  'A' MEDFLAG, '' VOCHNO,SUBSTRING(DEMANDDAY,1,6) TAXYEARMON, "
            strFormat = strFormat & "  '' RANKTRANS, "
            strFormat = strFormat & "  '' PROGNAME, ISNULL(VOCH_TYPE,'N') SPONSOR,"
            strFormat = strFormat & "  dbo.SC_GET_CUSTOWNER_FUN(CLIENTCODE) CLIENTOWNER,"
            strFormat = strFormat & "  dbo.SC_GET_ADDRESS1_FUN(CLIENTCODE) CLIENTADDR1,"
            strFormat = strFormat & "  dbo.SC_GET_ADDRESS2_FUN(CLIENTCODE) CLIENTADDR2,"
            strFormat = strFormat & "  dbo.SC_GET_CUSTOWNER_FUN(REAL_MED_CODE) REAL_MEDOWNER,"
            strFormat = strFormat & "  dbo.SC_GET_ADDRESS1_FUN(REAL_MED_CODE) REAL_MEDADDR1,"
            strFormat = strFormat & "  dbo.SC_GET_ADDRESS2_FUN(REAL_MED_CODE) REAL_MEDADDR2"
            strFormat = strFormat & "  FROM MD_ELEC_TRANS_HDR"
            strFormat = strFormat & "  WHERE 1=1 {0} "
            strFormat = strFormat & "  AND ISNULL(CONFIRMFLAG,0) = 1 "

            strSQL = String.Format(strFormat, strWhere)

            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_CATV_TAXALL")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_HDR(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strTAXYEARMON As String, _
                                  ByVal strTAXNO As String) As String

        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim strXMLData As String
        Dim Con1, Con2 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = ""
            Con2 = ""

            If strTAXYEARMON <> "" Then Con1 = String.Format(" AND (TAXYEARMON = '{0}')", strTAXYEARMON)
            If strTAXNO <> "" Then Con2 = String.Format(" AND (TAXNO = '{0}')", strTAXNO)

            strWhere = BuildFields(" ", Con1, Con2)

            strFormat = strFormat & "  SELECT"
            strFormat = strFormat & "  CLIENTNAME, REAL_MED_NAME,"
            strFormat = strFormat & "  DEMANDDAY,"
            strFormat = strFormat & "  CLIENTBISNO, REAL_MED_BISNO,"
            strFormat = strFormat & "  DBO.SC_DEPT_NAME_FUN(DEPT_CD) DEPT_NAME,"
            strFormat = strFormat & "  ISNULL(AMT,0) AMT, ISNULL(VAT,0) VAT,"
            strFormat = strFormat & "  ISNULL(AMT,0) + ISNULL(VAT,0) SUMAMT,"
            strFormat = strFormat & "  VOCHNO,"
            strFormat = strFormat & "  SUMM"
            strFormat = strFormat & "  FROM MD_TRUTAX_HDR"
            strFormat = strFormat & "  WHERE "
            strFormat = strFormat & "  ISNULL(ATTR10,0) <> 999999"
            strFormat = strFormat & "  {0}"

            strSQL = String.Format(strFormat, strWhere)
            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                strXMLData = .mobjSCGLSql.SQLSelectXml(strSQL, intRowCnt, intColCnt)
                Return strXMLData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetJOBSEQList")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_DTL(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strTAXYEARMON As String, _
                                  ByVal strTAXNO As String) As Object

        Dim strSQL As String            'SQL문
        Dim strFormat As String         '임시 SQL문
        Dim strSelFields As String      '조회필드
        Dim strWhere As String
        Dim vntData As Object
        Dim Con1, Con2 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig

            Con1 = "" : Con2 = ""

            If strTAXYEARMON <> "" Then Con1 = String.Format(" AND (A.TAXYEARMON = '{0}')", strTAXYEARMON)
            If strTAXNO <> "" Then Con2 = String.Format(" AND (A.TAXNO = '{0}')", strTAXNO)

            strWhere = BuildFields(" ", Con1, Con2)

            strFormat = strFormat & "  SELECT "
            strFormat = strFormat & "  A.TAXYEARMON,"
            strFormat = strFormat & "  A.TAXNO,"
            strFormat = strFormat & "  CASE A.VOCH_TYPE_OLD WHEN 0 THEN '위수탁' WHEN 1 THEN '협찬' WHEN 2 THEN '일반' END VOCH_TYPE_OLD,"
            strFormat = strFormat & "  CASE A.VOCH_TYPE WHEN 0 THEN '위수탁' WHEN 1 THEN '협찬' WHEN 2 THEN '일반' END VOCH_TYPE,"
            strFormat = strFormat & "  B.CLIENTNAME,"
            strFormat = strFormat & "  B.CLIENTBISNO,"
            strFormat = strFormat & "  DBO.SC_GET_CUSTNAME_FUN(A.TIMCODE) TIMNAME,"
            strFormat = strFormat & "  DBO.SC_GET_SUBSEQNAME_FUN(A.SUBSEQ) SUBSEQNAME,"
            strFormat = strFormat & "  B.REAL_MED_NAME,"
            strFormat = strFormat & "  B.REAL_MED_BISNO,"
            strFormat = strFormat & "  DBO.SC_GET_CUSTNAME_FUN(A.MEDCODE) MEDNAME,"
            strFormat = strFormat & "  ISNULL(A.AMT,0) AMT,"
            strFormat = strFormat & "  ISNULL(A.VAT,0) VAT,"
            strFormat = strFormat & "  ISNULL(A.AMT,0) + ISNULL(A.VAT,0) SUMAMT,"
            strFormat = strFormat & "  DBO.SC_DEPT_NAME_FUN(A.DEPT_CD) DEPT_NAME, "
            strFormat = strFormat & "  DBO.MD_GET_MATTERNAME_FUN(A.MATTERCODE) MATTERNAME "
            strFormat = strFormat & "  FROM MD_TRUTAX_DTL A"
            strFormat = strFormat & "  LEFT JOIN MD_TRUTAX_HDR B"
            strFormat = strFormat & "  ON A.TAXYEARMON = B.TAXYEARMON"
            strFormat = strFormat & "  AND A.TAXNO = B.TAXNO"
            strFormat = strFormat & "  WHERE "
            strFormat = strFormat & "  ISNULL(A.ATTR10,0) <> 999999"
            strFormat = strFormat & "  {0}"

            strSQL = String.Format(strFormat, strWhere)
            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".GetJOBSEQList")
            Finally
                .mobjSCGLSql.SQLDisconnect() 'MD_GET_MEDBUSINO_FUN('B02354')
            End Try
        End With
    End Function

    Public Function ProcessRtn_Div(ByVal strInfoXML As String, _
                                   ByVal vntData As Object, _
                                   ByVal intTAXNO As Integer) As Integer

        Dim intRtn, intRtn1, intRtn2, intRtn3, intRtn4 As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim intTAXNOSEQ As Integer
        Dim strDEMANDDAY As String
        Dim strPRINTDAY As String
        Dim strTAXYEARMON As String
        Dim strSUMM As String
        Dim strTRANSYEARMON As String
        Dim lngTRANSNO As String
        Dim lngSEQ As String
        Dim strTAXNO As String
        Dim strTRANSNO As String
        Dim strTRANSNOHDR As String

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                mobjceMD_TRUTAX_HDR = New ceMD_TRUTAX_HDR(mobjSCGLConfig)
                mobjceMD_TRUTAX_DTL = New ceMD_TRUTAX_DTL(mobjSCGLConfig)
                mobjceMD_ELECTRIC_MEDIUM = New eMDCO.ceMD_ELECTRIC_MEDIUM(mobjSCGLConfig)
                mobjceMD_ELEC_TRANS_DTL = New eMDCO.ceMD_ELEC_TRANS_DTL(mobjSCGLConfig)
                mobjceMD_ELEC_TRANS_HDR = New eMDCO.ceMD_ELEC_TRANS_HDR(mobjSCGLConfig)
                intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)

                '''해당하는Row 만큼 Loop
                For i = 1 To intRows
                    ''' FLAG 조사 - INSERT/UPDATE 조사
                    If GetElement(vntData, "CHK", intColCnt, i, OPTIONAL_STR) = 1 Then
                        strTRANSYEARMON = GetElement(vntData, "TRANSYEARMON", intColCnt, i, OPTIONAL_STR)
                        lngTRANSNO = GetElement(vntData, "TRANSNO", intColCnt, i, OPTIONAL_STR)
                        lngSEQ = GetElement(vntData, "SEQ", intColCnt, i, OPTIONAL_STR)
                        strTRANSNO = strTRANSYEARMON & "-" & lngTRANSNO
                        strTRANSNOHDR = strTRANSYEARMON & "-" & lngTRANSNO
                        strDEMANDDAY = GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)
                        strPRINTDAY = GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(0, 4) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(5, 2) & GetElement(vntData, "PRINTDAY", intColCnt, i, OPTIONAL_STR).Substring(8, 2)
                        strTAXYEARMON = GetElement(vntData, "TAXYEARMON", intColCnt, i, OPTIONAL_STR)

                        intTAXNO = SelectRtn_TRUTAXNO(strTAXYEARMON)
                        strTAXNO = strTAXYEARMON & "-" & intTAXNO

                        '헤더저장    
                        intRtn = DIVInsertRtn_MD_TRUTAX_HDR(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, strDEMANDDAY, strPRINTDAY, strTRANSNOHDR)

                        'If GetElement(vntData, "VOCH_TYPE", intColCnt, i, OPTIONAL_STR) = "2" Then
                        '    intRtn = DIVInsertRtn_MD_TRUTAXGENERAL_HDR(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, strDEMANDDAY, strPRINTDAY)
                        '    intRtn = DIVInsertRtn_MD_TRUTAXOUTLIST_HDR(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, strDEMANDDAY, strPRINTDAY)
                        'End If

                        '헤더저장


                        '디테일저장
                        intRtn1 = DIVInsertRtn_MD_TRUTAX_DTL(vntData, intColCnt, i, strTAXYEARMON, intTAXNO, strTRANSNO)

                        '거래명세서 헤더의 세금계산서번호저장
                        intRtn4 = mobjceMD_ELEC_TRANS_HDR.Update_TruTax(strTRANSYEARMON, lngTRANSNO, strTAXNO)

                        '거래명세서 디테일의 세금계산서번호 저장
                        intRtn2 = mobjceMD_ELEC_TRANS_DTL.Update_TruTax(strTRANSYEARMON, lngTRANSNO, strTAXYEARMON, intTAXNO)

                        '신탁의 세금계산서번호 저장
                        intRtn3 = mobjceMD_ELECTRIC_MEDIUM.Update_TruTax(strTRANSNO, strTAXNO)
                    End If
                Next
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_Div")
            Finally
                'Resource해제
                mobjceMD_TRUTAX_HDR.Dispose()
                mobjceMD_TRUTAX_DTL.Dispose()
                mobjceMD_ELECTRIC_MEDIUM.Dispose()
                mobjceMD_ELEC_TRANS_HDR.Dispose()
                mobjceMD_ELEC_TRANS_DTL.Dispose()
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With

    End Function

    Public Function ProcessRtn_Group(ByVal strInfoXML As String, _
                                     ByVal vntData As Object, _
                                     ByVal mstrTRANSYEARMON As String, _
                                     ByVal mstrTRANSNO As String, _
                                     ByVal mstrPRINTDAY As String, _
                                     ByVal mstrCLIENTCODE As String, _
                                     ByVal mstrCLIENTACCODE As String, _
                                     ByVal mstrCLIENTBISNO As String, _
                                     ByVal mstrREAL_MED_CODE As String, _
                                     ByVal mstrREAL_MED_ACCODE As String, _
                                     ByVal mstrREAL_MED_BISNO As String, _
                                     ByVal mstrMEDCODE As String, _
                                     ByVal mstrDEPTCODE As String, _
                                     ByVal mstrMEDFLAG As String, _
                                     ByVal mstrTAXYEARMON As String, _
                                     ByVal mstrSPONSOR As String, _
                                     ByVal mstrCLIENTOWNER As String, _
                                     ByVal mstrCLIENTADDR1 As String, _
                                     ByVal mstrCLIENTADDR2 As String, _
                                     ByVal mstrREAL_MEDOWNER As String, _
                                     ByVal mstrREAL_MEDADDR1 As String, _
                                     ByVal mstrREAL_MEDADDR2 As String, _
                                     ByVal strCLIENTNAME As String, _
                                     ByVal strREAL_MED_NAME As String, _
                                     ByVal strDEMANDDAY As String) As Integer

        Dim intRtn, intRtn1, intRtn2, intRtn3, intRtn4 As Integer '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수


        '합계 변수
        Dim lngAMT As Double
        Dim lngSUMAMT As Double
        Dim lngVAT As Double
        Dim lngSUMVAT As Double
        Dim lngVALUE As Double
        Dim lngSUMVALUE As Double
        Dim strTRANSNO
        Dim strTRANSNOHDR
        Dim intTAXNO
        Dim strTAXNO
        Dim strAMT, strVAT
        Dim strSUMM

        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try

                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                mobjceMD_TRUTAX_HDR = New ceMD_TRUTAX_HDR(mobjSCGLConfig)
                mobjceMD_TRUTAX_DTL = New ceMD_TRUTAX_DTL(mobjSCGLConfig)
                mobjceMD_ELECTRIC_MEDIUM = New eMDCO.ceMD_ELECTRIC_MEDIUM(mobjSCGLConfig)
                mobjceMD_ELEC_TRANS_DTL = New eMDCO.ceMD_ELEC_TRANS_DTL(mobjSCGLConfig)
                mobjceMD_ELEC_TRANS_HDR = New eMDCO.ceMD_ELEC_TRANS_HDR(mobjSCGLConfig)
                intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                '''해당하는Row 만큼 Loop
                For i = 1 To intRows
                    ''' FLAG 조사 - INSERT/UPDATE 조사
                    strTRANSNO = mstrTRANSYEARMON & "-" & mstrTRANSNO
                    strTRANSNOHDR = mstrTRANSYEARMON & "-" & mstrTRANSNO
                    intTAXNO = SelectRtn_TRUTAXNO(mstrTAXYEARMON)
                    strTAXNO = mstrTAXYEARMON & "-" & intTAXNO
                    strAMT = GetElement(vntData, "AMT", intColCnt, i, OPTIONAL_STR)
                    strVAT = GetElement(vntData, "VAT", intColCnt, i, OPTIONAL_STR)
                    strSUMM = GetElement(vntData, "SUMM", intColCnt, i, OPTIONAL_STR)

                    '헤더저장
                    intRtn = InsertRtn_TRUTAX_HDR(vntData, intColCnt, i, mstrTAXYEARMON, intTAXNO, mstrCLIENTCODE, mstrCLIENTACCODE, mstrREAL_MED_CODE, mstrREAL_MED_ACCODE, mstrDEPTCODE, strAMT, strVAT, strDEMANDDAY, mstrPRINTDAY, mstrCLIENTBISNO, mstrREAL_MED_BISNO, strSUMM, strCLIENTNAME, mstrCLIENTOWNER, mstrCLIENTADDR1, mstrCLIENTADDR2, strREAL_MED_NAME, mstrREAL_MEDOWNER, mstrREAL_MEDADDR1, mstrREAL_MEDADDR2, strTRANSNOHDR)

                    '디테일저장
                    intRtn1 = InsertRtn_TRUTAX_DTL(vntData, intColCnt, i, mstrTAXYEARMON, intTAXNO, mstrMEDCODE, strAMT, strVAT, strSUMM, strTRANSNOHDR, mstrSPONSOR)

                    '거래명세서 디테일의 세금계산서번호 저장
                    intRtn4 = mobjceMD_ELEC_TRANS_HDR.Update_TruTax(mstrTRANSYEARMON, mstrTRANSNO, strTAXNO)

                    '거래명세서 디테일의 세금계산서번호 저장
                    intRtn2 = mobjceMD_ELEC_TRANS_DTL.Update_TruTax(mstrTRANSYEARMON, mstrTRANSNO, mstrTAXYEARMON, intTAXNO)

                    '신탁의 세금계산서번호 저장
                    intRtn3 = mobjceMD_ELECTRIC_MEDIUM.Update_TruTax(strTRANSNO, strTAXNO)
                Next
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_Div")
            Finally
                'Resource해제
                mobjceMD_TRUTAX_HDR.Dispose()
                mobjceMD_TRUTAX_DTL.Dispose()
                mobjceMD_ELECTRIC_MEDIUM.Dispose()
                mobjceMD_ELEC_TRANS_DTL.Dispose()
                mobjceMD_ELEC_TRANS_HDR.Dispose()
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function


    Public Function SelectRtn_TRUTAXNO(ByVal strTAXYEARMON As String) As String
        Dim strSQL As String
        Dim strFormat As String
        Dim strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = String.Format("select ISNULL(Max(TAXNO),0) +1 From MD_TRUTAX_HDR WHERE TAXYEARMON = '" & strTAXYEARMON & "'")
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TRANSNO")
            Finally
            End Try
        End With
    End Function
    Public Function SelectRtn_TRUTAXNOSEQ(ByVal strTAXYEARMON As String, _
                                          ByVal intTAXNO As Integer) As String
        Dim strSQL As String
        Dim strFormat As String
        Dim strRtn As String

        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = String.Format("select ISNULL(Max(TAXNOSEQ),0) +1 From MD_TRUTAX_DTL WHERE TAXYEARMON = '" & strTAXYEARMON & "' AND TAXNO =" & intTAXNO)
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TRUTAXNOSEQ")
            Finally
            End Try
        End With
    End Function


    Public Function SelectRtn_TRUTAXSEQ(ByVal intTAXNO As Integer, ByVal strTAXYEARMON As String) As String
        Dim strSQL As String
        Dim strFormat As String
        Dim strRtn As String
        With mobjSCGLConfig '기본정보 Config 개체
            Try
                strSQL = String.Format("select ISNULL(Max(TAXNOSEQ),0) +1 From MD_TRUTAX_DTL WHERE TAXYEARMON = '" & strTAXYEARMON & "' AND TAXNO = '" & intTAXNO & "'")
                strRtn = .mobjSCGLSql.SQLSelectOneScalar(strSQL)
                Return strRtn
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_TRUTAXSEQ")
            Finally
            End Try
        End With
    End Function

    '======== 생성된 세금계산서 삭제
    Public Function DeleteRtn_TruTax(ByVal strInfoXML As String, _
                                     ByVal strTAXYEARMON As String, _
                                     ByVal intTAXNO As Integer) As Integer
        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )
        Dim strTAXNO As String

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                strTAXNO = strTAXYEARMON & "-" & CStr(intTAXNO)
                mobjceMD_TRUTAX_HDR = New ceMD_TRUTAX_HDR(mobjSCGLConfig)
                mobjceMD_TRUTAX_DTL = New ceMD_TRUTAX_DTL(mobjSCGLConfig)
                mobjceMD_ELECTRIC_MEDIUM = New eMDCO.ceMD_ELECTRIC_MEDIUM(mobjSCGLConfig)
                mobjceMD_ELEC_TRANS_DTL = New eMDCO.ceMD_ELEC_TRANS_DTL(mobjSCGLConfig)
                mobjceMD_ELEC_TRANS_HDR = New eMDCO.ceMD_ELEC_TRANS_HDR(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                strTAXNO = strTAXYEARMON & "-" & intTAXNO

                '거래명세서의 세금계산서년월,번호 삭제
                intRtn = mobjceMD_ELEC_TRANS_HDR.TruTaxDeleteUpdateDo2(strTAXNO)

                intRtn = mobjceMD_ELEC_TRANS_DTL.TruTaxDeleteUpdateDo2(strTAXYEARMON, intTAXNO)

                '신탁테이블의 세금계산서 번호 삭제
                intRtn = mobjceMD_ELECTRIC_MEDIUM.TruTaxDeleteUpdateDo(strTAXNO)

                '헤더 삭제
                intRtn = mobjceMD_TRUTAX_HDR.DeleteDo(strTAXYEARMON, intTAXNO)
                '디테일 삭제
                intRtn = mobjceMD_TRUTAX_DTL.DeleteDo(strTAXYEARMON, intTAXNO)

                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn_TruTax")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjceMD_TRUTAX_HDR.Dispose()
                mobjceMD_TRUTAX_DTL.Dispose()
                mobjceMD_ELECTRIC_MEDIUM.Dispose()
                mobjceMD_ELEC_TRANS_DTL.Dispose()
            End Try
        End With

    End Function

    '세금계산서 출력을 위한 테이블 삭제처리
    Public Function DeleteRtn_TEMP(ByVal strInfoXML As String) As Integer   '데이터 DELETE

        Dim intRtn As Integer      'Return변수( 처리건수 또는 0 )

        SetConfig(strInfoXML)    '기본정보 Setting
        With mobjSCGLConfig    '기본정보 Config 개체
            Try
                ' 사용할Entity 개체생성(Config 정보를 넘겨생성)
                mobjceMD_TAXELEC_TEMP = New ceMD_TAXELEC_TEMP(mobjSCGLConfig)
                ' DB 접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                ' 엔티티 오브젝트의 Delete 메소드 호출
                intRtn = mobjceMD_TAXELEC_TEMP.DeleteDo(.WRKUSR)
                ' 트랜잭션 Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션 RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & "DeleteRtn")
            Finally
                'DB접속 종료
                .mobjSCGLSql.SQLDisconnect()
                '사용한 Entity(개체Dispose)
                mobjceMD_TAXELEC_TEMP.Dispose()
            End Try
        End With
    End Function

    ' ============== ProcessRtn (Master & Detail) Sample Code 
    Public Function ProcessRtn_TEMP(ByVal strInfoXML As String, _
                                    ByVal strTAXYEARMON As String, _
                                    ByVal strTAXNO As String, _
                                    ByVal VATFLAG As String, _
                                    ByVal FLAG As String, _
                                    ByVal strNUM As Double, _
                                    ByRef strUSERID As String) As Integer

        Dim intRtn As Integer  '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim intCnt

        SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리
                mobjceMD_TAXELEC_TEMP = New ceMD_TAXELEC_TEMP(mobjSCGLConfig)

                strUSERID = .WRKUSR 'USERID 를 받아야 출력시에 USERID에 따른 구분을 둘수있다.
                intRtn = InsertRtn_TRANS_TEMP(strTAXYEARMON, strTAXNO, VATFLAG, FLAG, strNUM)
                mobjceMD_TAXELEC_TEMP.Dispose()
                '트랜잭션Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_TEMP")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    ' ============== ProcessRtn (Master & Detail) Sample Code 
    Public Function ProcessRtn_MODIFYTEMP(ByVal strInfoXML As String, _
                                          ByVal strTAXYEARMON As String, _
                                          ByRef strTAXNO As String, _
                                          ByVal strMEDFLAG As String) As String
        Dim intRtn As Integer  '결과값 변수
        Dim i, intColCnt, intRows As Integer '루프, 컬럼Cnt, 로우Cnt 변수
        Dim intCnt

        SetConfig(strInfoXML) '기본정보 Setting

        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                'DB접속 및 트랜잭션 시작
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                'Master 데이터 처리
                mobjceMD_MODIFYTRANS_TEMP = New ceMD_MODIFYTRANS_TEMP(mobjSCGLConfig)

                intRtn = mobjceMD_MODIFYTRANS_TEMP.INSERTINTO_TEMP(strTAXYEARMON, strTAXNO, strMEDFLAG, "MD_PRINTTRANS_DTL")

                mobjceMD_MODIFYTRANS_TEMP.Dispose()
                '트랜잭션Commit
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                '트랜잭션RollBack 및 오류 전송
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_MODIFYTEMP")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    '상세페이지의 부가세/적요 수정시
    Public Function ProcessRtn_SUMM(ByVal strInfoXML As String, _
                                    ByVal strTAXYEARMON As String, _
                                    ByVal intTAXNO As Integer, _
                                    ByVal strSUMM As String, _
                                    ByVal strVAT As Double) As Integer
        Dim intRtn As Integer
        SetConfig(strInfoXML) '기본정보 Setting
        With mobjSCGLConfig '기본정보를 가지고 있는 Config 개체
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()
                mobjceMD_TRUTAX_HDR = New ceMD_TRUTAX_HDR(mobjSCGLConfig)

                intRtn = mobjceMD_TRUTAX_HDR.SUMMUpdateDo(strTAXYEARMON, intTAXNO, strSUMM, strVAT)
                .mobjSCGLSql.SQLCommitTrans()
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn_SUMM")
            Finally
                'Resource해제
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_TRUTAX_HDR.Dispose()
            End Try
        End With
    End Function



#End Region

#Region "GROUP BLOCK : 외부에 비공개 Method"

    Private Function DIVInsertRtn_MD_TRUTAX_HDR(ByVal vntData As Object, _
                                                ByVal intColCnt As Integer, _
                                                ByVal intRow As Integer, _
                                                ByVal strTAXYEARMON As String, _
                                                ByVal intTAXNO As Integer, _
                                                ByVal strDEMANDDAY As String, _
                                                ByVal strPRINTDAY As String, _
                                                ByVal strTRANSNOHDR As String) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_TRUTAX_HDR.InsertDo( _
                                       strTAXYEARMON, _
                                       intTAXNO, _
                                       GetElement(vntData, "MEDFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTACCODE", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_ACCODE", intColCnt, intRow), _
                                       GetElement(vntData, "DEPT_CD", intColCnt, intRow), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VAT", intColCnt, intRow, NULL_NUM, True), _
                                       strDEMANDDAY, _
                                       strPRINTDAY, _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "VOCH_TYPE", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTBISNO", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_BISNO", intColCnt, intRow), _
                                       GetElement(vntData, "SUMM", intColCnt, intRow), _
                                       "MT", _
                                       GetElement(vntData, "REV_NA_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "REC_NA_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTNAME", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTOWNER", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTADDR1", intColCnt, intRow), _
                                       GetElement(vntData, "CLIENTADDR2", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_NAME", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MEDOWNER", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MEDADDR1", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MEDADDR2", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function


    Private Function DIVInsertRtn_MD_TRUTAX_DTL(ByVal vntData As Object, _
                                                ByVal intColCnt As Integer, _
                                                ByVal intRow As Integer, _
                                                ByVal strTAXYEARMON As String, _
                                                ByVal intTAXNO As Integer, _
                                                ByVal strTRANSNO As String) As Integer

        Dim intRtn As Integer
        intRtn = mobjceMD_TRUTAX_DTL.InsertDo( _
                                        strTAXYEARMON, _
                                       intTAXNO, _
                                       1, _
                                       GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
                                       GetElement(vntData, "REAL_MED_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "MEDCODE", intColCnt, intRow), _
                                       GetElement(vntData, "TIMCODE", intColCnt, intRow), _
                                       GetElement(vntData, "SUBSEQ", intColCnt, intRow), _
                                       GetElement(vntData, "DEPT_CD", intColCnt, intRow), _
                                       GetElement(vntData, "MATTERCODE", intColCnt, intRow), _
                                       GetElement(vntData, "STD", intColCnt, intRow), _
                                       GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VAT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "SUMM", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       "A", _
                                       strTRANSNO, _
                                       GetElement(vntData, "VOCH_TYPE_OLD", intColCnt, intRow), _
                                       GetElement(vntData, "VOCH_TYPE", intColCnt, intRow), _
                                       GetElement(vntData, "COMMI_RATE", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "COMMISSION", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PROJECTION", intColCnt, intRow), _
                                       GetElement(vntData, "DUTYFLAG", intColCnt, intRow), _
                                       GetElement(vntData, "TRUST_YEARMON", intColCnt, intRow), _
                                       GetElement(vntData, "TRUST_SEQ", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function


    Private Function InsertRtn_TRUTAX_HDR(ByVal vntData As Object, _
                                           ByVal intColCnt As Integer, _
                                           ByVal intRow As Integer, _
                                           ByVal mstrTAXYEARMON As String, _
                                           ByVal intTAXNO As String, _
                                           ByVal mstrCLIENTCODE As String, _
                                           ByVal mstrCLIENTACCODE As String, _
                                           ByVal mstrREAL_MED_CODE As String, _
                                           ByVal mstrREAL_MED_ACCODE As String, _
                                           ByVal mstrDEPTCODE As String, _
                                           ByVal strAMT As Double, _
                                           ByVal strVAT As Double, _
                                           ByVal strDEMANDDAY As String, _
                                           ByVal mstrPRINTDAY As String, _
                                           ByVal mstrCLIENTBISNO As String, _
                                           ByVal mstrREAL_MED_BISNO As String, _
                                           ByVal strSUMM As String, _
                                           ByVal strCLIENTNAME As String, _
                                           ByVal mstrCLIENTOWNER As String, _
                                           ByVal mstrCLIENTADDR1 As String, _
                                           ByVal mstrCLIENTADDR2 As String, _
                                           ByVal strREAL_MED_NAME As String, _
                                           ByVal mstrREAL_MEDOWNER As String, _
                                           ByVal mstrREAL_MEDADDR1 As String, _
                                           ByVal mstrREAL_MEDADDR2 As String, _
                                           ByVal strTRANSNOHDR As String) As Integer


        Dim intRtn As Integer
        intRtn = mobjceMD_TRUTAX_HDR.InsertDo( _
                                       mstrTAXYEARMON, _
                                       intTAXNO, _
                                       "A", _
                                       mstrCLIENTCODE, _
                                       mstrCLIENTACCODE, _
                                       mstrREAL_MED_CODE, _
                                       mstrREAL_MED_ACCODE, _
                                       mstrDEPTCODE, _
                                       strAMT, _
                                       strVAT, _
                                       strDEMANDDAY, _
                                       mstrPRINTDAY, _
                                       GetElement(vntData, "VOCHNO", intColCnt, intRow), _
                                       GetElement(vntData, "MEMO", intColCnt, intRow), _
                                       mstrCLIENTBISNO, _
                                       mstrREAL_MED_BISNO, _
                                       strSUMM, _
                                       "MT", _
                                       GetElement(vntData, "REV_NA_CODE", intColCnt, intRow), _
                                       GetElement(vntData, "REC_NA_CODE", intColCnt, intRow), _
                                       strCLIENTNAME, _
                                       mstrCLIENTOWNER, _
                                       mstrCLIENTADDR1, _
                                       mstrCLIENTADDR2, _
                                       strREAL_MED_NAME, _
                                       mstrREAL_MEDOWNER, _
                                       mstrREAL_MEDADDR1, _
                                       mstrREAL_MEDADDR2, _
                                       GetElement(vntData, "ATTR01", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       strTRANSNOHDR, _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn

    End Function


    Private Function InsertRtn_TRUTAX_DTL(ByVal vntData As Object, _
                                          ByVal intColCnt As Integer, _
                                          ByVal intRow As Integer, _
                                          ByVal mstrTAXYEARMON As String, _
                                          ByVal intTAXNO As Integer, _
                                          ByVal mstrMEDCODE As String, _
                                          ByVal strAMT As Double, _
                                          ByVal strVAT As Double, _
                                          ByVal strSUMM As String, _
                                          ByVal strTRANSNOHDR As String, _
                                          ByVal mstrSPONSOR As String) As Integer



        Dim intRtn As Integer
        intRtn = mobjceMD_TRUTAX_DTL.InsertDo( _
                                       mstrTAXYEARMON, _
                                       intTAXNO, _
                                       1, _
                                       mstrMEDCODE, _
                                       GetElement(vntData, "MEDBUSINO", intColCnt, intRow), _
                                       GetElement(vntData, "STD", intColCnt, intRow), _
                                       GetElement(vntData, "QTY", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "PRICE", intColCnt, intRow, NULL_NUM, True), _
                                       strAMT, _
                                       strVAT, _
                                       strSUMM, _
                                       GetElement(vntData, "REMARK", intColCnt, intRow), _
                                       "A", _
                                       strTRANSNOHDR, _
                                       GetElement(vntData, "PROGRAM", intColCnt, intRow), _
                                       GetElement(vntData, "PROGNAME", intColCnt, intRow), _
                                       mstrSPONSOR, _
                                       GetElement(vntData, "ATTR02", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR03", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR04", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR05", intColCnt, intRow), _
                                       GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
        Return intRtn
    End Function

    Private Function InsertRtn_TRANS_TEMP(ByVal strTAXYEARMON As String, _
                                          ByRef strTAXNO As String, _
                                          ByRef VATFLAG As String, _
                                          ByRef FLAG As String, _
                                          ByRef strNUM As Double) As Integer


        Dim intRtn As Integer
        intRtn = mobjceMD_TAXELEC_TEMP.InsertDo( _
                                       strTAXYEARMON, _
                                       strTAXNO, _
                                       VATFLAG, _
                                       FLAG, _
                                       strNUM)

    End Function


    'Private Function DIVInsertRtn_MD_TRUTAXGENERAL_HDR(ByVal vntData As Object, _
    '                                                   ByVal intColCnt As Integer, _
    '                                                   ByVal intRow As Integer, _
    '                                                   ByVal strTAXYEARMON As String, _
    '                                                   ByVal intTAXNO As Integer, _
    '                                                   ByVal strDEMANDDAY As String, _
    '                                                   ByVal strPRINTDAY As String) As Integer
    '    Dim intRtn As Integer
    '    intRtn = mobjceMD_TRUTAXGENERAL_HDR.InsertDo( _
    '                                   strTAXYEARMON, _
    '                                   intTAXNO, _
    '                                   GetElement(vntData, "MEDFLAG", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_CODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTACCODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_ACCODE", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "DEPT_CD", intColCnt, intRow), _
    '                                   GetElement(vntData, "GENERALAMT", intColCnt, intRow, NULL_NUM, True), _
    '                                   0, _
    '                                   strDEMANDDAY, _
    '                                   strPRINTDAY, _
    '                                   GetElement(vntData, "VOCHNO", intColCnt, intRow), _
    '                                   GetElement(vntData, "VOCH_TYPE", intColCnt, intRow), _
    '                                   GetElement(vntData, "MEMO", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTBISNO", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_BISNO", intColCnt, intRow), _
    '                                   GetElement(vntData, "SUMM", intColCnt, intRow), _
    '                                   "MT", _
    '                                   GetElement(vntData, "REV_NA_CODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "REC_NA_CODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTNAME", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTOWNER", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTADDR1", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTADDR2", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_NAME", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MEDOWNER", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MEDADDR1", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MEDADDR2", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR01", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR02", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR03", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR04", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR05", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
    '    Return intRtn

    'End Function

    'Private Function DIVInsertRtn_MD_TRUTAXOUTLIST_HDR(ByVal vntData As Object, _
    '                                                   ByVal intColCnt As Integer, _
    '                                                   ByVal intRow As Integer, _
    '                                                   ByVal strTAXYEARMON As String, _
    '                                                   ByVal intTAXNO As Integer, _
    '                                                   ByVal strDEMANDDAY As String, _
    '                                                   ByVal strPRINTDAY As String) As Integer
    '    Dim intRtn As Integer
    '    intRtn = mobjceMD_TRUTAXOUTLIST_HDR.InsertDo( _
    '                                   strTAXYEARMON, _
    '                                   intTAXNO, _
    '                                   GetElement(vntData, "MEDFLAG", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTCODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_CODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTACCODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_ACCODE", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "DEPT_CD", intColCnt, intRow), _
    '                                   GetElement(vntData, "OUTLISTAMT", intColCnt, intRow, NULL_NUM, True), _
    '                                   0, _
    '                                   strDEMANDDAY, _
    '                                   strPRINTDAY, _
    '                                   GetElement(vntData, "VOCHNO", intColCnt, intRow), _
    '                                   GetElement(vntData, "VOCH_TYPE", intColCnt, intRow), _
    '                                   GetElement(vntData, "MEMO", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTBISNO", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_BISNO", intColCnt, intRow), _
    '                                   GetElement(vntData, "SUMM", intColCnt, intRow), _
    '                                   "MT", _
    '                                   GetElement(vntData, "REV_NA_CODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "REC_NA_CODE", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTNAME", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTOWNER", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTADDR1", intColCnt, intRow), _
    '                                   GetElement(vntData, "CLIENTADDR2", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MED_NAME", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MEDOWNER", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MEDADDR1", intColCnt, intRow), _
    '                                   GetElement(vntData, "REAL_MEDADDR2", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR01", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR02", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR03", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR04", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR05", intColCnt, intRow), _
    '                                   GetElement(vntData, "ATTR06", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR07", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR08", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR09", intColCnt, intRow, NULL_NUM, True), _
    '                                   GetElement(vntData, "ATTR10", intColCnt, intRow, NULL_NUM, True))
    '    Return intRtn

    'End Function

#End Region
End Class