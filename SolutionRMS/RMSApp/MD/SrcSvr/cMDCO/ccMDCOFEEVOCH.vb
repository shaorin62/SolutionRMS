'****************************************************************************************
'Generated By: MakeSFAR V.2.0.0 - 컨트롤 클래스 메이커
'시스템구분    : 솔루션명 /시스템명/Server Control Class
'실행   환경    : COM+ Service Server Package
'프로그램명    : ccMDCMDEPTMST.vb
'기         능    : - 기능을 명시 합니다.
'특이  사항     : - 특이사항에 대해 표현
'                     -
'----------------------------------------------------------------------------------------
'HISTORY    :1) 
'****************************************************************************************

Imports System.Xml                  ' XML처리
Imports SCGLControl                 ' ControlClass의 Base Class
Imports SCGLUtil.cbSCGLConfig       ' ConfigurationClass
Imports SCGLUtil.cbSCGLErr          '오류처리 클래스
Imports SCGLUtil.cbSCGLXml          'XML처리 클래스
Imports SCGLUtil.cbSCGLUtil         '기타유틸리티 클래스
Imports eMDCO                       '엔터티 추가

' 엔티티 클래스 사용시 해당 엔티티 클래스의 프로젝트를 참조한 후 Imports 하십시요. 
' Imports 엔티티프로젝트

Public Class ccMDCOFEEVOCH
    Inherits ccControl
#Region "GROUP BLOCK : 전역 또는 모듈레벨의 변수/상수 선언"
    Private CLASS_NAME = "ccMDCOFEEVOCH"                  '자신의 클래스명
    Private mobjceMD_FEEVOCH_MST As eMDCO.ceMD_FEEVOCH_MST             '사용할 Entity 변수 선언
#End Region

#Region "GROUP BLOCK : 외부에비공개"

    Public Function Get_COMBO_VALUE(ByVal strInfoXML As String, _
                                  ByRef intRowCnt As Integer, _
                                  ByRef intColCnt As Integer, _
                                  ByVal strCODE As String) As Object

        Dim strSQL, strFormat, strSelFields As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정					

        '조회 필드 설정					
        strSelFields = "CODE, CODE_NAME"

        'SQL문 생성

        strFormat = "SELECT {0} " & _
                    "FROM SC_CODE " & _
                    "WHERE CLASS_CODE = '" & strCODE & "' and use_yn = 'Y'" & _
                    "ORDER BY SORT_SEQ "

        With mobjSCGLConfig
            strSQL = String.Format(strFormat, strSelFields)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_COMBO_VALUE")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function Get_SUBCOMBO_VALUE(ByVal strInfoXML As String, _
                               ByRef intRowCnt As Integer, _
                               ByRef intColCnt As Integer, _
                               ByVal strCODE As String) As Object

        Dim strSQL, strFormat As String
        Dim vntData As Object

        SetConfig(strInfoXML)   '기본정보 설정					

        '조회 필드 설정					
        strFormat = " SELECT "
        strFormat = strFormat & " BANK_TYPE CODE, "
        strFormat = strFormat & " BANK_TYPE CODE_NAME "
        strFormat = strFormat & " FROM SC_BANKTYPE_MST"
        strFormat = strFormat & " WHERE 1=1"
        strFormat = strFormat & " AND REPLACE(BUSINO,'-','') = '" & strCODE & "'"
        strFormat = strFormat & " AND USE_YN = 'Y'"

        With mobjSCGLConfig
            strSQL = String.Format(strFormat)

            ''데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".Get_SUBCOMBO_VALUE")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn_FEELIST(ByVal strInfoXML As String, _
                                      ByRef intRowCnt As Integer, _
                                      ByRef intColCnt As Integer, _
                                      ByVal strYEARMON As String, _
                                      ByVal strVOCH_TYPE As String, _
                                      ByVal strGBN As String) As Object

        Dim strSQL, strFormat, strWhere As String
        Dim vntData As Object
        Dim Con1, Con2

        Con1 = "" : Con2 = ""

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig
            If strYEARMON <> "" Then Con1 = String.Format(" AND (A.YEARMON = '{0}')", strYEARMON)

            If strGBN <> "" Then
                If strGBN = "rdT" Then
                    Con2 = " AND ISNULL(B.VOCHNO,'') <> '' "
                ElseIf strGBN = "rdF" Then
                    Con2 = " AND ISNULL(B.VOCHNO,'') = '' AND ISNULL(B.ERRMSG,'') = '' "
                ElseIf strGBN = "rdE" Then
                    Con2 = " AND ISNULL(B.ERRMSG,'') <> '' "
                ElseIf strGBN = "rdA" Then
                    Con2 = " "
                End If
            End If

            '조회 필드 설정
            strWhere = BuildFields(" ", Con1, Con2)

            If strVOCH_TYPE = "F" Then

                strFormat = strFormat & " SELECT "
                strFormat = strFormat & " A.YEARMON TAXYEARMON, A.SEQ TAXNO ,"
                strFormat = strFormat & " A.CLIENTCODE, "
                strFormat = strFormat & " DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CLIENTNAME, "
                strFormat = strFormat & " B.VOCHNO, B.ERRMSG"
                strFormat = strFormat & " FROM SC_FEE_MST A"
                strFormat = strFormat & " LEFT JOIN ("
                strFormat = strFormat & " 	SELECT "
                strFormat = strFormat & " 	TAXYEARMON, TAXNO,"
                strFormat = strFormat & " 	VOCHNO,ISNULL(ERRMSG,'') ERRMSG"
                strFormat = strFormat & " 	FROM MD_FEEVOCH_MST"
                strFormat = strFormat & " 	GROUP BY TAXYEARMON, TAXNO, VOCHNO , ISNULL(ERRMSG,'')"
                strFormat = strFormat & " )B ON A.YEARMON = B.TAXYEARMON AND A.SEQ = B.TAXNO  AND A.VOCHNO = B.VOCHNO "
                strFormat = strFormat & " WHERE 1=1 "
                strFormat = strFormat & " {0} "

            End If

            strSQL = String.Format(strFormat, strWhere)
            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn_FEELIST")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function SelectRtn(ByVal strInfoXML As String, _
                              ByRef intRowCnt As Integer, _
                              ByRef intColCnt As Integer, _
                              ByVal strYEARMON As String, _
                              ByVal strCLIENTCODE As String, _
                              ByVal strCLIENTNAME As String, _
                              ByVal strVOCH_TYPE As String, _
                              ByVal strGBN As String) As Object

        Dim strSQL, strFormat, strWhere As String
        Dim vntData As Object
        Dim Con1, Con2, Con3, Con4 As String

        SetConfig(strInfoXML)   '기본정보 설정
        With mobjSCGLConfig
            '데이터 조회
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                Con1 = "" : Con2 = "" : Con3 = "" : Con4 = ""

                If strYEARMON <> "" Then Con1 = String.Format(" AND (A.YEARMON = '{0}')", strYEARMON)
                If strCLIENTCODE <> "" Then Con2 = String.Format(" AND A.CLIENTCODE = '{0}'", strCLIENTCODE)
                If strCLIENTNAME <> "" Then Con3 = String.Format(" AND DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE)  LIKE '%{0}%'", strCLIENTNAME)

                If strGBN <> "" Then
                    If strGBN = "rdT" Then
                        Con4 = " AND ISNULL(B.VOCHNO,'') <> '' "
                    ElseIf strGBN = "rdF" Then
                        Con4 = " AND ISNULL(B.VOCHNO,'') = '' AND ISNULL(B.ERRMSG,'') = '' "
                    ElseIf strGBN = "rdE" Then
                        Con4 = " AND ISNULL(B.ERRMSG,'') <> '' "
                    ElseIf strGBN = "rdA" Then
                        Con4 = " "
                    End If
                End If

                strWhere = BuildFields(" ", Con1, Con2, Con3, Con4)
                If strVOCH_TYPE = "F" Then

                    strFormat = " SELECT "
                    strFormat = strFormat & " 0 CHK, GFLAG,POSTINGDATE,"
                    strFormat = strFormat & " CUSTOMERCODE,CUSTNAME,SUMM,BA,"
                    strFormat = strFormat & " COSTCENTER,DEPT_NAME,AMT,VAT, "
                    strFormat = strFormat & " SEMU,BP,DEMANDDAY, DUEDATE, VENDOR,BMORDER,BANKTYPE, "
                    strFormat = strFormat & " REAL_MED_NAME,GBN,ACCOUNT, DEBTOR,DOCUMENTDATE,PREPAYMENT,"
                    strFormat = strFormat & " FROMDATE,TODATE,SUMMTEXT,AMTGBN,TAXYEARMON,TAXNO,VOCHNO,"
                    strFormat = strFormat & " RMSNO,ERRCODE,ERRMSG,PAYCODE,MEDFLAG,"
                    strFormat = strFormat & " DENSE_RANK() OVER(ORDER BY CUSTOMERCODE DESC) TRANSRANK"
                    strFormat = strFormat & " FROM("
                    strFormat = strFormat & " 	SELECT "
                    strFormat = strFormat & " 	'1' SORT,"
                    strFormat = strFormat & " 	'1' GFLAG,"
                    strFormat = strFormat & " 	CASE isnull(b.postingdate,'') when '' then A.DEMANDDAY else b.postingdate end as postingdate,"
                    strFormat = strFormat & " 	replace(DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),'-','') customercode,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CUSTNAME,"
                    strFormat = strFormat & " 	case isnull(b.summ,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR공중파수수료반환' else b.summ end as summ,"
                    strFormat = strFormat & " 	CASE isnull(b.ba,'') when '' then dbo.SC_GET_BA(a.dept_cd) else b.ba end as BA,"
                    strFormat = strFormat & " 	CASE isnull(b.costcenter,'') when '' then dbo.SC_GET_CCTR(a.dept_cd) else b.costcenter end as costcenter,"
                    strFormat = strFormat & " 	DBO.SC_DEPT_NAME_FUN(A.DEPT_CD) DEPT_NAME, "
                    strFormat = strFormat & " 	case isnull(b.sumamt,0) when 0 then ISNULL(MED_TV,0) + ISNULL(MED_RD,0) +ISNULL(MED_DMB,0) else isnull(b.sumamt,0) end amt, "
                    strFormat = strFormat & " 	0 vat, "
                    strFormat = strFormat & " 	CASE isnull(b.semu,'') when '' then '' else b.semu end as SEMU,"
                    strFormat = strFormat & " 	CASE isnull(b.BP,'') when '' then '8000' else b.BP end as BP,"
                    strFormat = strFormat & " 	CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY, "
                    strFormat = strFormat & " 	CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY  ),112) ELSE B.DUEDATE END AS DUEDATE, "
                    strFormat = strFormat & " 	'' VENDOR,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) REAL_MED_NAME,"
                    strFormat = strFormat & " 	'F' gbn,"
                    strFormat = strFormat & " 	CASE isnull(b.ACCOUNT,'') when '' then '558780' else b.account end as ACCOUNT, "
                    strFormat = strFormat & "  	CASE isnull(b.debtor,'') when '' then '404100' else b.debtor end as DEBTOR,"
                    strFormat = strFormat & "   CASE ISNULL(B.BMORDER,'') WHEN '' THEN 'AD0190' ELSE B.BMORDER END AS  BMORDER,"
                    strFormat = strFormat & "   CASE ISNULL(B.BANKTYPE,'') WHEN '' THEN '' ELSE B.BANKTYPE END AS  BANKTYPE,"
                    strFormat = strFormat & " 	CASE isnull(b.documentdate,'') when '' then A.DEMANDDAY else b.documentdate end as documentdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.fromdate end as  fromdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.todate end as  todate,"
                    strFormat = strFormat & " 	case isnull(b.summtext,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR공중파수수료반환' else b.summ end as summtext,"
                    strFormat = strFormat & " 	case when ISNULL(MED_TV,0) + ISNULL(MED_RD,0) +ISNULL(MED_DMB,0) < 0 then '-' else '+' end AMTGBN,"
                    strFormat = strFormat & " 	A.YEARMON TAXYEARMON,"
                    strFormat = strFormat & " 	A.SEQ TAXNO,"
                    strFormat = strFormat & " 	CASE isnull(A.VOCHNO,'') WHEN '' THEN '' ELSE A.VOCHNO END VOCHNO,"
                    strFormat = strFormat & " 	B.RMSNO,"
                    strFormat = strFormat & " 	B.ERRCODE,"
                    strFormat = strFormat & " 	B.ERRMSG,"
                    strFormat = strFormat & " 	'' PAYCODE,"
                    strFormat = strFormat & " 	'A' MEDFLAG,"
                    strFormat = strFormat & " 	dense_rank() over(order by a.clientcode desc) rank"
                    strFormat = strFormat & " 	FROM SC_FEE_MST A"
                    strFormat = strFormat & " 	LEFT JOIN MD_FEEVOCH_MST B "
                    strFormat = strFormat & " 	ON A.YEARMON = B.TAXYEARMON AND A.SEQ = B.TAXNO AND B.GBN = 'F' AND B.MEDFLAG = 'A' "
                    strFormat = strFormat & " 	WHERE 1=1 "
                    strFormat = strFormat & " 	AND A.CONFIRMFLAG = 1"
                    strFormat = strFormat & " 	and isnull(A.attr10,0) <> 999999"
                    strFormat = strFormat & " 	and ISNULL(A.MED_TV,0) + ISNULL(A.MED_RD,0) +ISNULL(A.MED_DMB,0) <> 0 "
                    strFormat = strFormat & " 	{0}"
                    strFormat = strFormat & " 	UNION ALL"
                    strFormat = strFormat & " 	SELECT "
                    strFormat = strFormat & " 	'2' SORT,"
                    strFormat = strFormat & " 	'1' GFLAG,"
                    strFormat = strFormat & " 	CASE isnull(b.postingdate,'') when '' then A.DEMANDDAY else b.postingdate end as postingdate,"
                    strFormat = strFormat & " 	replace(DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),'-','') customercode,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CUSTNAME,"
                    strFormat = strFormat & " 	case isnull(b.summ,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR케이블수수료반환' else b.summ end as summ,"
                    strFormat = strFormat & " 	CASE isnull(b.ba,'') when '' then dbo.SC_GET_BA(a.dept_cd) else b.ba end as BA,"
                    strFormat = strFormat & " 	CASE isnull(b.costcenter,'') when '' then dbo.SC_GET_CCTR(a.dept_cd) else b.costcenter end as costcenter,"
                    strFormat = strFormat & " 	DBO.SC_DEPT_NAME_FUN(A.DEPT_CD) DEPT_NAME, "
                    strFormat = strFormat & " 	case isnull(b.sumamt,0) when 0 then case when isnull(A.MED_CATV,0) < 0 then abs(isnull(A.MED_CATV,0)) else  dbo.lpad(A.MED_CATV,13,'0') end else isnull(b.sumamt,0) end amt, "
                    strFormat = strFormat & " 	0 vat, "
                    strFormat = strFormat & " 	CASE isnull(b.semu,'') when '' then '' else b.semu end as SEMU,"
                    strFormat = strFormat & " 	CASE isnull(b.BP,'') when '' then '8000' else b.BP end as BP,"
                    strFormat = strFormat & " 	CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY, "
                    strFormat = strFormat & " 	CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY  ),112) ELSE B.DUEDATE END AS DUEDATE, "
                    strFormat = strFormat & " 	'' VENDOR,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) REAL_MED_NAME,"
                    strFormat = strFormat & " 	'F' gbn,"
                    strFormat = strFormat & " 	CASE isnull(b.ACCOUNT,'') when '' then '558780' else b.account end as ACCOUNT, "
                    strFormat = strFormat & "  	CASE isnull(b.debtor,'') when '' then '404100' else b.debtor end as DEBTOR,"
                    strFormat = strFormat & "   CASE ISNULL(B.BMORDER,'') WHEN '' THEN 'AD0410' ELSE B.BMORDER END AS  BMORDER,"
                    strFormat = strFormat & "   CASE ISNULL(B.BANKTYPE,'') WHEN '' THEN '' ELSE B.BANKTYPE END AS  BANKTYPE,"
                    strFormat = strFormat & " 	CASE isnull(b.documentdate,'') when '' then A.DEMANDDAY else b.documentdate end as documentdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.fromdate end as  fromdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.todate end as  todate,"
                    strFormat = strFormat & " 	case isnull(b.summtext,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR케이블수수료반환' else b.summ end as summtext,"
                    strFormat = strFormat & " 	case when isnull(A.MED_CATV,0) < 0 then '-' else '+' end AMTGBN,"
                    strFormat = strFormat & " 	A.YEARMON TAXYEARMON,"
                    strFormat = strFormat & " 	A.SEQ TAXNO,"
                    strFormat = strFormat & " 	CASE isnull(A.VOCHNO,'') WHEN '' THEN '' ELSE A.VOCHNO END VOCHNO,"
                    strFormat = strFormat & " 	B.RMSNO,"
                    strFormat = strFormat & " 	B.ERRCODE,"
                    strFormat = strFormat & " 	B.ERRMSG,"
                    strFormat = strFormat & " 	'' PAYCODE,"
                    strFormat = strFormat & " 	'A2' MEDFLAG ,"
                    strFormat = strFormat & " 	dense_rank() over(order by a.clientcode desc) rank"
                    strFormat = strFormat & " 	FROM SC_FEE_MST A"
                    strFormat = strFormat & " 	LEFT JOIN MD_FEEVOCH_MST B "
                    strFormat = strFormat & " 	ON A.YEARMON = B.TAXYEARMON AND A.SEQ = B.TAXNO AND B.GBN = 'F' AND B.MEDFLAG = 'A2' "
                    strFormat = strFormat & " 	WHERE 1=1 "
                    strFormat = strFormat & " 	AND A.CONFIRMFLAG = 1"
                    strFormat = strFormat & " 	and isnull(A.attr10,0) <> 999999"
                    strFormat = strFormat & " 	and isnull(A.MED_CATV,0) <> 0 "
                    strFormat = strFormat & " 	{0}"
                    strFormat = strFormat & " 	UNION ALL"
                    strFormat = strFormat & " 	SELECT "
                    strFormat = strFormat & " 	'3' SORT,"
                    strFormat = strFormat & " 	'1' GFLAG,"
                    strFormat = strFormat & " 	CASE isnull(b.postingdate,'') when '' then A.DEMANDDAY else b.postingdate end as postingdate,"
                    strFormat = strFormat & " 	replace(DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),'-','') customercode,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CUSTNAME,"
                    strFormat = strFormat & " 	case isnull(b.summ,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR인쇄수수료반환' else b.summ end as summ,"
                    strFormat = strFormat & " 	CASE isnull(b.ba,'') when '' then dbo.SC_GET_BA(a.dept_cd) else b.ba end as BA,"
                    strFormat = strFormat & " 	CASE isnull(b.costcenter,'') when '' then dbo.SC_GET_CCTR(a.dept_cd) else b.costcenter end as costcenter,"
                    strFormat = strFormat & " 	DBO.SC_DEPT_NAME_FUN(A.DEPT_CD) DEPT_NAME, "
                    strFormat = strFormat & " 	case isnull(b.sumamt,0) when 0 then case when isnull(A.MED_PAP,0) < 0 then abs(isnull(A.MED_PAP,0)) else  dbo.lpad(A.MED_PAP,13,'0') end else isnull(b.sumamt,0) end amt, "
                    strFormat = strFormat & " 	0 vat, "
                    strFormat = strFormat & " 	CASE isnull(b.semu,'') when '' then '' else b.semu end as SEMU,"
                    strFormat = strFormat & " 	CASE isnull(b.BP,'') when '' then '8000' else b.BP end as BP,"
                    strFormat = strFormat & " 	CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY, "
                    strFormat = strFormat & " 	CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY  ),112) ELSE B.DUEDATE END AS DUEDATE, "
                    strFormat = strFormat & " 	'' VENDOR,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) REAL_MED_NAME,"
                    strFormat = strFormat & " 	'F' gbn,"
                    strFormat = strFormat & " 	CASE isnull(b.ACCOUNT,'') when '' then '558780' else b.account end as ACCOUNT, "
                    strFormat = strFormat & "  	CASE isnull(b.debtor,'') when '' then '404100' else b.debtor end as DEBTOR,"
                    strFormat = strFormat & "   CASE ISNULL(B.BMORDER,'') WHEN '' THEN 'AD0410' ELSE B.BMORDER END AS  BMORDER,"
                    strFormat = strFormat & "   CASE ISNULL(B.BANKTYPE,'') WHEN '' THEN '' ELSE B.BANKTYPE END AS  BANKTYPE,"
                    strFormat = strFormat & " 	CASE isnull(b.documentdate,'') when '' then A.DEMANDDAY else b.documentdate end as documentdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.fromdate end as  fromdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.todate end as  todate,"
                    strFormat = strFormat & " 	case isnull(b.summtext,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR인쇄수수료반환' else b.summ end as summtext,"
                    strFormat = strFormat & " 	case when isnull(A.MED_PAP,0) < 0 then '-' else '+' end AMTGBN,"
                    strFormat = strFormat & " 	A.YEARMON TAXYEARMON,"
                    strFormat = strFormat & " 	A.SEQ TAXNO,"
                    strFormat = strFormat & " 	CASE isnull(A.VOCHNO,'') WHEN '' THEN '' ELSE A.VOCHNO END VOCHNO,"
                    strFormat = strFormat & " 	B.RMSNO,"
                    strFormat = strFormat & " 	B.ERRCODE,"
                    strFormat = strFormat & " 	B.ERRMSG,"
                    strFormat = strFormat & " 	'' PAYCODE,"
                    strFormat = strFormat & " 	'B' MEDFLAG ,"
                    strFormat = strFormat & " 	dense_rank() over(order by a.clientcode desc) rank"
                    strFormat = strFormat & " 	FROM SC_FEE_MST A"
                    strFormat = strFormat & " 	LEFT JOIN MD_FEEVOCH_MST B "
                    strFormat = strFormat & " 	ON A.YEARMON = B.TAXYEARMON AND A.SEQ = B.TAXNO AND B.GBN = 'F' AND B.MEDFLAG = 'B' "
                    strFormat = strFormat & " 	WHERE 1=1 "
                    strFormat = strFormat & " 	AND A.CONFIRMFLAG = 1"
                    strFormat = strFormat & " 	and isnull(A.attr10,0) <> 999999"
                    strFormat = strFormat & " 	and isnull(A.MED_PAP,0) <> 0 "
                    strFormat = strFormat & " 	{0}"
                    strFormat = strFormat & " 	UNION ALL"
                    strFormat = strFormat & " 	SELECT "
                    strFormat = strFormat & " 	'4' SORT,"
                    strFormat = strFormat & " 	'1' GFLAG,"
                    strFormat = strFormat & " 	CASE isnull(b.postingdate,'') when '' then A.DEMANDDAY else b.postingdate end as postingdate,"
                    strFormat = strFormat & " 	replace(DBO.SC_GET_BUSINO_FUN(A.CLIENTCODE),'-','') customercode,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE) CUSTNAME,"
                    strFormat = strFormat & " 	case isnull(b.summ,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR옥외수수료반환' else b.summ end as summ,"
                    strFormat = strFormat & " 	CASE isnull(b.ba,'') when '' then dbo.SC_GET_BA(a.dept_cd) else b.ba end as BA,"
                    strFormat = strFormat & " 	CASE isnull(b.costcenter,'') when '' then dbo.SC_GET_CCTR(a.dept_cd) else b.costcenter end as costcenter,"
                    strFormat = strFormat & " 	DBO.SC_DEPT_NAME_FUN(A.DEPT_CD) DEPT_NAME, "
                    strFormat = strFormat & " 	case isnull(b.sumamt,0) when 0 then case when isnull(A.MED_OUT,0) < 0 then abs(isnull(A.MED_OUT,0)) else  dbo.lpad(A.MED_OUT,13,'0') end else isnull(b.sumamt,0) end amt, "
                    strFormat = strFormat & " 	0 vat, "
                    strFormat = strFormat & " 	CASE isnull(b.semu,'') when '' then '' else b.semu end as SEMU,"
                    strFormat = strFormat & " 	CASE isnull(b.BP,'') when '' then '8000' else b.BP end as BP,"
                    strFormat = strFormat & " 	CASE ISNULL(B.DEMANDDAY,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY ),112) ELSE B.DEMANDDAY END AS DEMANDDAY, "
                    strFormat = strFormat & " 	CASE ISNULL(B.DUEDATE,'') WHEN '' THEN CONVERT(CHAR(8),DATEADD(DD,60,A.DEMANDDAY  ),112) ELSE B.DUEDATE END AS DUEDATE, "
                    strFormat = strFormat & " 	'' VENDOR,"
                    strFormat = strFormat & " 	DBO.SC_GET_HIGHCUSTNAME_FUN(A.CLIENTCODE) REAL_MED_NAME,"
                    strFormat = strFormat & " 	'F' gbn,"
                    strFormat = strFormat & " 	CASE isnull(b.ACCOUNT,'') when '' then '558780' else b.account end as ACCOUNT, "
                    strFormat = strFormat & "  	CASE isnull(b.debtor,'') when '' then '404100' else b.debtor end as DEBTOR,"
                    strFormat = strFormat & "   CASE ISNULL(B.BMORDER,'') WHEN '' THEN 'AD0410' ELSE B.BMORDER END AS  BMORDER,"
                    strFormat = strFormat & "   CASE ISNULL(B.BANKTYPE,'') WHEN '' THEN '' ELSE B.BANKTYPE END AS  BANKTYPE,"
                    strFormat = strFormat & " 	CASE isnull(b.documentdate,'') when '' then A.DEMANDDAY else b.documentdate end as documentdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.prepayment end as  prepayment,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.fromdate end as  fromdate,"
                    strFormat = strFormat & " 	CASE isnull(b.prepayment,'') when '' then '' else b.todate end as  todate,"
                    strFormat = strFormat & " 	case isnull(b.summtext,'') when '' then  convert(char(11),RTRIM(LTRIM(DBO.SC_GET_HIGHCUSTNAME_FUN(CLIENTCODE))))+'AOR옥외수수료반환' else b.summ end as summtext,"
                    strFormat = strFormat & " 	case when isnull(A.MED_OUT,0) < 0 then '-' else '+' end AMTGBN,"
                    strFormat = strFormat & " 	A.YEARMON TAXYEARMON,"
                    strFormat = strFormat & " 	A.SEQ TAXNO,"
                    strFormat = strFormat & " 	CASE ISNULL(A.VOCHNO,'') WHEN '' THEN '' ELSE A.VOCHNO END VOCHNO,"
                    strFormat = strFormat & " 	B.RMSNO,"
                    strFormat = strFormat & " 	B.ERRCODE,"
                    strFormat = strFormat & " 	B.ERRMSG,"
                    strFormat = strFormat & " 	'' PAYCODE,"
                    strFormat = strFormat & " 	'D' MEDFLAG ,"
                    strFormat = strFormat & " 	dense_rank() over(order by a.clientcode desc) rank"
                    strFormat = strFormat & " 	FROM SC_FEE_MST A"
                    strFormat = strFormat & " 	LEFT JOIN MD_FEEVOCH_MST B "
                    strFormat = strFormat & " 	ON A.YEARMON = B.TAXYEARMON AND A.SEQ = B.TAXNO AND B.GBN = 'F' AND B.MEDFLAG = 'D' "
                    strFormat = strFormat & " 	WHERE 1=1 "
                    strFormat = strFormat & " 	AND A.CONFIRMFLAG = 1"
                    strFormat = strFormat & " 	and isnull(A.attr10,0) <> 999999"
                    strFormat = strFormat & " 	AND isnull(A.MED_OUT,0) <> 0 "
                    strFormat = strFormat & " 	{0}"
                    strFormat = strFormat & " )A"

                End If

                strSQL = String.Format(strFormat, strWhere)
                vntData = .mobjSCGLSql.SQLSelectArr(strSQL, intRowCnt, intColCnt, , True)
                Return vntData
            Catch err As Exception
                Throw RaiseSysErr(err, CLASS_NAME & ".SelectRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
            End Try
        End With
    End Function

    Public Function ProcessRtn(ByVal strInfoXML As String, _
                               ByVal vntData As Object, _
                               ByVal strRETURNLIST As String, _
                               ByVal strGBN As String, _
                               ByVal strMEDFLAG As String) As Integer
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim strPOSTINGDATE, strDEMANDDAY, strDOCUMENTDATE As String
        Dim strFROMDATE, strTODATE, strDUEDATE

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                If IsArray(vntData) Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_FEEVOCH_MST = New ceMD_FEEVOCH_MST(mobjSCGLConfig)
                    '''vntData의 컬럼수, 로우수를 변수입력

                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop
                    If strGBN = "F" Then
                        For i = 1 To intRows
                            If GetElement(vntData, "CHK", intColCnt, i) = "1" Then
                                If GetElement(vntData, "POSTINGDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strPOSTINGDATE = Replace(GetElement(vntData, "POSTINGDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR) <> "" Then strDEMANDDAY = Replace(GetElement(vntData, "DEMANDDAY", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "DOCUMENTDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strDOCUMENTDATE = Replace(GetElement(vntData, "DOCUMENTDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "FROMDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strFROMDATE = Replace(GetElement(vntData, "FROMDATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "TODATE", intColCnt, i, OPTIONAL_STR) <> "" Then strTODATE = Replace(GetElement(vntData, "TODATE", intColCnt, i, OPTIONAL_STR), "-", "")
                                If GetElement(vntData, "DUEDATE", intColCnt, i, OPTIONAL_STR) <> "" Then strDUEDATE = Replace(GetElement(vntData, "DUEDATE", intColCnt, i, OPTIONAL_STR), "-", "")

                                intRtn = InsertRtn(vntData, intColCnt, i, strPOSTINGDATE, strDEMANDDAY, strFROMDATE, strTODATE, strDOCUMENTDATE, strDUEDATE, "")
                            End If
                        Next
                    End If
                    intRtn = UpdateRtn(strInfoXML, strRETURNLIST, strGBN, strMEDFLAG)
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".ProcessRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_FEEVOCH_MST.Dispose()
            End Try
        End With
    End Function

    Public Function UpdateRtn(ByVal strInfoXML As String, _
                              ByVal strRETURNLIST As String, _
                              ByVal strGBN As String, _
                              ByVal strMEDFLAG As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim firstArray
        Dim secondArray
        Dim strTAXYEARMON As String
        Dim intTAXNO As Integer
        Dim strDOC_STATUS As String
        Dim strDOC_MESSAGE As String
        Dim strVOCHNO As String
        Dim strIF_KEY As String

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                '.mobjSCGLSql.SQLConnect(.DBConnStr)
                '.mobjSCGLSql.SQLBeginTrans()
                firstArray = Split(strRETURNLIST, ":", -1, CompareMethod.Text)
                If strRETURNLIST <> "" Then

                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_FEEVOCH_MST = New ceMD_FEEVOCH_MST(mobjSCGLConfig)

                    For i = 0 To firstArray.length - 1
                        secondArray = Split(firstArray(i), "|", -1, CompareMethod.Text)

                        strTAXYEARMON = secondArray(0)
                        intTAXNO = CInt(secondArray(1))
                        strDOC_STATUS = secondArray(2)
                        strDOC_MESSAGE = Replace(secondArray(3), "'", "''")
                        strVOCHNO = secondArray(4)
                        strIF_KEY = secondArray(5)

                        If strDOC_STATUS = "S" Then
                            strDOC_STATUS = ""
                            strDOC_MESSAGE = ""
                        Else
                            strDOC_STATUS = "1"
                        End If

                        intRtn = UpdateRtn_VOCHNO(strGBN, strMEDFLAG, strTAXYEARMON, intTAXNO, strDOC_STATUS, strDOC_MESSAGE, strVOCHNO, strIF_KEY)
                    Next

                End If
                '.mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                ' .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".UpdateRtn")
            Finally
                '.mobjSCGLSql.SQLDisconnect()
                mobjceMD_FEEVOCH_MST.Dispose()

            End Try
        End With
    End Function

    Public Function VOCHDELL(ByVal strInfoXML As String, _
                               ByVal strRETURNLIST As String, _
                               ByVal strGBN As String, _
                               ByVal strMEDFLAG As String) As Integer

        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim firstArray
        Dim secondArray
        Dim strTAXYEARMON As String
        Dim intTAXNO As Integer
        Dim strDOC_STATUS As String
        Dim strDOC_MESSAGE As String
        Dim strVOCHNO As String

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                firstArray = Split(strRETURNLIST, ":", -1, CompareMethod.Text)
                If strRETURNLIST <> "" Then
                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_FEEVOCH_MST = New ceMD_FEEVOCH_MST(mobjSCGLConfig)

                    For i = 0 To firstArray.length - 1
                        secondArray = Split(firstArray(i), "|", -1, CompareMethod.Text)

                        strTAXYEARMON = secondArray(0)
                        intTAXNO = CInt(secondArray(1))
                        strDOC_STATUS = secondArray(2)
                        strDOC_MESSAGE = Replace(secondArray(3), "'", "''")
                        strVOCHNO = secondArray(4)

                        If strDOC_STATUS = "S" Then
                            '전표내역 삭제
                            intRtn = mobjceMD_FEEVOCH_MST.Delete_vochno(strTAXYEARMON, strVOCHNO, strGBN)
                            '신탁의 전표번호 ''로 업데이트
                            intRtn = mobjceMD_FEEVOCH_MST.Update_vochno(strTAXYEARMON, intTAXNO, strMEDFLAG, strGBN)
                        ElseIf strDOC_STATUS = "E" Then
                            '전표삭제시 SAP오류는 오류전표로 보내기위함.
                            strDOC_STATUS = "1"
                            intRtn = mobjceMD_FEEVOCH_MST.UpdateRtn_DELETEERR(strGBN, strTAXYEARMON, intTAXNO, strDOC_STATUS, strDOC_MESSAGE, strVOCHNO)
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".VOCHDELL")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_FEEVOCH_MST.Dispose()

            End Try
        End With
    End Function

    '오류전표 삭제
    Public Function DeleteRtn(ByVal strInfoXML As String, _
                              ByVal vntData As Object) As Integer
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblID As Double '자동 ID 를사용할 때만 사용
        Dim strSC_EMP_STATUS As String
        Dim vntData2 As Object
        Dim intSEQ As Double

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                If IsArray(vntData) Then

                    '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                    mobjceMD_FEEVOCH_MST = New ceMD_FEEVOCH_MST(mobjSCGLConfig)

                    intColCnt = UBound(vntData, 1) : intRows = UBound(vntData, 2)
                    '''해당하는Row 만큼 Loop
                    For i = 1 To intRows
                        If Trim(GetElement(vntData, "CHK", intColCnt, i)) = "" Then
                        Else
                            If GetElement(vntData, "CHK", intColCnt, i) = 1 And GetElement(vntData, "ERRCODE", intColCnt, i) = 1 Then
                                intRtn = DeleteRtn_ERR(vntData, intColCnt, i)
                            End If
                        End If
                    Next
                End If
                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".DeleteRtn")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_FEEVOCH_MST.Dispose()
            End Try
        End With
    End Function

    Public Function DeleteRtn_GANG(ByVal strInfoXML As String, _
                                   ByVal strTAXYEARMON As String, _
                                   ByVal intTAXNO As String, _
                                   ByVal strVOCHNO As String, _
                                   ByVal strGBN As String, _
                                   ByVal strMEDFLAG As String) As Integer
        Dim intRtn As Integer
        Dim i, intColCnt, intRows As Integer
        Dim dblID As Double '자동 ID 를사용할 때만 사용
        Dim strSC_EMP_STATUS As String
        Dim vntData2 As Object
        Dim intSEQ As Double

        SetConfig(strInfoXML)
        With mobjSCGLConfig
            Try
                .mobjSCGLSql.SQLConnect(.DBConnStr)
                .mobjSCGLSql.SQLBeginTrans()

                '''사용할 Entity 개체생성(Config 정보를 넘겨생성)
                mobjceMD_FEEVOCH_MST = New ceMD_FEEVOCH_MST(mobjSCGLConfig)

                intRtn = mobjceMD_FEEVOCH_MST.Delete_vochno(strTAXYEARMON, strVOCHNO, strGBN)
                '신탁의 전표번호 ''로 업데이트
                intRtn = mobjceMD_FEEVOCH_MST.Update_vochno(strTAXYEARMON, intTAXNO, strMEDFLAG, strGBN)

                .mobjSCGLSql.SQLCommitTrans()
                Return intRtn
            Catch err As Exception
                .mobjSCGLSql.SQLRollbackTrans()
                Throw RaiseSysErr(err, CLASS_NAME & ".DeleteRtn_GANG")
            Finally
                .mobjSCGLSql.SQLDisconnect()
                mobjceMD_FEEVOCH_MST.Dispose()
            End Try
        End With
    End Function
#End Region

#Region "GROUP BLOCK : 외부에 비공개 Method"

    Private Function InsertRtn(ByVal vntData As Object, _
                               ByVal intColCnt As Integer, _
                               ByVal intRow As Integer, _
                               ByVal strPOSTINGDATE As String, _
                               ByVal strDEMANDDAY As String, _
                               ByVal strFROMDATE As String, _
                               ByVal strTODATE As String, _
                               ByVal strDOCUMENTDATE As String, _
                               ByVal strDUEDATE As String, _
                               ByVal strATTR01 As String) As Integer


        Dim intRtn As Integer
        intRtn = mobjceMD_FEEVOCH_MST.InsertDo( _
                                       strPOSTINGDATE, _
                                       GetElement(vntData, "CUSTOMERCODE", intColCnt, intRow), _
                                       GetElement(vntData, "SUMM", intColCnt, intRow), _
                                       GetElement(vntData, "BA", intColCnt, intRow), _
                                       GetElement(vntData, "COSTCENTER", intColCnt, intRow), _
                                       GetElement(vntData, "AMT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "VAT", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "SEMU", intColCnt, intRow), _
                                       GetElement(vntData, "BP", intColCnt, intRow), _
                                       strDEMANDDAY, _
                                       strDUEDATE, _
                                       GetElement(vntData, "VENDOR", intColCnt, intRow), _
                                       GetElement(vntData, "TAXYEARMON", intColCnt, intRow), _
                                       GetElement(vntData, "TAXNO", intColCnt, intRow, NULL_NUM, True), _
                                       GetElement(vntData, "GBN", intColCnt, intRow), _
                                       GetElement(vntData, "DEBTOR", intColCnt, intRow), _
                                       GetElement(vntData, "ACCOUNT", intColCnt, intRow), _
                                       strDOCUMENTDATE, _
                                       GetElement(vntData, "PAYCODE", intColCnt, intRow), _
                                       GetElement(vntData, "BANKTYPE", intColCnt, intRow), _
                                       GetElement(vntData, "BMORDER", intColCnt, intRow), _
                                       GetElement(vntData, "PREPAYMENT", intColCnt, intRow), _
                                       strFROMDATE, _
                                       strTODATE, _
                                       GetElement(vntData, "SUMMTEXT", intColCnt, intRow), _
                                       GetElement(vntData, "GFLAG", intColCnt, intRow), _
                                       "", _
                                       "", _
                                       GetElement(vntData, "MEDFLAG", intColCnt, intRow), _
                                       strATTR01)

        Return intRtn
    End Function

    Private Function UpdateRtn_VOCHNO(ByVal strGBN As String, _
                                  ByVal strMEDFLAG As String, _
                                  ByVal strTAXYEARMON As String, _
                                  ByVal intTAXNO As Integer, _
                                  ByVal strDOC_STATUS As String, _
                                  ByVal strDOC_MESSAGE As String, _
                                  ByVal strVOCHNO As String, _
                                  ByVal strIF_KEY As String) As Integer

        Dim intRtn As Integer

        intRtn = mobjceMD_FEEVOCH_MST.UpdateRtn_VOCHNO( _
                                                    strGBN, _
                                                    strMEDFLAG, _
                                                    strTAXYEARMON, _
                                                    intTAXNO, _
                                                    strDOC_STATUS, _
                                                    strDOC_MESSAGE, _
                                                    strVOCHNO, _
                                                    strIF_KEY)

        Return intRtn
    End Function

    Private Function DeleteRtn_ERR(ByVal vntData As Object, _
                                   ByVal intColCnt As Integer, _
                                   ByVal intRow As Integer) As Integer

        Dim intRtn As Integer

        intRtn = mobjceMD_FEEVOCH_MST.Delete_ERR(GetElement(vntData, "TAXYEARMON", intColCnt, intRow), _
                                                 GetElement(vntData, "TAXNO", intColCnt, intRow), _
                                                 GetElement(vntData, "GBN", intColCnt, intRow), _
                                                 GetElement(vntData, "MEDFLAG", intColCnt, intRow))

        Return intRtn
    End Function

#End Region
End Class


